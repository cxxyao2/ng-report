{"version":3,"file":"main.js","mappings":"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","sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/add-client/add-client.component.ts","./src/app/components/add-client/add-client.component.html","./src/app/components/add-product-details/add-product-details.component.ts","./src/app/components/add-product-details/add-product-details.component.html","./src/app/components/add-product/add-product.component.ts","./src/app/components/add-product/add-product.component.html","./src/app/components/add-role-to-user/add-role-to-user.component.ts","./src/app/components/add-role-to-user/add-role-to-user.component.html","./src/app/components/calendar/calendar.component.ts","./src/app/components/calendar/calendar.component.html","./src/app/components/change-color/change-color.component.ts","./src/app/components/change-color/change-color.component.html","./src/app/components/change-password/change-password.component.ts","./src/app/components/change-password/change-password.component.html","./src/app/components/contact-customer/contact-customer.component.ts","./src/app/components/contact-customer/contact-customer.component.html","./src/app/components/cookie-popup/cookie-popup.component.ts","./src/app/components/cookie-popup/cookie-popup.component.html","./src/app/components/email-to-us/email-to-us.component.ts","./src/app/components/email-to-us/email-to-us.component.html","./src/app/components/error/error.component.ts","./src/app/components/error/error.component.html","./src/app/components/find-store/find-store.component.ts","./src/app/components/find-store/find-store.component.html","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/components/forget-password/forget-password.component.ts","./src/app/components/forget-password/forget-password.component.html","./src/app/components/infinite-list/infinite-list.component.ts","./src/app/components/infinite-list/infinite-list.component.html","./src/app/components/logfilter/logfilter.component.ts","./src/app/components/logfilter/logfilter.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/loglist/loglist.component.ts","./src/app/components/loglist/loglist.component.html","./src/app/components/order-query/order-query.component.ts","./src/app/components/order-query/order-query.component.html","./src/app/components/pipeline-all/pipeline-all.component.ts","./src/app/components/pipeline-all/pipeline-all.component.html","./src/app/components/pipeline-authorized/pipeline-authorized.component.ts","./src/app/components/pipeline-authorized/pipeline-authorized.component.html","./src/app/components/pipelines/pipelines.component.ts","./src/app/components/pipelines/pipelines.component.html","./src/app/components/report-this-month/report-this-month.component.ts","./src/app/components/report-this-month/report-this-month.component.html","./src/app/components/report-this-year/report-this-year.component.ts","./src/app/components/report-this-year/report-this-year.component.html","./src/app/components/reset-password/reset-password.component.ts","./src/app/components/reset-password/reset-password.component.html","./src/app/components/scheduler/scheduler.component.ts","./src/app/components/scheduler/scheduler.component.html","./src/app/components/scroll-to-top/scroll-to-top.component.ts","./src/app/components/scroll-to-top/scroll-to-top.component.html","./src/app/components/shopping-cart/cart/cart-item/cart-item.component.ts","./src/app/components/shopping-cart/cart/cart-item/cart-item.component.html","./src/app/components/shopping-cart/cart/cart.component.ts","./src/app/components/shopping-cart/cart/cart.component.html","./src/app/components/shopping-cart/print-invoice/print-invoice.component.ts","./src/app/components/shopping-cart/print-invoice/print-invoice.component.html","./src/app/components/shopping-cart/product-item/product-item.component.ts","./src/app/components/shopping-cart/product-item/product-item.component.html","./src/app/components/shopping-cart/product-list/product-list.component.ts","./src/app/components/shopping-cart/product-list/product-list.component.html","./src/app/components/shopping-cart/wish-list/wish-list.component.ts","./src/app/components/shopping-cart/wish-list/wish-list.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/components/slide-shows/slide-shows.component.ts","./src/app/components/slide-shows/slide-shows.component.html","./src/app/components/success/success.component.ts","./src/app/components/success/success.component.html","./src/app/components/technical-support/technical-support.component.ts","./src/app/components/technical-support/technical-support.component.html","./src/app/components/todo/todo.component.ts","./src/app/components/todo/todo.component.html","./src/app/components/toolbar/menu-list-item/menu-list-item.component.ts","./src/app/components/toolbar/menu-list-item/menu-list-item.component.html","./src/app/components/toolbar/search-box/search-box.component.ts","./src/app/components/toolbar/search-box/search-box.component.html","./src/app/components/unique-pass/unique-pass.component.ts","./src/app/components/unique-pass/unique-pass.component.html","./src/app/config/constants.ts","./src/app/env.service.provider.ts","./src/app/env.service.ts","./src/app/form-select/form-select.component.ts","./src/app/form-select/form-select.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/interceptors/error.interceptor.ts","./src/app/interceptors/index.ts","./src/app/interceptors/network.interceptor.ts","./src/app/interceptors/xsrftoken.interceptor.ts","./src/app/material.module.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/page-not-found/page-not-found.component.html","./src/app/services/admin-service.guard.ts","./src/app/services/auth.guard.ts","./src/app/services/auth.service.ts","./src/app/services/cart.service.ts","./src/app/services/contact-plan.service.ts","./src/app/services/contact-record.service.ts","./src/app/services/create-graph-data.service.ts","./src/app/services/customer-authorize.service.ts","./src/app/services/customer.service.ts","./src/app/services/dialog.service.ts","./src/app/services/file-size.pipe.ts","./src/app/services/google-map.service.ts","./src/app/services/loading.service.ts","./src/app/services/logs.service.ts","./src/app/services/manager-service.guard.ts","./src/app/services/nav.service.ts","./src/app/services/order.service.ts","./src/app/services/pdfmake.service.ts","./src/app/services/product.service.ts","./src/app/services/reports.service.ts","./src/app/services/search-product.service.ts","./src/app/services/theme.service.ts","./src/app/services/unique-password.directive.ts","./src/app/services/unique-user.directive.ts","./src/app/services/user.resolver.ts","./src/app/services/user.service.ts","./src/app/services/wish-list.service.ts","./src/app/shared/animations/animate-card-list/animate-card-list.component.ts","./src/app/shared/animations/animate-card-list/animate-card-list.component.html","./src/app/shared/animations/animate-card/animate-card.component.ts","./src/app/shared/animations/animate-card/animate-card.component.html","./src/app/shared/animations/game-card/game-card.component.ts","./src/app/shared/animations/game-card/game-card.component.html","./src/app/shared/animations/router.animations.ts","./src/app/shared/animations/triggers.animations.ts","./src/app/shared/chips-multi-select/chips-multi-select.component.ts","./src/app/shared/chips-multi-select/chips-multi-select.component.html","./src/app/shared/confirm/confirm.component.ts","./src/app/shared/confirm/confirm.component.html","./src/app/shared/data-list/data-list.component.ts","./src/app/shared/data-list/data-list.component.html","./src/app/utils/date-convert.util.ts","./src/app/utils/file-convert.util.ts","./src/app/utils/make-mock-data.ts","./src/environments/environment.ts","./src/main.ts","./src/app/lazy-components|lazy|/^\\.\\/.*\\/.*\\.component$/|groupOptions: {}|namespace object"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss'],\n})\nexport class AboutComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  categories: string[] = ['Clothing', 'Shoes', 'Electronics', 'Books'];\n  chipsControl = new FormControl(['Books']);\n  chipsControlValue$ = this.chipsControl.valueChanges;\n  disabledControl = new FormControl(false);\n\n  setChipsValue(): void {\n    this.chipsControl.setValue(['Shoes', 'Electronics']);\n  }\n  constructor() {}\n\n  ngOnInit(): void {\n    this.disabledControl.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((val) => {\n        if (val) {\n          this.chipsControl.disable();\n        } else {\n          this.chipsControl.enable();\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"content\">\n  <app-chips-multi-select [options]=\"categories\" [formControl]=\"chipsControl\">\n  </app-chips-multi-select>\n\n  <mat-divider></mat-divider>\n\n  <h3>Value: {{ chipsControlValue$ | async }}</h3>\n\n  <mat-divider></mat-divider>\n\n  <mat-checkbox [formControl]=\"disabledControl\">Disabled</mat-checkbox>\n\n  <mat-divider></mat-divider>\n\n  <button mat-raised-button (click)=\"setChipsValue()\">Patch Value</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { TodoComponent } from './components/todo/todo.component';\nimport { GameCardComponent } from './shared/animations/game-card/game-card.component';\nimport { ProductListComponent } from './components/shopping-cart/product-list/product-list.component';\nimport { CartComponent } from './components/shopping-cart/cart/cart.component';\nimport { PrintInvoiceComponent } from './components/shopping-cart/print-invoice/print-invoice.component';\nimport { LoglistComponent } from './components/loglist/loglist.component';\nimport { InfiniteListComponent } from './components/infinite-list/infinite-list.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { FindStoreComponent } from './components/find-store/find-store.component';\nimport { EmailToUsComponent } from './components/email-to-us/email-to-us.component';\nimport { SchedulerComponent } from './components/scheduler/scheduler.component';\nimport { AddProductComponent } from './components/add-product/add-product.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { PipelinesComponent } from './components/pipelines/pipelines.component';\nimport { AuthGuard } from './services/auth.guard';\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { ReportThisMonthComponent } from './components/report-this-month/report-this-month.component';\nimport { ReportThisYearComponent } from './components/report-this-year/report-this-year.component';\nimport { OrderQueryComponent } from './components/order-query/order-query.component';\nimport { ContactCustomerComponent } from './components/contact-customer/contact-customer.component';\nimport { UserResolver } from './services/user.resolver';\nimport { AddRoleToUserComponent } from './components/add-role-to-user/add-role-to-user.component';\nimport { AdminServiceGuard } from './services/admin-service.guard';\nimport { ManagerServiceGuard } from './services/manager-service.guard';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignUpComponent },\n  { path: 'forget-password', component: ForgetPasswordComponent },\n  { path: 'reset-password', component: ResetPasswordComponent },\n  {\n    path: 'change-password',\n    component: ChangePasswordComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'home', component: HomeComponent }, // public no-login\n  {\n    path: 'add-product',\n    component: AddProductComponent,\n    canActivate: [AdminServiceGuard],\n  }, // administrator role\n  {\n    path: 'authorize',\n    component: AddRoleToUserComponent,\n    canActivate: [AdminServiceGuard],\n    resolve: { users: UserResolver },\n  },\n  {\n    path: 'dashboard',\n    loadChildren: () =>\n      import('./admin/admin.module').then((m) => m.AdminModule),\n    canLoad: [AdminServiceGuard],\n  }, // // user profile\n  {\n    path: 'list-logs',\n    component: LoglistComponent,\n    canActivate: [AdminServiceGuard],\n  }, // administrator role\n  {\n    path: 'assign-task',\n    component: SchedulerComponent,\n    canActivate: [ManagerServiceGuard],\n  }, // manager role\n  {\n    path: 'monthly-analyze',\n    component: ReportThisMonthComponent,\n    canActivate: [ManagerServiceGuard],\n  }, // manager role\n  {\n    path: 'yearly-analyze',\n    component: ReportThisYearComponent,\n    canActivate: [ManagerServiceGuard],\n  }, // manager role\n  { path: 'todo', component: TodoComponent, canActivate: [AuthGuard] }, // salesperson role\n  {\n    path: 'product-list',\n    component: ProductListComponent,\n    canActivate: [AuthGuard],\n  }, // salesperson role\n  {\n    path: 'pipeline',\n    component: PipelinesComponent,\n    canActivate: [AuthGuard],\n  }, // manager, salesperson\n  {\n    path: 'add-client',\n    component: AddClientComponent,\n    canActivate: [AuthGuard],\n  }, // salesperson role\n\n  {\n    path: 'personal',\n    children: [\n      {\n        path: 'contact-customer',\n        component: ContactCustomerComponent,\n        canActivate: [AuthGuard],\n      },\n      {\n        path: 'order-review',\n        component: OrderQueryComponent,\n        canActivate: [AuthGuard],\n      },\n    ],\n  }, // salesperson role\n\n  { path: 'cart', component: CartComponent, canActivate: [AuthGuard] },\n  {\n    path: 'cart/print/:orderHeaderId',\n    component: PrintInvoiceComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'email-to-us',\n    component: EmailToUsComponent,\n    canActivate: [AuthGuard],\n  },\n  {\n    path: 'find-store',\n    component: FindStoreComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: 'game-card', component: GameCardComponent, canActivate: [AuthGuard] }, // technique features\n  {\n    path: 'infinite-list',\n    component: InfiniteListComponent,\n    canActivate: [AuthGuard],\n  },\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import {\n  Component,\n  ViewChild,\n  ElementRef,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { CookieService } from 'ngx-cookie-service';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MatBottomSheet } from '@angular/material/bottom-sheet';\nimport { CookiePopupComponent } from './components/cookie-popup/cookie-popup.component';\n\nimport { AuthService } from './services/auth.service';\nimport { CartService } from './services/cart.service';\nimport { ThemeService } from './services/theme.service';\nimport { NavService } from './services/nav.service';\nimport { NavItem } from './models/nav-item';\nimport { LoadingService } from './services/loading.service';\nimport { RouterOutlet } from '@angular/router';\nimport { MatSidenav } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements AfterViewInit, OnDestroy {\n  @ViewChild('drawer') appDrawer!: MatSidenav;\n  @ViewChild('spin') spin?: ElementRef;\n  destroy$: Subject<void> = new Subject<void>();\n  title = 'ng-center';\n  isDark = false;\n  currentLanguage = 'English';\n  siteLocale = 'en';\n  cookieValue = '';\n\n  languageList = [\n    { code: 'en', label: 'English' },\n    { code: 'fr', label: 'Français' },\n  ];\n\n  commonItems: NavItem[] = [{ label: 'Home', icon: 'home', route: 'home' }];\n  adminItems: NavItem[] = [\n    { label: 'Products', icon: 'addchart', route: 'add-product' },\n    { label: 'Authorization', icon: 'vpn_key', route: 'authorize' },\n    { label: 'Logs', icon: 'event_note', route: 'list-logs' },\n  ];\n\n  managerItems: NavItem[] = [\n    {\n      label: 'Monthly Data Analyse',\n      icon: 'bar_chart',\n      route: 'monthly-analyze',\n    },\n    {\n      label: 'Yearly Data Analyse',\n      icon: 'bar_chart',\n      route: 'yearly-analyze',\n    },\n    { label: 'Pipeline Management', icon: 'contact_page', route: 'pipeline' },\n    { label: 'Task Management', icon: 'edit_calendar', route: 'assign-task' },\n  ];\n\n  salespersonItems: NavItem[] = [\n    { label: 'Contact Management', icon: 'location_on', route: 'todo' },\n    { label: 'Place Order', icon: 'add_shopping_cart', route: 'product-list' },\n    {\n      label: 'Lead Management',\n      icon: 'person_add',\n      route: 'add-client',\n    },\n    {\n      label: 'Personal Data',\n      icon: 'analytics',\n      route: 'personal',\n      children: [\n        {\n          label: 'Contact Customer',\n          icon: 'contact_page',\n          route: 'personal/contact-customer',\n        },\n        { label: 'Order Review', icon: 'sell', route: 'personal/order-review' },\n      ],\n    },\n  ];\n\n  referItems: NavItem[] = [\n    {\n      label: 'Find A Store',\n      icon: 'storefront',\n      route: 'find-store',\n    },\n    { label: 'Contact US', icon: 'email', route: 'email-to-us' },\n\n    { label: 'Infinite List', icon: 'toc', route: 'infinite-list' },\n    { label: 'Flip Card', icon: 'gamepad', route: 'game-card' },\n  ];\n\n  loading$ = this.loader.laoding$;\n\n  constructor(\n    private breakpointObserver: BreakpointObserver,\n    public themeService: ThemeService,\n    private navService: NavService,\n    public cartService: CartService,\n    public authService: AuthService,\n    public loader: LoadingService,\n    private cookieService: CookieService,\n    private _bottomSheet: MatBottomSheet\n  ) {}\n\n  ngOnInit(): void {\n    this.siteLocale = window.location.pathname.split('/')[1];\n    this.currentLanguage =\n      this.languageList.find((lang) => lang.code === this.siteLocale)?.label ||\n      'English';\n    this.breakpointObserver\n      .observe(['(max-width: 800px)'])\n      .pipe(\n        map((result) => result.matches),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((data) => {\n        this.themeService.setHandset(data);\n      });\n\n    this.authService.setCurrentUser();\n  }\n\n  toggleTheme(): void {\n    this.isDark = !this.isDark;\n    this.themeService.setDarkTheme(this.isDark);\n  }\n  getThemeLabel(): string {\n    return this.isDark ? 'Switch to light mode' : 'Switch to dark mode';\n  }\n\n  toggleLanguage(): void {\n    this.currentLanguage = 'english' ? 'french' : 'english';\n  }\n\n  getLanguageLabel(): string {\n    return this.currentLanguage === 'english'\n      ? 'Switch to french'\n      : 'Switch to english';\n  }\n\n  ngAfterViewInit(): void {\n    this.navService.appDrawer = this.appDrawer;\n    this.cookieValue = this.cookieService.get('acceptCookie');\n    if (this.cookieValue.trim() !== 'yes') {\n      setTimeout(() => {\n        this._bottomSheet.open(CookiePopupComponent);\n      }, 1000);\n    }\n  }\n\n  prepareRoute(outlet: RouterOutlet): boolean {\n    return (\n      outlet && outlet.activatedRouteData && outlet.activatedRouteData.animation\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div\n  class=\"app-container\"\n  [class.darkMode]=\"themeService.isDarkTheme | async\"\n  [class.is-handset]=\"themeService.isHandset | async\"\n>\n  <mat-toolbar color=\"primary\" class=\"toolbar\">\n    <mat-toolbar-row\n      *ngIf=\"(themeService.isHandset | async) === false\"\n      class=\"pliable-toolbar\"\n    >\n      <span class=\"link-item\"\n        ><a [routerLink]=\"['/email-to-us']\">Contact Us</a></span\n      >\n      <span class=\"link-item\"\n        ><a [routerLink]=\"['/find-store']\">FIND A STORE</a>\n      </span>\n      <span class=\"spacer\"></span>\n      <button\n        mat-icon-button\n        [title]=\"getThemeLabel()\"\n        [attr.aria-label]=\"getThemeLabel()\"\n        (click)=\"toggleTheme()\"\n      >\n        <mat-icon *ngIf=\"!isDark\">dark_mode</mat-icon>\n        <mat-icon *ngIf=\"isDark\">light_mode</mat-icon>\n      </button>\n    </mat-toolbar-row>\n\n    <mat-toolbar-row class=\"fix-toolbar\">\n      <span\n        class=\"nav-link\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"themeService.isHandset | async\"\n      >\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </span>\n\n      <h1\n        *ngIf=\"(themeService.isHandset | async) === false\"\n        class=\"app-name\"\n        routerLink=\"/home\"\n      >\n        Center\n      </h1>\n      <span class=\"spacer\"></span>\n\n      <app-search-box></app-search-box>\n\n      <a class=\"nav-link home-icon\" routerLink=\"/home\"\n        ><mat-icon>home</mat-icon> Home</a\n      >\n\n      <a\n        class=\"nav-link login\"\n        *ngIf=\"!this.authService.currentUser?.name\"\n        routerLink=\"/login\"\n      >\n        <mat-icon>account_circle</mat-icon>Login\n      </a>\n      <a class=\"nav-link\" *ngIf=\"this.authService.currentUser?.name\">\n        <span\n          ><button mat-button [matMenuTriggerFor]=\"profileMenu\">\n            <mat-icon class=\"account-icon\">account_circle</mat-icon>\n            {{ this.authService.currentUser?.name }}\n          </button></span\n        ></a\n      >\n      <mat-menu #profileMenu=\"matMenu\" yPosition=\"below\">\n        <button mat-menu-item (click)=\"this.authService.logout()\">\n          Logout\n        </button>\n        <button mat-menu-item routerLink=\"/change-password\">\n          Change Password\n        </button>\n\n        <button mat-menu-item routerLink=\"/dashboard\">Dashboard</button>\n      </mat-menu>\n\n      <a\n        class=\"nav-link\"\n        routerLink=\"/cart\"\n        *ngIf=\"cartService.items.length > 0\"\n      >\n        <mat-icon\n          [matBadge]=\"cartService.getTotalQuantity()\"\n          matBadgeColor=\"accent\"\n          aria-label=\"Shopping cart icon\"\n          >shopping_cart</mat-icon\n        >cart</a\n      >\n    </mat-toolbar-row>\n  </mat-toolbar>\n\n  <mat-sidenav-container\n    class=\"sidenav-container\"\n    [style.marginTop.px]=\"(themeService.isHandset | async) ? 56 : 0\"\n  >\n    <mat-sidenav\n      #drawer\n      [mode]=\"(themeService.isHandset | async) ? 'over' : 'side'\"\n      [fixedInViewport]=\"themeService.isHandset | async\"\n      fixedTopGap=\"56\"\n      [opened]=\"(themeService.isHandset | async) === false\"\n      [attr.role]=\"(themeService.isHandset | async) ? 'dialog' : 'navigation'\"\n    >\n      <mat-nav-list>\n        <ng-container *ngIf=\"themeService.isHandset | async\">\n          <app-menu-list-item\n            *ngFor=\"let item of commonItems\"\n            [item]=\"item\"\n          ></app-menu-list-item>\n          <mat-divider></mat-divider>\n        </ng-container>\n\n        <h3 mat-subheader>Administrator</h3>\n        <app-menu-list-item\n          *ngFor=\"let item of adminItems\"\n          [item]=\"item\"\n        ></app-menu-list-item>\n        <mat-divider></mat-divider>\n        <h3 mat-subheader>Manager</h3>\n        <app-menu-list-item\n          *ngFor=\"let item of managerItems\"\n          [item]=\"item\"\n        ></app-menu-list-item>\n        <mat-divider></mat-divider>\n        <h3 mat-subheader>Salesperson</h3>\n        <app-menu-list-item\n          *ngFor=\"let item of salespersonItems\"\n          [item]=\"item\"\n        ></app-menu-list-item>\n\n        <ng-container *ngIf=\"themeService.isHandset | async\">\n          <mat-divider></mat-divider>\n          <h3 mat-subheader>Other Information</h3>\n          <app-menu-list-item\n            *ngFor=\"let item of referItems\"\n            [item]=\"item\"\n          ></app-menu-list-item>\n          <mat-divider></mat-divider>\n        </ng-container>\n      </mat-nav-list>\n    </mat-sidenav>\n    <mat-sidenav-content>\n      <div class=\"content-wrapper\">\n        <router-outlet #outlet=\"outlet\"></router-outlet>\n      </div>\n      <mat-progress-spinner\n        #spin\n        [mode]=\"'indeterminate'\"\n        *ngIf=\"loading$ | async\"\n      ></mat-progress-spinner>\n      <app-scroll-to-top></app-scroll-to-top>\n      <app-footer></app-footer>\n    </mat-sidenav-content>\n  </mat-sidenav-container>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { CookieService } from 'ngx-cookie-service';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { EnvServiceProvider } from './env.service.provider';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgxEchartsModule } from 'ngx-echarts';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './material.module';\n\nimport { AboutComponent } from './about/about.component';\nimport { AddClientComponent } from './components/add-client/add-client.component';\nimport { CartComponent } from './components/./shopping-cart/cart/cart.component';\nimport { ChipsMultiSelectComponent } from './shared/chips-multi-select/chips-multi-select.component';\nimport { CartItemComponent } from './components/shopping-cart/cart/cart-item/cart-item.component';\n\nimport { HomeComponent } from './home/home.component';\nimport { InfiniteListComponent } from './components/infinite-list/infinite-list.component';\nimport { TodoComponent } from './components/todo/todo.component';\nimport { FindStoreComponent } from './components/find-store/find-store.component';\nimport { GameCardComponent } from './shared/animations/game-card/game-card.component';\nimport { LoglistComponent } from './components/loglist/loglist.component';\nimport { LogfilterComponent } from './components/logfilter/logfilter.component';\nimport { MenuListItemComponent } from './components/toolbar/menu-list-item/menu-list-item.component';\nimport { PrintInvoiceComponent } from './components/shopping-cart/print-invoice/print-invoice.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { ProductItemComponent } from './components/./shopping-cart/product-item/product-item.component';\nimport { ProductListComponent } from './components/./shopping-cart/product-list/product-list.component';\nimport { SearchBoxComponent } from './components/toolbar/search-box/search-box.component';\nimport { ScrollToTopComponent } from './components/scroll-to-top/scroll-to-top.component';\nimport { WishListComponent } from './components/shopping-cart/wish-list/wish-list.component';\nimport { EmailToUsComponent } from './components/email-to-us/email-to-us.component';\nimport { TechnicalSupportComponent } from './components/technical-support/technical-support.component';\nimport { SchedulerComponent } from './components/scheduler/scheduler.component';\nimport { AddProductComponent } from './components/add-product/add-product.component';\nimport { AddRoleToUserComponent } from './components/add-role-to-user/add-role-to-user.component';\nimport { CalendarComponent } from './components/calendar/calendar.component';\nimport { ConfirmComponent } from './shared/confirm/confirm.component';\nimport { DataListComponent } from './shared/data-list/data-list.component';\nimport { CookiePopupComponent } from './components/cookie-popup/cookie-popup.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { PipelinesComponent } from './components/pipelines/pipelines.component';\nimport { httpInterceptorProviders } from './interceptors';\nimport { UniqueUserDirective } from './services/unique-user.directive';\nimport { UniquePasswordDirective } from './services/unique-password.directive';\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\nimport { ResetPasswordComponent } from './components/reset-password/reset-password.component';\nimport { ForgetPasswordComponent } from './components/forget-password/forget-password.component';\nimport { ErrorComponent } from './components/error/error.component';\nimport { PipelineAuthorizedComponent } from './components/pipeline-authorized/pipeline-authorized.component';\nimport { PipelineAllComponent } from './components/pipeline-all/pipeline-all.component';\nimport { SuccessComponent } from './components/success/success.component';\nimport { ReportThisMonthComponent } from './components/report-this-month/report-this-month.component';\nimport { ReportThisYearComponent } from './components/report-this-year/report-this-year.component';\nimport { OrderQueryComponent } from './components/order-query/order-query.component';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { AddProductDetailsComponent } from './components/add-product-details/add-product-details.component';\nimport { ContactCustomerComponent } from './components/contact-customer/contact-customer.component';\nimport { AnimateCardComponent } from './shared/animations/animate-card/animate-card.component';\nimport { AnimateCardListComponent } from './shared/animations/animate-card-list/animate-card-list.component';\nimport { SlideShowsComponent } from './components/slide-shows/slide-shows.component';\nimport { FileSizePipe } from './services/file-size.pipe';\nimport { ChangeColorComponent } from './components/change-color/change-color.component';\nimport { UniquePassComponent } from './components/unique-pass/unique-pass.component';\nimport { FormSelectComponent } from './form-select/form-select.component';\n\n@NgModule({\n  declarations: [\n    AddClientComponent,\n    AppComponent,\n    AboutComponent,\n    AddProductComponent,\n    AddRoleToUserComponent,\n    CalendarComponent,\n    ConfirmComponent,\n    CookiePopupComponent,\n    ChangePasswordComponent,\n    CartComponent,\n    CartItemComponent,\n    ChipsMultiSelectComponent,\n    DataListComponent,\n    EmailToUsComponent,\n    ErrorComponent,\n    ForgetPasswordComponent,\n    FooterComponent,\n    FindStoreComponent,\n    GameCardComponent,\n    HomeComponent,\n    InfiniteListComponent,\n    LoginComponent,\n    LoglistComponent,\n    LogfilterComponent,\n    MenuListItemComponent,\n    OrderQueryComponent,\n    PipelineAuthorizedComponent,\n    PipelineAllComponent,\n    PageNotFoundComponent,\n    ProductItemComponent,\n    PrintInvoiceComponent,\n    ProductListComponent,\n    PipelinesComponent,\n    ResetPasswordComponent,\n    ReportThisMonthComponent,\n    ReportThisYearComponent,\n    SuccessComponent,\n    SearchBoxComponent,\n    ScrollToTopComponent,\n    TodoComponent,\n    SchedulerComponent,\n    SignUpComponent,\n    TechnicalSupportComponent,\n    UniqueUserDirective,\n    UniquePasswordDirective,\n    WishListComponent,\n    AddProductDetailsComponent,\n    ContactCustomerComponent,\n    AnimateCardComponent,\n    AnimateCardListComponent,\n    SlideShowsComponent,\n    FileSizePipe,\n    ChangeColorComponent,\n    UniquePassComponent,\n    FormSelectComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    ClipboardModule,\n    FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule,\n    GoogleMapsModule,\n    HttpClientModule,\n\n    MaterialModule,\n    NgxEchartsModule.forRoot({\n      echarts: () => import('echarts'),\n    }),\n    AppRoutingModule,\n    MatGridListModule,\n    MatCardModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    LayoutModule,\n  ],\n  providers: [CookieService, EnvServiceProvider, httpInterceptorProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n  ViewChildren,\n  QueryList,\n} from '@angular/core';\nimport { FormBuilder, Validators, FormGroup, NgForm } from '@angular/forms';\nimport { MatStepper, StepperOrientation } from '@angular/material/stepper';\nimport { Observable, of, Subject } from 'rxjs';\nimport { map, switchMap, takeUntil } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\n\nimport { ThemeService } from 'src/app/services/theme.service';\nimport { CustomerService } from 'src/app/services/customer.service';\n\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-add-client',\n  templateUrl: './add-client.component.html',\n  styleUrls: ['./add-client.component.scss'],\n  providers: [],\n})\nexport class AddClientComponent implements OnInit, OnDestroy {\n  @ViewChild('stepper') stepper!: MatStepper;\n  @ViewChildren('form1,form2,form3,form4') formList!: QueryList<NgForm>;\n  destroy$: Subject<void> = new Subject<void>();\n\n  isLinear = false;\n  firstFormGroup!: FormGroup;\n  secondFormGroup!: FormGroup;\n  thirdFormGroup!: FormGroup;\n  fourthFormGroup!: FormGroup;\n  stepperOrientation!: Observable<StepperOrientation>;\n  requiredFileType = 'image/*';\n  bufferValue = 100;\n\n  fileUrl: string | ArrayBuffer | null | undefined = null;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n  creditLevels = [\n    { label: 'golden', value: '$100k' },\n    { label: 'silver', value: '$10k' },\n    { label: 'iron', value: '$1k' },\n  ];\n  formData?: FormData;\n  file: File | null = null;\n\n  constructor(\n    private http: HttpClient,\n    private fb: FormBuilder,\n    public themeService: ThemeService,\n    private customerSrv: CustomerService\n  ) {}\n\n  ngOnInit() {\n    this.firstFormGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(5)]],\n      credit: ['', Validators.required],\n    });\n    this.secondFormGroup = this.fb.group({\n      address: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(200),\n        ],\n      ],\n      email: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(200),\n          Validators.email,\n        ],\n      ],\n    });\n    this.thirdFormGroup = this.fb.group({\n      phone: [\n        '',\n        [\n          Validators.required,\n          Validators.minLength(5),\n          Validators.maxLength(50),\n        ],\n      ],\n    });\n    this.fourthFormGroup = this.fb.group({\n      imageFile: ['', Validators.required],\n    });\n    this.stepperOrientation = this.themeService.isHandset.pipe(\n      map((value) => (value === false ? 'horizontal' : 'vertical'))\n    );\n  }\n\n  onFileSelected(event: Event): void {\n    const target = event.target as HTMLInputElement;\n    const files = target.files as FileList;\n    const chooseFile = files[0];\n    // const chooseFile = event.target?.files[0];\n    this.file = null;\n    if (chooseFile) {\n      const initFileName = chooseFile?.name;\n      const fileExtent = initFileName.split('.')[1];\n      if (Math.ceil(chooseFile.size / 1024) >= 1024) {\n        this.errorMessage = 'Image file size should be smaller than 1M.';\n        setTimeout(() => {\n          this.errorMessage = '';\n        }, 3000);\n        return;\n      }\n      if (fileExtent !== 'jpg') {\n        this.errorMessage = 'Image file name should end at .jpg';\n        setTimeout(() => {\n          this.errorMessage = '';\n        }, 3000);\n        return;\n      }\n\n      this.file = chooseFile;\n    }\n\n    // show image\n    if (this.file) {\n      const reader = new FileReader();\n      reader.readAsDataURL(this.file);\n      // called once readAsDataURL is completed\n      reader.onload = (data) => {\n        this.fileUrl = data.target?.result;\n      };\n    }\n  }\n\n  get email() {\n    return this.secondFormGroup.get('email');\n  }\n\n  getEmailErrorMessage() {\n    if (this.email?.errors?.required) {\n      return 'Email is required';\n    }\n    if (this.email?.errors?.minlength) {\n      return 'Too short: ' + JSON.stringify(this.email?.errors?.minlength);\n    }\n    return 'Please enter a valid email address.';\n  }\n\n  get fullname() {\n    return this.firstFormGroup.get('name');\n  }\n\n  getFullnameErrorMessage() {\n    if (this.fullname?.errors?.required) {\n      return 'Name is required';\n    }\n    if (this.fullname?.errors?.minlength) {\n      return 'Too short: ' + JSON.stringify(this.fullname?.errors?.minlength);\n    }\n\n    if (this.fullname?.errors?.minlength) {\n      return 'Too long: ' + JSON.stringify(this.fullname?.errors?.length);\n    }\n\n    return 'Please enter a valid name.';\n  }\n\n  get credit() {\n    return this.firstFormGroup.get('credit');\n  }\n\n  getCreditErrorMessage() {\n    if (this.credit?.errors?.required) {\n      return 'Credit is required';\n    }\n    return 'Please select a credit.';\n  }\n\n  get address() {\n    return this.secondFormGroup.get('address');\n  }\n\n  getAddressErrorMessage() {\n    if (this.address?.errors?.required) {\n      return 'Address is required';\n    }\n    if (this.address?.errors?.minlength) {\n      return 'Too short: ' + JSON.stringify(this.address?.errors?.minlength);\n    }\n\n    if (this.address?.errors?.maxlength) {\n      return 'Too long: ' + JSON.stringify(this.address?.errors?.length);\n    }\n\n    return 'Please enter a valid address.';\n  }\n\n  get phone() {\n    return this.thirdFormGroup.get('phone');\n  }\n\n  getPhoneErrorMessage() {\n    if (this.phone?.errors?.required) {\n      return 'Phone is required';\n    }\n    if (this.phone?.errors?.minlength) {\n      return 'Too short: ' + JSON.stringify(this.phone?.errors?.minlength);\n    }\n\n    if (this.phone?.errors?.minlength) {\n      return 'Too long: ' + JSON.stringify(this.phone?.errors?.length);\n    }\n\n    return 'Please enter a valid phone.';\n  }\n\n  allDataClear() {\n    this.stepper.reset();\n    this.firstFormGroup.reset();\n    this.secondFormGroup.reset();\n    this.thirdFormGroup.reset();\n    this.fourthFormGroup.reset();\n    this.formList.forEach((form) => {\n      form.resetForm();\n    });\n    this.file = null;\n    this.fileUrl = null;\n  }\n\n  submit() {\n    if (\n      this.firstFormGroup.invalid ||\n      this.secondFormGroup.invalid ||\n      this.thirdFormGroup.invalid ||\n      this.fourthFormGroup.invalid\n    ) {\n      this.successMessage = null;\n      this.errorMessage = 'Please enter valid data before submit.';\n      setTimeout(() => {\n        this.errorMessage = null;\n      }, 3000);\n      return;\n    }\n\n    const customer = {\n      name: this.firstFormGroup.controls.name.value,\n      credit: this.firstFormGroup.controls.credit.value,\n      address: this.secondFormGroup.controls.address.value,\n      email: this.secondFormGroup.controls.email.value,\n      phone: this.thirdFormGroup.controls.phone.value,\n    };\n    this.customerSrv\n      .addCustomer(customer)\n      .pipe(\n        switchMap((newCustomer) => {\n          if (!this.file) {\n            return of(newCustomer);\n          }\n          const newFileName = newCustomer._id + '.jpg';\n          this.formData = new FormData();\n          this.formData.append('myFile', this.file, newFileName);\n          const url = environment.apiUrl;\n          return this.http.post(`${url}/files/upload`, this.formData);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data: any) => {\n          this.errorMessage = null;\n          this.successMessage = data.message;\n          setTimeout(() => {\n            this.successMessage = null;\n          }, 2000);\n          this.allDataClear();\n        },\n        (err) => {\n          this.successMessage = '';\n          this.errorMessage = err;\n\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"container\">\n  <h2>Lead management</h2>\n  <span>*:&nbsp;Register a potential client</span>\n  <mat-stepper\n    #stepper\n    [orientation]=\"(stepperOrientation | async) || 'vertical'\"\n  >\n    <mat-step [stepControl]=\"firstFormGroup\" errorMessage=\"Name is required.\">\n      <form [formGroup]=\"firstFormGroup\" #form1=\"ngForm\">\n        <ng-template matStepLabel>Fill out your name</ng-template>\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Name</mat-label>\n            <input\n              matInput\n              placeholder=\"Last name, First name\"\n              formControlName=\"name\"\n              required\n            />\n            <mat-error *ngIf=\"fullname?.invalid\">{{\n              getFullnameErrorMessage()\n            }}</mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Select</mat-label>\n            <mat-select formControlName=\"credit\" required>\n              <mat-option\n                *ngFor=\"let option of creditLevels\"\n                [value]=\"option.value\"\n                >{{ option.label }}</mat-option\n              >\n            </mat-select>\n            <mat-error *ngIf=\"credit?.invalid\">{{\n              getCreditErrorMessage()\n            }}</mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <p>Go to a different step to see the error state</p>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step\n      [stepControl]=\"secondFormGroup\"\n      errorMessage=\"Address is required.\"\n    >\n      <form [formGroup]=\"secondFormGroup\" #form2=\"ngForm\">\n        <ng-template matStepLabel>Fill out your address</ng-template>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Address</mat-label>\n          <input\n            matInput\n            autofocus\n            placeholder=\"Ex. 1 Main St, New York, NY\"\n            formControlName=\"address\"\n            required\n          />\n          <mat-error *ngIf=\"address?.invalid\">{{\n            getAddressErrorMessage()\n          }}</mat-error>\n        </mat-form-field>\n        <div class=\"input-container\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Email</mat-label>\n            <input\n              matInput\n              placeholder=\"pat@example.com\"\n              formControlName=\"email\"\n              required\n            />\n            <mat-error *ngIf=\"email?.invalid\">{{\n              getEmailErrorMessage()\n            }}</mat-error>\n          </mat-form-field>\n        </div>\n        <div>\n          <p>Go to a different step to see the error state</p>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step\n      [stepControl]=\"thirdFormGroup\"\n      errorMessage=\"Telephone number is required.\"\n    >\n      <form [formGroup]=\"thirdFormGroup\" #form3=\"ngForm\">\n        <ng-template matStepLabel>Fill out telephone number</ng-template>\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Telelphone number</mat-label>\n          <input\n            matInput\n            autofocus\n            placeholder=\"514-111-2222\"\n            formControlName=\"phone\"\n            required\n          />\n          <mat-error *ngIf=\"phone?.invalid\">{{\n            getPhoneErrorMessage()\n          }}</mat-error>\n        </mat-form-field>\n\n        <div>\n          <p>Go to a different step to see the error state</p>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step [stepControl]=\"fourthFormGroup\" errorMessage=\"Image is required.\">\n      <form [formGroup]=\"fourthFormGroup\" #form4=\"ngForm\">\n        <ng-template matStepLabel>Select a front shop image</ng-template>\n        <input\n          type=\"file\"\n          class=\"file-input\"\n          formControlName=\"imageFile\"\n          (change)=\"onFileSelected($event)\"\n          accept=\"{{ requiredFileType }}\"\n          #fileUpload\n        />\n        <div class=\"file-upload\">\n          {{ file?.name || \"No file uploaded yet.\" }}\n\n          <!--todo show image <img *ngIf=\"fileName\" src=\"{{ fileName }}\" /> -->\n\n          <button\n            mat-raised-button\n            color=\"primary\"\n            class=\"upload-btn\"\n            (click)=\"fileUpload.click()\"\n          >\n            <mat-icon>attach_file</mat-icon>\n          </button>\n          <p>\n            * Image file should have an extension of .jpg and maximum size is\n            1M.\n          </p>\n          <img class=\"front-shop\" *ngIf=\"fileUrl\" src=\"{{ fileUrl }}\" />\n        </div>\n        <div>\n          <p *ngIf=\"file\">File Size: {{ (file ? file.size : 0) | fileSize }}</p>\n          <p>Go to a different step to see the error state</p>\n          <button mat-button matStepperPrevious>Back</button>\n          <button mat-button matStepperNext>Next</button>\n        </div>\n      </form>\n    </mat-step>\n    <mat-step>\n      <ng-template matStepLabel>Done</ng-template>\n      <p>You are now done.</p>\n      <div>\n        <button mat-button matStepperPrevious>Back</button>\n        <button mat-button (click)=\"allDataClear()\">Reset</button>\n        <button mat-button color=\"primary\" (click)=\"submit()\">Submit</button>\n      </div>\n    </mat-step>\n  </mat-stepper>\n</div>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n<app-success *ngIf=\"successMessage\" [message]=\"successMessage\"></app-success>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport {\n  Form,\n  FormBuilder,\n  FormControl,\n  Validators,\n  FormGroup,\n} from '@angular/forms';\nimport { Product } from 'src/app/models/product';\nimport { ProductDialogData } from 'src/app/models/product-dialog-data';\n\n@Component({\n  selector: 'app-add-product-details',\n  templateUrl: './add-product-details.component.html',\n  styleUrls: ['./add-product-details.component.scss'],\n})\nexport class AddProductDetailsComponent implements OnInit {\n  productForm: FormGroup;\n  errorMessage = '';\n  isOnsale = false;\n\n  nameControl = new FormControl(this.data.product.name, [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(20),\n  ]);\n  descriptionControl = new FormControl(this.data.product.description, [\n    Validators.required,\n    Validators.minLength(5),\n    Validators.maxLength(200),\n  ]);\n  categoryControl = new FormControl(this.data.product.category, [\n    Validators.required,\n  ]);\n\n  priceControl = new FormControl(this.data.product.price, [\n    Validators.required,\n    Validators.min(0),\n    Validators.max(10000),\n  ]);\n\n  stockControl = new FormControl(this.data.product.stock, [\n    Validators.required,\n    Validators.min(0),\n    Validators.max(10000),\n  ]);\n\n  constructor(\n    fb: FormBuilder,\n    public dialogRef: MatDialogRef<AddProductDetailsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: ProductDialogData\n  ) {\n    this.productForm = fb.group({\n      name: this.nameControl,\n      description: this.descriptionControl,\n      category: this.categoryControl,\n      price: this.priceControl,\n      stock: this.stockControl,\n    });\n  }\n\n  getProductId() {\n    return this.data.product._id ? this.data.product._id : '';\n  }\n\n  getTitle() {\n    return this.data.isAdd ? 'Add A Product' : 'Edit A Product';\n  }\n\n  onSubmit() {\n    if (\n      this.productForm.untouched &&\n      this.isOnsale === this.data.product.isOnsale\n    ) {\n      this.dialogRef.close();\n      return;\n    }\n    if (this.productForm.touched && this.productForm.invalid) {\n      this.errorMessage = 'Please enter valid product data.';\n      return;\n    }\n\n    const product: Product = {\n      name: this.nameControl.value,\n      description: this.descriptionControl.value,\n      category: this.categoryControl.value,\n      price: this.priceControl.value,\n      stock: this.stockControl.value,\n      isOnsale: this.isOnsale,\n    };\n    if (!this.data.isAdd) {\n      product._id = this.data.product._id;\n    }\n\n    this.dialogRef.close(product);\n  }\n\n  getNameErrorMessage() {\n    if (this.nameControl.hasError('required')) {\n      return 'You must enter a name';\n    }\n    if (this.nameControl.hasError('minlength')) {\n      return 'Name must be at least 5 characters long.';\n    }\n\n    if (this.nameControl.hasError('maxlength')) {\n      return 'Name can be max 20 characters long.';\n    }\n    return 'Enter a valid name';\n  }\n\n  getDescriptionErrorMessage() {\n    if (this.descriptionControl.hasError('required')) {\n      return 'You must enter a description';\n    }\n    if (this.descriptionControl.hasError('minlength')) {\n      return 'Description must be at least 5 characters long.';\n    }\n\n    if (this.descriptionControl.hasError('maxlength')) {\n      return 'Description can be max 200 characters long.';\n    }\n    return 'Enter a valid description';\n  }\n\n  getPriceErrorMessage() {\n    if (this.priceControl.hasError('required')) {\n      return 'You must enter a price';\n    }\n    if (this.priceControl.hasError('min')) {\n      return 'Price must be bigger than  0.';\n    }\n\n    if (this.priceControl.hasError('max')) {\n      return 'Price should be less than 10000.';\n    }\n    return 'Enter a valid price';\n  }\n\n  getStockErrorMessage() {\n    if (this.stockControl.hasError('required')) {\n      return 'You must enter a stock';\n    }\n    if (this.stockControl.hasError('min')) {\n      return 'Stock must be bigger than 0';\n    }\n\n    if (this.stockControl.hasError('max')) {\n      return 'Stock should be less than 10000.';\n    }\n    return 'Enter a valid stock';\n  }\n\n  ngOnInit(): void {\n    this.isOnsale = this.data.product.isOnsale;\n  }\n\n  setOnsale(isOnsale: boolean) {\n    this.isOnsale = isOnsale;\n  }\n}\n","<h2 mat-dialog-title>{{ getTitle() }}</h2>\n<div mat-dialog-content>\n  <p>Id:&nbsp;{{ getProductId() }}</p>\n  <form [formGroup]=\"productForm\" #myForm>\n    <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n      <mat-label>Name</mat-label>\n      <input\n        matInput\n        autofocus\n        type=\"text\"\n        [formControl]=\"nameControl\"\n        required\n      />\n      <mat-error *ngIf=\"nameControl.invalid\">{{\n        getNameErrorMessage()\n      }}</mat-error>\n    </mat-form-field>\n    <br />\n    <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n      <mat-label>Description</mat-label>\n      <textarea\n        matInput\n        type=\"text\"\n        [formControl]=\"descriptionControl\"\n        placeholder=\"Product Description.Ex.Powerful Anti-Frozen..\"\n        required\n      ></textarea>\n      <mat-error *ngIf=\"descriptionControl.invalid\">{{\n        getDescriptionErrorMessage()\n      }}</mat-error>\n    </mat-form-field>\n    <br />\n    <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n      <mat-label>Category</mat-label>\n      <mat-select [formControl]=\"categoryControl\" required>\n        <mat-option value=\"gas\">Gasoline</mat-option>\n        <mat-option value=\"diesel\">Diesel</mat-option>\n        <mat-option value=\"lubricant\">Lubricant</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <br />\n    <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n      <mat-label>Price</mat-label>\n      <input matInput type=\"number\" [formControl]=\"priceControl\" required />\n      <mat-error *ngIf=\"priceControl.invalid\">{{\n        getPriceErrorMessage()\n      }}</mat-error>\n    </mat-form-field>\n    <br />\n    <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n      <mat-label>Stock</mat-label>\n      <input matInput type=\"number\" [formControl]=\"stockControl\" required />\n      <mat-error *ngIf=\"stockControl.invalid\">{{\n        getStockErrorMessage()\n      }}</mat-error>\n    </mat-form-field>\n    <br />\n    <mat-checkbox class=\"input-area-full-width\" [checked]=\"isOnsale\" (change)=\"setOnsale($event.checked)\"\n      >On Sale</mat-checkbox\n    >\n    <ng-container\n     *ngIf=\"errorMessage\">\n      <br />\n     <div class=\"form-error\" >{{ errorMessage }}</div>\n    </ng-container>\n  </form>\n</div>\n\n<div mat-dialog-actions align=\"end\">\n  <button mat-button mat-dialog-close>Cancel</button>\n  <button mat-button cdkFocusInitial (click)=\"onSubmit()\">Confirm</button>\n</div>\n","import {\n  AfterViewInit,\n  OnInit,\n  Component,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport { DataSource } from '@angular/cdk/collections';\nimport { Observable, of, ReplaySubject, Subject } from 'rxjs';\n\nimport { Product } from 'src/app/models/product';\nimport { ProductDialogData } from 'src/app/models/product-dialog-data';\nimport {\n  MatDialog,\n  MatDialogRef,\n  MAT_DIALOG_DATA,\n} from '@angular/material/dialog';\nimport { AddProductDetailsComponent } from 'src/app/components/add-product-details/add-product-details.component';\nimport { ProductService } from 'src/app/services/product.service';\nimport { first, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { environment } from 'src/environments/environment';\nimport { DialogService } from 'src/app/services/dialog.service';\n\n/** Constants used to fill up our data base. */\nconst FRUITS: string[] = [\n  'Rislone 34700-4PK',\n  'Carbhub 541-0765',\n  'RVS Technology G6 Engine ',\n  'Hot Shot\"s Secret Gasoline',\n  'Craftsman 2500-Watt ',\n  'HITTIME Fuel ',\n  '55 Gallon to 275',\n  'NOCO Boost Plus ',\n];\n\n/**\n * @title Product Table Based on Observable\n */\n\n@Component({\n  selector: 'app-add-product',\n  templateUrl: './add-product.component.html',\n  styleUrls: ['./add-product.component.scss'],\n  animations: [\n    trigger('detailExpand', [\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\n      state('expanded', style({ height: '*' })),\n      transition(\n        'expanded <=> collapsed',\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\n      ),\n    ]),\n  ],\n})\nexport class AddProductComponent implements AfterViewInit, OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  displayedColumns: string[] = ['action', 'name', 'category', 'price', 'stock'];\n  dataToDisplay: Product[] = [];\n  dataSource = new ProductDataSource(this.dataToDisplay);\n  errorMessage = '';\n  rowCount = 0;\n  expandedElement: Product | null = null; // show collapsed image and descriptions\n\n  constructor(\n    public dialog: MatDialog,\n    private productService: ProductService,\n    private dialogService: DialogService\n  ) {}\n\n  ngOnInit(): void {\n    this.productService\n      .getProducts('')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.dataToDisplay = data;\n          if (data !== undefined && data !== null) {\n            this.rowCount = data.length;\n          }\n          this.dataSource.setData(this.dataToDisplay);\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  getImageSrc(productItem: Product) {\n    const apiUrl = environment.imageUrl + '/' + productItem.imageUrl + '/';\n\n    // products/e2 => https://xxx.xxx.xxx.xx:5000/products/e2/w-200.jpg 200w,\n\n    return apiUrl + 'w_200.jpg';\n  }\n\n  addProduct(): void {\n    let dialogData: ProductDialogData = {\n      isAdd: true,\n      product: this.createNewProduct(1),\n    };\n\n    const dialogRef = this.dialog.open(AddProductDetailsComponent, {\n      width: '100%',\n      data: dialogData,\n      disableClose: true,\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(\n        switchMap((result) => {\n          if (result && 'price' in result) {\n            return this.productService.addProduct(result);\n          } else {\n            return of(null);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (newProduct) => {\n          if (newProduct !== undefined && newProduct !== null) {\n            this.updateDataToDisplay(newProduct);\n          }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  updateDataToDisplay(product: Product) {\n    const idx = this.dataToDisplay.findIndex(\n      (item) => item._id === product?._id\n    );\n    if (idx >= 0) {\n      this.dataToDisplay.splice(idx, 1, product);\n    } else {\n      this.dataToDisplay.push(product);\n    }\n    if (this.dataToDisplay !== undefined && this.dataToDisplay !== null) {\n      this.rowCount = this.dataToDisplay.length;\n    }\n    this.dataSource.setData(this.dataToDisplay);\n  }\n\n  editProduct(product: Product): void {\n    const dialogData: ProductDialogData = {\n      isAdd: false,\n      product: product,\n    };\n\n    const dialogRef = this.dialog.open(AddProductDetailsComponent, {\n      width: '100%',\n      data: dialogData,\n      disableClose: true,\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(\n        switchMap((result) => {\n          if (result && 'price' in result) {\n            return this.productService.updateProduct(result);\n          } else {\n            return of(null);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (newProduct) => {\n          if (newProduct !== undefined && newProduct !== null) {\n            this.updateDataToDisplay(newProduct);\n          }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  deleteProduct(product: Product): void {\n    this.dialogService\n      .confirmDialog({\n        title: 'Product Management',\n        message: 'Are you sure you to delete this product?',\n        confirmText: 'Yes',\n        cancelText: 'No',\n      })\n      .pipe(\n        switchMap((confirm) => {\n          if (confirm) {\n            return this.productService.deleteProduct(product);\n          } else {\n            return of(null);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          if (!data) {\n            return;\n          }\n          const idx = this.dataToDisplay.findIndex(\n            (record) => record._id === product._id\n          );\n\n          if (idx >= 0) {\n            this.dataToDisplay.splice(idx, 1);\n            if (\n              this.dataToDisplay !== undefined &&\n              this.dataToDisplay !== null\n            ) {\n              this.rowCount = this.dataToDisplay.length;\n            }\n            this.dataSource.setData(this.dataToDisplay);\n          }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngAfterViewInit() {}\n\n  applyFilter(event: Event) {\n    let filterValue = (event.target as HTMLInputElement).value;\n    let filteredArray: Product[] = [];\n    filterValue = filterValue.trim().toLowerCase();\n    if (filterValue === undefined || filterValue.length <= 0) {\n      filteredArray = [...this.dataToDisplay];\n    } else {\n      filteredArray = this.dataToDisplay.filter(\n        (item) =>\n          item.name.toLowerCase().includes(filterValue) ||\n          item.description.toLowerCase().includes(filterValue) ||\n          item.price.toString().includes(filterValue) ||\n          item.stock.toString().includes(filterValue)\n      );\n    }\n    if (filteredArray !== undefined && filteredArray !== null) {\n      this.rowCount = filteredArray.length;\n    }\n    this.dataSource.setData(filteredArray);\n  }\n\n  trackProduct(index: number, product: Product): string {\n    return product._id || '';\n  }\n\n  /** Builds and returns a new Product. */\n  createNewProduct(id: number): Product {\n    const name =\n      FRUITS[Math.round(Math.random() * (FRUITS.length - 1))] +\n      ' ' +\n      FRUITS[Math.round(Math.random() * (FRUITS.length - 1))].charAt(0) +\n      '.';\n\n    return {\n      _id: id.toString(),\n      name,\n      description: '',\n      category: 'gas',\n      price: 0,\n      stock: 0,\n      imageUrl: 'products/e2',\n      isOnsale: false,\n    };\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\nclass ProductDataSource extends DataSource<Product> {\n  private dataStream = new ReplaySubject<Product[]>();\n\n  constructor(initialData: Product[]) {\n    super();\n    this.setData(initialData);\n  }\n\n  connect(): Observable<Product[]> {\n    return this.dataStream;\n  }\n\n  disconnect(): void {}\n\n  setData(data: Product[]): void {\n    this.dataStream.next(data);\n  }\n}\n","<h2>Product Management</h2>\n<div>\n  <form>\n    <mat-form-field class=\"input-area-full-width\" appearance=\"standard\">\n      <mat-label>Filter By Name or Description</mat-label>\n      <input\n        matInput\n        (keyup)=\"applyFilter($event)\"\n        placeholder=\"Ex. Mia\"\n        #input\n      />\n    </mat-form-field>\n    <div style=\"margin-bottom: 8px\">\n      {{ rowCount }} records meet the criteria.\n    </div>\n  </form>\n</div>\n\n<div class=\"mat-elevation-z8 table-container\">\n  <table\n    mat-table\n    [dataSource]=\"dataSource\"\n    class=\"mat-elevation-z8\"\n    [trackBy]=\"trackProduct\"\n    multiTemplateDataRows\n  >\n    <!-- Action Column -->\n    <ng-container matColumnDef=\"action\">\n      <th mat-header-cell *matHeaderCellDef>\n        <button mat-button (click)=\"addProduct()\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </th>\n      <td mat-cell *matCellDef=\"let row\">\n        <div class=\"actions-wrapper\">\n          <span class=\"action\" (click)=\"editProduct(row)\">\n            <mat-icon  matTooltip=\"Edit product\" >edit</mat-icon>\n          </span>\n          <span  class=\"action\"  (click)=\"deleteProduct(row)\">\n            <mat-icon matTooltip=\"Delete a product\">delete</mat-icon>\n          </span>\n        </div>\n      </td>\n    </ng-container>\n\n    <!-- name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.name }}</td>\n    </ng-container>\n\n    <!-- Category Column -->\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.category }}</td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.price }}</td>\n    </ng-container>\n\n    <!-- Stock Column -->\n    <ng-container matColumnDef=\"stock\">\n      <th mat-header-cell *matHeaderCellDef>Stock</th>\n      <td mat-cell *matCellDef=\"let row\">{{ row.stock }}</td>\n    </ng-container>\n\n    <!-- Template for other details(image, description) row -->\n    <ng-container matColumnDef=\"expandedDetail\">\n      <td\n        mat-cell\n        *matCellDef=\"let element\"\n        [attr.colspan]=\"displayedColumns.length\"\n      >\n        <div\n          class=\"example-element-detail\"\n          [@detailExpand]=\"\n            element == expandedElement ? 'expanded' : 'collapsed'\n          \"\n        >\n          <img\n            src=\"{{ getImageSrc(element) }}\"\n            alt=\"product image\"\n            class=\"example-element-diagram\"\n          />\n\n          <div class=\"example-element-description\">\n            {{ element.description }}\n          </div>\n        </div>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n\n    <tr\n      mat-row\n      *matRowDef=\"let element; columns: displayedColumns\"\n      class=\"example-element-row\"\n      [class.example-expanded-row]=\"expandedElement === element\"\n      (click)=\"expandedElement = expandedElement === element ? null : element\"\n    ></tr>\n    <tr\n      mat-row\n      *matRowDef=\"let row; columns: ['expandedDetail']\"\n      class=\"example-detail-row\"\n    ></tr>\n  </table>\n</div>\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { FormControl } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { User } from 'src/app/models/user';\nimport { UserService } from 'src/app/services/user.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-add-role-to-user',\n  templateUrl: './add-role-to-user.component.html',\n  styleUrls: ['./add-role-to-user.component.scss'],\n})\nexport class AddRoleToUserComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  @ViewChild(MatSort) sort!: MatSort;\n  destroy$: Subject<void> = new Subject<void>();\n  displayedColumns = ['name', 'locked', 'salesperson', 'manager', 'admin'];\n  userArray: User[] = [];\n  positionFilter = new FormControl();\n  dataSource = new MatTableDataSource<User>();\n  nameFilter = new FormControl();\n  errorMessage = '';\n\n  constructor(private route: ActivatedRoute, private service: UserService) {}\n\n  ngOnInit(): void {\n    this.userArray = this.route.snapshot.data['users'];\n    this.dataSource.data = [...this.userArray];\n  }\n\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n  }\n\n  toggleRole(user: User, columnName: string, columnValue: boolean): void {\n    let updatePart;\n    const idx = this.userArray.findIndex((item) => item._id === user._id);\n    if (idx < 0) {\n      return;\n    }\n    const newUser = { ...this.userArray[idx] };\n\n    switch (columnName) {\n      case 'isFrozen':\n        updatePart = { isFrozen: columnValue };\n        newUser.isFrozen = columnValue;\n        break;\n      case 'isAdmin':\n        updatePart = { isAdmin: columnValue };\n        newUser.isAdmin = columnValue;\n        break;\n      case 'isManager':\n        updatePart = { isManager: columnValue };\n        newUser.isManager = columnValue;\n        break;\n      case 'isSalesperson':\n        updatePart = { isSalesperson: columnValue };\n        newUser.isSalesperson = columnValue;\n        break;\n    }\n\n    this.userArray.splice(idx, 1, { ...newUser });\n\n    this.service\n      .updateUser(user._id, updatePart)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {},\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<h2>Grant And Revoke Roles Of Users</h2>\n\n<mat-form-field appearance=\"standard\">\n  <mat-label>Filter By Name</mat-label>\n  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Marc\" #input />\n</mat-form-field>\n\n<div style=\"margin-bottom: 8px\">\n  {{ dataSource.filteredData.length }} records meet the criteria.\n</div>\n<div class=\"container mat-elevation-z8\">\n  <table mat-table matSort [dataSource]=\"dataSource\">\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <!-- Locked Column -->\n    <ng-container matColumnDef=\"locked\">\n      <th mat-header-cell *matHeaderCellDef >Locked</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox\n          [checked]=\"element.isFrozen\"\n          (change)=\"toggleRole(element, 'isFrozen', $event.checked)\"\n        ></mat-checkbox>\n      </td>\n    </ng-container>\n\n    <!-- salesperson role -->\n    <ng-container matColumnDef=\"salesperson\">\n      <th mat-header-cell *matHeaderCellDef >Employee</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox\n          [checked]=\"element.isSalesperson\"\n          (change)=\"toggleRole(element, 'isSalesperson', $event.checked)\"\n        ></mat-checkbox>\n      </td>\n    </ng-container>\n\n    <!-- manager role -->\n    <ng-container matColumnDef=\"manager\">\n      <th mat-header-cell *matHeaderCellDef >Manager</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox\n          [checked]=\"element.isManager\"\n          (change)=\"toggleRole(element, 'isManager', $event.checked)\"\n        ></mat-checkbox>\n      </td>\n    </ng-container>\n\n    <!-- admin role -->\n    <ng-container matColumnDef=\"admin\">\n      <th mat-header-cell *matHeaderCellDef >Admin</th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-checkbox\n          [checked]=\"element.isAdmin\"\n          (change)=\"toggleRole(element, 'isAdmin', $event.checked)\"\n        ></mat-checkbox>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"3\">\n        No data matching the filter \"{{ input.value }}\"\n      </td>\n    </tr>\n  </table>\n</div>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\nexport interface DayInCalendar {\n  dateElement: Date | null;\n  isWorkday: boolean;\n  isToday?: boolean | null;\n  events?: string | null;\n  isSelected?: boolean;\n}\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss'],\n})\nexport class CalendarComponent implements OnInit {\n  @Input() title = '';\n  @Output() itemEvent = new EventEmitter<DayInCalendar | null>();\n  calendar: DayInCalendar[] = [];\n  today = new Date();\n  selectedDay: DayInCalendar | null = null;\n  startDayOfCalendar = new Date();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    const baseDay = new Date();\n    const year = baseDay.getFullYear();\n    const month = baseDay.getMonth();\n    const date = baseDay.getDate();\n    this.today = new Date(year, month, date, 0, 0, 0);\n    this.getDaysOfMonth(this.today);\n  }\n\n  getDaysOfMonth(baseDay: Date): void {\n    const year = baseDay.getFullYear();\n    const month = baseDay.getMonth();\n    const firstDayOfMonth = new Date(year, month, 1, 0, 0, 0);\n    const lastDayOfMonth = new Date(year, month + 1, 0).getDate();\n    // Get the first day of this month\n    const whatDayIsFirst = firstDayOfMonth.getDay();\n    this.calendar = [];\n    for (let i = 0; i < 35; i++) {\n      this.calendar.push({ dateElement: null, isWorkday: false });\n    }\n    for (let i = 0; i < lastDayOfMonth; i++) {\n      const dt = new Date(firstDayOfMonth.getTime());\n      dt.setTime(dt.getTime() + 24 * 60 * 60 * 1000 * i);\n      const dayInWeek = dt.getDay();\n      let isWorkday = false;\n      if (dayInWeek < 6 && dt >= this.today) {\n        isWorkday = true;\n      }\n      const isToday = dt.toDateString() === this.today.toDateString();\n\n      this.calendar[whatDayIsFirst + i] = {\n        dateElement: dt,\n        isWorkday,\n        isToday,\n      };\n    }\n  }\n\n  getCalendarOfNextMonth(): void {\n    const now = this.startDayOfCalendar;\n    let current = this.startDayOfCalendar;\n    if (now.getMonth() === 11) {\n      current = new Date(now.getFullYear() + 1, 0, 1);\n    } else {\n      current = new Date(now.getFullYear(), now.getMonth() + 1, 1);\n    }\n    this.startDayOfCalendar = current;\n    this.getDaysOfMonth(this.startDayOfCalendar);\n  }\n\n  getCalendarOfLastMonth(): void {\n    const now = this.startDayOfCalendar;\n    let current = this.startDayOfCalendar;\n    if (now.getMonth() === 0) {\n      current = new Date(now.getFullYear() - 1, 11, 1);\n    } else {\n      current = new Date(now.getFullYear(), now.getMonth() - 1, 1);\n    }\n    this.startDayOfCalendar = current;\n    this.getDaysOfMonth(this.startDayOfCalendar);\n  }\n\n  toggleDay(event: DayInCalendar): void {\n    // clear the styling of last selected day\n    if (this.selectedDay !== null) {\n      const idx = this.calendar.findIndex(\n        (element) => element.dateElement === this.selectedDay?.dateElement\n      );\n      if (idx >= 0) {\n        this.calendar[idx].isSelected = false;\n      }\n    }\n\n    if (this.selectedDay === event) {\n      this.selectedDay = null;\n    } else {\n      this.selectedDay = event;\n    }\n\n    // style the selected day\n    if (this.selectedDay !== null) {\n      const idx = this.calendar.findIndex(\n        (element) => element.dateElement === this.selectedDay?.dateElement\n      );\n      if (idx >= 0) {\n        this.calendar[idx].isSelected = true;\n      }\n    }\n\n    this.itemEvent.emit(this.selectedDay);\n  }\n}\n","<mat-card class=\"calendar-wrapper\">\n  <div class=\"calendar-header\">\n    <h2>{{ startDayOfCalendar | date: \"MMMM yyyy\" }} &nbsp;{{title}}</h2>\n    <div class=\"calendar-header-button-container\">\n      <button\n        mat-button\n        aria-label=\"back icon\"\n        (click)=\"getCalendarOfLastMonth()\"\n      >\n        <mat-icon>arrow_back</mat-icon>\n      </button>\n      <button\n        mat-button\n        aria-label=\"forward icon\"\n        (click)=\"getCalendarOfNextMonth()\"\n      >\n        <mat-icon>arrow_forward</mat-icon>\n      </button>\n    </div>\n  </div>\n  <mat-grid-list class=\"day-wrapper\" cols=\"7\" rowHeight=\"30px\" gutterSize=\"2px\">\n    <mat-grid-tile class=\"header\">Sun</mat-grid-tile>\n    <mat-grid-tile class=\"header\">Mon</mat-grid-tile>\n    <mat-grid-tile class=\"header\">Tue</mat-grid-tile>\n    <mat-grid-tile class=\"header\">Wed</mat-grid-tile>\n    <mat-grid-tile class=\"header\">Thu</mat-grid-tile>\n    <mat-grid-tile class=\"header\">Fri</mat-grid-tile>\n    <mat-grid-tile class=\"header\">Sat</mat-grid-tile>\n  </mat-grid-list>\n  <mat-grid-list class=\"calendar\" cols=\"7\" rowHeight=\"60px\" gutterSize=\"2px\">\n    <mat-grid-tile\n      *ngFor=\"let everyday of calendar\"\n      [class.isHoliday]=\"!everyday.isWorkday\"\n      (click)=\"toggleDay(everyday)\"\n    >\n      <div\n        [class.today]=\"everyday.isToday\"\n        [class.selected]=\"everyday.isSelected\"\n      >\n        {{ everyday.dateElement | date: \"d\" }}\n      </div>\n      <div class=\"day_event\">{{ everyday.events }}</div>\n    </mat-grid-tile>\n  </mat-grid-list>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-change-color',\n  templateUrl: './change-color.component.html',\n  styleUrls: ['./change-color.component.scss'],\n})\nexport class ChangeColorComponent implements OnInit {\n  favoriteColor = 'abc';\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    window.alert(this.favoriteColor);\n  }\n}\n","Favorite Color: <input type=\"text\" [(ngModel)]=\"favoriteColor\" />\n<p>{{ favoriteColor }}</p>\n<button type=\"submit\" (click)=\"onSubmit()\">submit</button>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { uniquePasswordValidator } from 'src/app/services/unique-password.directive';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { ReturnWithMessage } from '../../models/return-values';\n\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss'],\n})\nexport class ChangePasswordComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n\n  hideOld = true;\n  hideNew = true;\n  hideRepeatNew = true;\n\n  myForm!: FormGroup;\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit(): void {\n    this.myForm = new FormGroup(\n      {\n        oldPassword: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n        password: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n        repeatPassword: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n      },\n      { validators: uniquePasswordValidator, updateOn: 'submit' }\n    ); // <-- add custom validator at the FormGroup level\n  }\n\n  get oldPassword() {\n    return this.myForm.get('oldPassword');\n  }\n  get password() {\n    return this.myForm.get('password');\n  }\n\n  get repeatPassword() {\n    return this.myForm.get('repeatPassword');\n  }\n\n  getOldPasswordErrorMessage(): string {\n    if (this.oldPassword?.errors?.required) {\n      return 'old password is required';\n    }\n\n    if (this.oldPassword?.errors?.pattern) {\n      return 'old password is invalid';\n    }\n    return 'old password is invalid';\n  }\n\n  getNewPasswordErrorMessage(): string {\n    if (this.password?.errors?.required) {\n      return 'new password is required';\n    }\n\n    if (this.password?.errors?.pattern) {\n      return 'new password is invalid';\n    }\n    return 'new password is invalid';\n  }\n  getRepeatNewPasswordErrorMessage(): string {\n    if (this.repeatPassword?.errors?.required) {\n      return 'repeat-new-password is required';\n    }\n\n    if (this.repeatPassword?.errors?.pattern) {\n      return 'repeat-new-password is invalid';\n    }\n    return 'repeat-new-password is invalid';\n  }\n\n  changePassword(): void {\n    if (this.myForm.invalid) {\n      return;\n    }\n    this.authService\n      .updatePassword(this.oldPassword?.value, this.password?.value)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data: ReturnWithMessage) => {\n          this.successMessage = data.message;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => (this.errorMessage = ''), 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"main_container\">\n  <mat-card>\n    <main class=\"content\">\n      <form\n        (ngSubmit)=\"changePassword()\"\n        #changeForm=\"ngForm\"\n        [formGroup]=\"myForm\"\n      >\n        <h2 class=\"form-header\">Change Password</h2>\n        <div class=\"form-input-section\" *ngIf=\"!successMessage\">\n          <div class=\"form-input-container\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Enter your old password</mat-label>\n              <input\n                matInput\n                required\n                maxlength=\"100\"\n                 formControlName=\"oldPassword\"\n                [type]=\"hideOld ? 'password' : 'text'\"\n              />\n              <button\n                mat-icon-button\n                matSuffix\n                (click)=\"hideOld = !hideOld\"\n                [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hideOld\"\n              >\n                <mat-icon>{{\n                  hideOld ? \"visibility_off\" : \"visibility\"\n                }}</mat-icon>\n              </button>\n              <mat-error *ngIf=\"oldPassword?.invalid\">{{\n                getOldPasswordErrorMessage()\n              }}</mat-error>\n            </mat-form-field>\n          </div>\n\n          <div class=\"form-input-container\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Enter your new password</mat-label>\n              <input\n                matInput\n                required\n                maxlength=\"20\"\n                formControlName=\"password\"\n                [type]=\"hideNew ? 'password' : 'text'\"\n              />\n              <button\n                mat-icon-button\n                matSuffix\n                (click)=\"hideNew = !hideNew\"\n                [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hideNew\"\n              >\n                <mat-icon>{{\n                  hideNew ? \"visibility_off\" : \"visibility\"\n                }}</mat-icon>\n              </button>\n              <mat-error *ngIf=\"password?.invalid\">{{\n                getNewPasswordErrorMessage()\n              }}</mat-error>\n            </mat-form-field>\n          </div>\n          <div class=\"form-input-container\">\n            <mat-form-field appearance=\"fill\">\n              <mat-label>Repeat your new password</mat-label>\n              <input\n                matInput\n                required\n                maxlength=\"100\"\n                formControlName=\"repeatPassword\"\n                [type]=\"hideRepeatNew ? 'password' : 'text'\"\n              />\n              <button\n                mat-icon-button\n                matSuffix\n                (click)=\"hideRepeatNew = !hideRepeatNew\"\n                [attr.aria-label]=\"'Hide password'\"\n                [attr.aria-pressed]=\"hideRepeatNew\"\n              >\n                <mat-icon>{{\n                  hideRepeatNew ? \"visibility_off\" : \"visibility\"\n                }}</mat-icon>\n              </button>\n              <mat-error *ngIf=\"repeatPassword?.invalid\">{{\n                getRepeatNewPasswordErrorMessage()\n              }}</mat-error>\n            </mat-form-field>\n          </div>\n          <div\n            class=\"form-error\"\n            *ngIf=\"\n              myForm?.touched &&\n              myForm?.invalid &&\n              repeatPassword?.value.length > 0 &&\n              myForm?.errors?.identifyPassword\n            \"\n          >\n            RepeatPassword should be equal to password.\n          </div>\n          <div class=\"form-input-container\" style=\"display: flex; justify-content:center\">\n            <button\n              mat-raised-button\n              color=\"primary\"\n              (click)=\"changePassword()\"\n            >\n              Submit\n            </button>\n            <button\n              mat-raised-button\n              color=\"accent\"\n              (click)=\"changeForm.reset()\"\n            >\n              Reset\n            </button>\n          </div>\n        </div>\n        <div *ngIf=\"successMessage\" class=\"information-text\">\n          <a class=\"home-link\" routerLink=\"/home\">{{ successMessage }} </a>\n        </div>\n      </form>\n    </main>\n  </mat-card>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport {\n  FormBuilder,\n  Validators,\n  FormGroup,\n  FormControl,\n} from '@angular/forms';\n\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\nimport { ContactRecord } from 'src/app/models/contact-record';\nimport { ContactRecordService } from 'src/app/services/contact-record.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { AuthService } from 'src/app/services/auth.service';\n\nimport { convertDateToYYYYmmDD } from '../../utils/date-convert.util';\nimport { MatSelectionListChange } from '@angular/material/list/selection-list';\n\n@Component({\n  selector: 'app-contact-customer',\n  templateUrl: './contact-customer.component.html',\n  styleUrls: ['./contact-customer.component.scss'],\n})\nexport class ContactCustomerComponent implements OnInit, OnDestroy {\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap; // false: resolve after change detection.\n  @ViewChild(MapInfoWindow, { static: false }) info!: MapInfoWindow;\n\n  destroy$: Subject<void> = new Subject<void>();\n  frmGroup!: FormGroup;\n  zoom = 12;\n  center!: google.maps.LatLngLiteral;\n  options: google.maps.MapOptions = {\n    zoomControl: true,\n    scrollwheel: false,\n    disableDoubleClickZoom: false,\n    maxZoom: 15,\n    minZoom: 7,\n  };\n  markers: Array<any> = [];\n  infoContent = '';\n\n  today = new Date();\n  latitude: number | null = null;\n  longitude: number | null = null;\n  startTime: Date | null = null;\n\n  errorMessage = '';\n  successMessage = '';\n  contactRecords: ContactRecord[] = [];\n  selectedRecordId: string | null = null;\n  notesControl = new FormControl('', [\n    Validators.required,\n    Validators.minLength(10),\n    Validators.maxLength(200),\n  ]);\n\n  constructor(\n    private contactSrv: ContactRecordService,\n    private authSrv: AuthService,\n    private fb: FormBuilder\n  ) {\n    this.frmGroup = this.fb.group({\n      notes: this.notesControl,\n    });\n  }\n\n  ngOnInit(): void {\n    const dateString = convertDateToYYYYmmDD(new Date());\n    const personId = this.authSrv.currentUser?._id || '';\n\n    this.contactSrv\n      .getContactRecords(dateString, personId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.contactRecords = [];\n          this.contactRecords = data.filter(\n            (record) => record.isVisited === false\n          );\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 2000);\n        }\n      );\n  }\n\n  getNotesErrorMessage() {\n    if (this.notesControl.hasError('required')) {\n      return 'You must enter notes';\n    }\n    if (this.notesControl.hasError('minlength')) {\n      return 'Notes must be at least 10 characters long.';\n    }\n\n    if (this.notesControl.hasError('maxlength')) {\n      return 'Notes can be max 200 characters long.';\n    }\n    return 'Enter a valid notes';\n  }\n\n  setSelectedRecord(event: MatSelectionListChange) {\n    this.selectedRecordId = event.options[0].value;\n    this.latitude = null;\n    this.longitude = null;\n    this.startTime = null;\n    this.notesControl.setValue('');\n  }\n\n  getLocationAndTime(): void {\n    if (!this.selectedRecordId) {\n      this.errorMessage = 'Please select a customer';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n\n    this.startTime = new Date();\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 60000,\n    };\n\n    getPosition(options)\n      .then((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n        this.map.panTo(this.center); // reset the center of map\n        this.markers = [];\n        this.markers.push({\n          position: {\n            lat: this.center.lat,\n            lng: this.center.lng,\n          },\n          label: {\n            color: 'red',\n            text: 'Your location',\n          },\n          title: 'Your Location',\n          info: 'Your Location',\n          options: {\n            animation: google.maps.Animation.DROP,\n          },\n        });\n      })\n      .catch((err) => {\n        this.errorMessage = err;\n        setTimeout(() => {\n          this.errorMessage = '';\n        }, 3000);\n      });\n  }\n\n  onSubmit(): void {\n    if (this.frmGroup.invalid) {\n      this.errorMessage = 'Please enter notes before submit.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    if (!this.selectedRecordId) {\n      this.errorMessage = 'Please select a customer';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n\n    const notes = this.notesControl.value.trim();\n    const planId = this.selectedRecordId || '';\n    const updatePart = {\n      actualContactDT: this.startTime,\n      latitude: this.center.lat,\n      longitude: this.center.lng,\n      notes,\n    };\n    this.contactSrv\n      .updateContactRecord(planId, updatePart)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        () => {\n          this.successMessage = 'Contact Record has been save successfully.';\n          setTimeout(() => {\n            this.successMessage = '';\n          }, 2000);\n          const idx = this.contactRecords.findIndex(\n            (record) => record._id === this.selectedRecordId\n          );\n          if (idx >= 0) {\n            this.contactRecords.splice(idx, 1);\n          }\n          this.resetForm();\n        },\n        (err: any) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 2000);\n        }\n      );\n  }\n\n  resetForm(): void {\n    this.selectedRecordId = null;\n    this.latitude = null;\n    this.longitude = null;\n    this.startTime = null;\n    this.frmGroup.reset();\n  }\n\n  openInfo(marker: MapMarker, content: string): void {\n    this.infoContent = content + ' is a excellent location';\n    this.info.open(marker);\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\nfunction getPosition(options?: PositionOptions): Promise<any> {\n  return new Promise((resolve, reject) =>\n    navigator.geolocation.getCurrentPosition(resolve, reject, options)\n  );\n}\n","<div>\n  <form class=\"main-form\" (ngSubmit)=\"onSubmit()\" [formGroup]=\"frmGroup\">\n    <h2>Contact Customer</h2>\n    <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\">\n      <div fxFlex=\"40%\" fxFlex.lt-md=\"100%\">\n        <mat-card>\n          <mat-card-content>\n            <h3 style=\"padding: 0 16px\">\n              Need to Visit&nbsp;&nbsp;<span class=\"important-detail\">{{\n                today | date: \"MMM dd yyyy\"\n              }}</span>\n            </h3>\n            <mat-divider></mat-divider>\n            <mat-selection-list\n              #waitingList\n              [multiple]=\"false\"\n              (selectionChange)=\"setSelectedRecord($event)\"\n            >\n              <ng-container\n                *ngIf=\"contactRecords && contactRecords.length > 0; else noData\"\n              >\n                <mat-list-option\n                  *ngFor=\"let record of contactRecords\"\n                  [value]=\"record._id\"\n                >\n                  {{ record.customerName }}\n                </mat-list-option>\n              </ng-container>\n              <ng-template #noData>\n                <div style=\"margin-left: 16px\">\n                  No visit plan data matching today.\n                </div>\n              </ng-template>\n            </mat-selection-list>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <div fxFlex=\"55%\" fxFlex.lt-md=\"100%\" class=\"notes-wrapper\">\n        <mat-card>\n          <mat-card-content>\n            <h3 style=\"padding: 0 16px\">\n              Customer selected:<span class=\"important-detail\">\n                {{ waitingList.selectedOptions.selected[0]?.getLabel() }}</span\n              >\n            </h3>\n            <mat-divider></mat-divider>\n          </mat-card-content>\n\n          <button\n            mat-raised-button\n            style=\"margin-top: 16px\"\n            (click)=\"getLocationAndTime()\"\n            type=\"button\"\n          >\n            Start Visit\n          </button>\n          <mat-list role=\"list\">\n            <mat-list-item role=\"listitem\"\n              >Lat:&nbsp;<span class=\"important-detail\">{{\n                latitude\n              }}</span></mat-list-item\n            >\n            <mat-list-item role=\"listitem\"\n              >Lng:<span class=\"important-detail\">{{ longitude }}</span\n              >&nbsp;\n            </mat-list-item>\n            <mat-list-item role=\"listitem\"\n              >Start Time:&nbsp;<span class=\"important-detail\">{{\n                startTime | date: \"long\"\n              }}</span></mat-list-item\n            >\n          </mat-list>\n          <div >\n            <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n              <mat-label>Notes</mat-label>\n              <textarea\n                matInput\n                [formControl]=\"notesControl\"\n                rows=\"4\"\n              ></textarea>\n              <mat-error *ngIf=\"notesControl.invalid\">{{\n                getNotesErrorMessage()\n              }}</mat-error>\n            </mat-form-field>\n          </div>\n          <button\n            mat-raised-button\n            color=\"primary\"\n            type=\"submit\"\n            [disabled]=\"frmGroup.invalid\"\n            click=\"onSubmit()\"\n          >\n            Submit\n          </button>\n        </mat-card>\n      </div>\n    </div>\n  </form>\n\n  <google-map\n    width=\"100%\"\n    height=\"500px\"\n    [zoom]=\"zoom\"\n    [center]=\"center\"\n    [options]=\"options\"\n  >\n    <map-marker\n      #markerElem=\"mapMarker\"\n      *ngFor=\"let marker of markers\"\n      [position]=\"marker.position\"\n      [label]=\"marker.label\"\n      [title]=\"marker.title\"\n      [options]=\"marker.options\"\n      (mapClick)=\"openInfo(markerElem, marker.info)\"\n    ></map-marker>\n    <map-info-window>{{ infoContent }}</map-info-window>\n  </google-map>\n</div>\n<app-success *ngIf=\"successMessage\" [message]=\"successMessage\"></app-success>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit } from '@angular/core';\nimport {\n  MatBottomSheet,\n  MatBottomSheetRef,\n} from '@angular/material/bottom-sheet';\n\nimport { CookieService } from 'ngx-cookie-service';\n\n@Component({\n  selector: 'app-cookie-popup',\n  templateUrl: './cookie-popup.component.html',\n  styleUrls: ['./cookie-popup.component.scss'],\n})\nexport class CookiePopupComponent implements OnInit {\n  constructor(\n    private _bottomSheetRef: MatBottomSheetRef<CookiePopupComponent>,\n    private cookieService: CookieService\n  ) {}\n\n  ngOnInit(): void {}\n\n  acceptCookie(result: string): void {\n    this.cookieService.set('acceptCookie', result, {\n      expires: 2,\n      sameSite: 'Lax',\n    });\n    this._bottomSheetRef.dismiss();\n    // event.preventDefault();\n  }\n}\n","<div class=\"main\">\n  <div mat-dialog-content>\n    We use cookies and other tracking technologies to improve your browsing\n    experience on our website, to show you personalized content and targeted\n    ads, to analyze our website traffic, and to understand where our visitors\n    are coming from\n  </div>\n\n  <div mat-dialog-actions class=\"actions\">\n    <button mat-raised-button color=\"primary\" (click)=\"acceptCookie('yes')\">\n      I agree\n    </button>\n    <button mat-raised-button (click)=\"acceptCookie('no')\">I decline</button>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { routerTransition } from 'src/app/shared/animations/router.animations';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-email-to-us',\n  templateUrl: './email-to-us.component.html',\n  styleUrls: ['./email-to-us.component.scss'],\n  animations: [routerTransition()],\n  host: { '[@routerTransition]': '' },\n})\nexport class EmailToUsComponent implements OnInit {\n  name: string = '';\n  comments: string = '';\n  errorMessage = '';\n  successMessage = '';\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit(myForm: NgForm) {\n    this.errorMessage = '';\n    this.successMessage = 'Data has been saved successfully.';\n    myForm.reset();\n    setTimeout(() => {\n      this.successMessage = '';\n    }, 3000);\n  }\n  \n\n  onReset(myForm: NgForm) {\n    this.successMessage = '';\n    this.errorMessage = 'Error Code 400: There are problems in Network ';\n    myForm.reset();\n    setTimeout(() => {\n      this.errorMessage = '';\n    }, 3000);\n  }\n\n}\n","<div class=\"container\">\n  <h2>Contact Us</h2>\n  <mat-card>\n    <form #myForm=\"ngForm\">\n      <mat-form-field\n        hintLabel=\"Max 10 characters\"\n        class=\"input-area-full-width\"\n        appearance=\"fill\"\n      >\n        <mat-label>Enter your name</mat-label>\n        <input\n          matInput\n          #input\n          id=\"name\"\n          [(ngModel)]=\"name\"\n          name=\"name\"\n          type=\"text\"\n          maxlength=\"10\"\n          placeholder=\"Ex. Mr Alex\"\n        />\n        <mat-hint align=\"end\">{{ input.value?.length || 0 }}/10</mat-hint>\n      </mat-form-field>\n      <br />\n      <mat-form-field class=\"input-area-full-width\" appearance=\"fill\">\n        <mat-label>Textarea</mat-label>\n        <textarea\n          matInput\n          id=\"comments\"\n          name=\"comments\"\n          rows=\"5\"\n          [(ngModel)]=\"comments\"\n          placeholder=\"Give us more details about problem so we can help you better.\"\n        ></textarea>\n      </mat-form-field>\n      <div>\n        <button\n          mat-raised-button\n          color=\"primary\"\n          type=\"submit\"\n          (click)=\"onSubmit(myForm)\"\n        >\n          Submit\n        </button>\n        <button mat-raised-button (click)=\"onReset(myForm)\">Reset</button>\n      </div>\n    </form>\n  </mat-card>\n</div>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n<app-success *ngIf=\"successMessage\" [message]=\"successMessage\"></app-success>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.scss'],\n})\nexport class ErrorComponent implements OnInit {\n  @Input() message: string | null = null;\n  @Input() action = 'GOT IT';\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  hideMe() {\n    this.message = null;\n  }\n}\n","<div\n  *ngIf=\"message\"\n  class=\"error-wrapper\"\n  [ngClass]=\"{ 'error-wrapper-active': message }\"\n>\n  <span class=\"error-message\">{{ message }}</span>\n</div>\n","import { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\nimport { GoogleMapService } from 'src/app/services/google-map.service';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { Stream } from 'stream';\n\nexport interface Store {\n  name: string;\n  ranking: number;\n  distance: string;\n  address: string;\n  lat: number;\n  lng: number;\n}\n\n@Component({\n  selector: 'app-find-store',\n  templateUrl: './find-store.component.html',\n  styleUrls: ['./find-store.component.scss'],\n})\nexport class FindStoreComponent implements OnInit, AfterViewInit {\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap; // false: resolve after change detection.\n  @ViewChild(MapInfoWindow, { static: false }) info!: MapInfoWindow;\n\n  storeArray: Store[] = [];\n\n  zoom = 12;\n  center!: google.maps.LatLngLiteral;\n  options: google.maps.MapOptions = {\n    mapTypeId: 'hybrid',\n    zoomControl: false, //  add customized zoom button on map\n    scrollwheel: false,\n    disableDoubleClickZoom: true,\n    maxZoom: 15,\n    minZoom: 8,\n  };\n  markers: Array<any> = [];\n  infoContent = '';\n  errorMessage = '';\n  constructor(private mapService: GoogleMapService) {}\n\n  ngOnInit(): void {\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 60000,\n    };\n\n    if (!navigator.geolocation || !navigator.geolocation.getCurrentPosition) {\n      this.errorMessage =\n        'Geolocation is not supported.Please allow this app to access the location.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n    } else {\n      this.getCurrentPosition()\n        .then((data) => {\n          this.center = {\n            lat: data.lat,\n            lng: data.lng,\n          };\n        })\n        .catch((err) => alert(err));\n    }\n  }\n\n  getCurrentPosition(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      navigator.geolocation.getCurrentPosition(\n        (resp) => {\n          resolve({ lng: resp.coords.longitude, lat: resp.coords.latitude });\n        },\n        (err) => {\n          reject(err);\n        }\n      );\n    });\n  }\n\n  ngAfterViewInit() {}\n\n  zoomIn(): void {\n    if (this.zoom < (this.options.maxZoom ? this.options.maxZoom : 7)) {\n      this.zoom++;\n    }\n  }\n\n  zoomOut(): void {\n    if (this.zoom > (this.options.minZoom ? this.options.minZoom : 7)) {\n      this.zoom--;\n    }\n  }\n\n  click(event: google.maps.MapMouseEvent): void {\n    // console.log('event', event);\n  }\n\n  logCenter(): void {\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 60000,\n    };\n  }\n\n  addMarker(): void {\n    this.storeArray.forEach((store) => {\n      this.markers.push({\n        position: {\n          lat: store.lat,\n          lng: store.lng,\n        },\n        label: {\n          color: 'gray',\n          text: store.name,\n        },\n        title: store.name,\n        info: store.name,\n        options: {\n          animation: google.maps.Animation.BOUNCE,\n        },\n      });\n    });\n  }\n\n  openInfo(marker: MapMarker, content = ''): void {\n    this.infoContent = content;\n    this.info.open(marker);\n  }\n\n  getPositionByZipCode(zipCode: string): void {\n    // this.mapService.getPositionByZipCode(zipCode);\n    this.storeArray = [\n      {\n        name: 'Bas-Laurant',\n        ranking: 1,\n        distance: '0.1km',\n        address: '5815 Sherbrooke St W, Montreal, Quebec H4A 1X4',\n        lat: 45.47,\n        lng: -73.63,\n      },\n      {\n        name: 'Lac-Saint',\n        ranking: 2,\n        distance: '0.2km',\n        address: '5107 Sherbrooke St W, Montreal',\n        lat: 45.47,\n        lng: -73.6,\n      },\n      {\n        name: 'Capitale',\n        ranking: 3,\n        distance: '1.1km',\n        address: '5107 Sherbrooke St W, Montreal',\n        lat: 45.47,\n        lng: -73.62,\n      },\n      {\n        name: 'Maurice',\n        ranking: 4,\n        distance: '2.1km',\n        address: '5351 Côte Saint Luc Rd, Montreal, Quebec H3X 2C3',\n        lat: 45.47,\n        lng: -73.65,\n      },\n      {\n        name: 'Estrie',\n        ranking: 5,\n        distance: '3.0km',\n        address: '5351 Côte Saint Luc Rd, Montreal, Quebec H3X 2C3',\n        lat: 45.47,\n        lng: -73.5,\n      },\n    ];\n    this.addMarker();\n  }\n\n  calculateDistance(pointA: any, pointB: any): void {\n    pointA = { lat: 40.7767644, lng: -73.9761399 }; // google.maps.LatLng\n\n    pointB = { lat: 40.771209, lng: -73.9673991 };\n    const directionsService = new google.maps.DirectionsService();\n    const directionsRenderer = new google.maps.DirectionsRenderer();\n    directionsRenderer.setMap(this.map.googleMap ? this.map.googleMap : null);\n\n    // Existing map object displays directions\n    // Create route from existing points used for markers\n\n    const route = {\n      origin: pointA,\n      destination: pointB,\n      travelMode: google.maps.TravelMode.DRIVING, // BICYCLING, TRANSIT, WALKING\n    };\n\n    directionsService.route(route, (response, status) => {\n      // anonymous function to capture directions\n      if (status !== 'OK') {\n        window.alert('Directions request failed due to ' + status);\n        return;\n      } else {\n        directionsRenderer.setDirections(response);\n        // Add route to the map\n        let directionsData = response.routes[0].legs[0];\n        // Get data about the mapped route\n        if (!directionsData) {\n          window.alert('Directions request failed');\n          return;\n        } else {\n          const distanceMessage =\n            ' Driving distance is ' +\n            directionsData.distance.text +\n            ' (' +\n            directionsData.duration.text +\n            ').';\n        }\n      }\n    });\n  }\n}\n","<div>\n  <h2>Find a store</h2>\n\n  <div class=\"search-area\">\n    <input\n      type=\"text\"\n      class=\"search-area_input\"\n      autocomplete\n      placeholder=\"enter zipcode\"\n      #input\n    />\n    <button\n      mat-button\n      class=\"search-area_button\"\n      (click)=\"getPositionByZipCode(input.value)\"\n    >\n      <mat-icon color=\"primary\">search</mat-icon>\n    </button>\n  </div>\n\n  <div fxLayout=\"row wrap\" fxLayoutAlign=\"space-between\">\n    <div fxFlex=\"30%\" fxFlex.lt-md=\"100%\">\n      <mat-card class=\"main-card\">\n        <div *ngIf=\"storeArray.length > 0; else no_data_alert\">\n          <h3 class=\"location_list_header\">Showing 5 stores</h3>\n          <ng-container *ngFor=\"let store of storeArray\">\n            <hr class=\"location-divider\" />\n            <div class=\"location\">\n              <div class=\"location-icon-section\">\n                <div class=\"location-icon-wrapper\">\n                  <span class=\"location_icon_number\">{{ store.ranking }}</span>\n                  <mat-icon class=\"location-icon\">place</mat-icon>\n                </div>\n                <div>{{ store.distance }}</div>\n              </div>\n              <div class=\"location-text-wrapper\">\n                <div class=\"location-name\">{{ store.name }}</div>\n                <div>{{ store.address }}</div>\n                <div class=\"location-open-period\">Open until 5:00</div>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n        <ng-template #no_data_alert>\n          <p class=\"no-data-alert\">No store data matching...</p></ng-template\n        >\n      </mat-card>\n    </div>\n\n    <div fxFlex=\"70%\" fxFlex.lt-md=\"100%\">\n      <span class=\"map-zoom-button zoom-in\" (click)=\"zoomIn()\"\n        ><mat-icon>add</mat-icon></span\n      >\n      <span class=\"map-zoom-button zoom-out\" (click)=\"zoomOut()\"\n        ><mat-icon>remove</mat-icon></span\n      >\n      <google-map\n        height=\"500px\"\n        width=\"100%\"\n        [zoom]=\"zoom\"\n        [center]=\"center\"\n        [options]=\"options\"\n        (mapClick)=\"click($event)\"\n      >\n        <map-marker\n          #markerElem=\"mapMarker\"\n          *ngFor=\"let marker of markers\"\n          [position]=\"marker.position\"\n          [label]=\"marker.label\"\n          [title]=\"marker.title\"\n          [options]=\"marker.options\"\n          (mapClick)=\"openInfo(markerElem, marker.info)\"\n        ></map-marker>\n\n        <map-info-window>{{ infoContent }}</map-info-window>\n      </google-map>\n    </div>\n  </div>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<footer>\n  <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n    <div\n      fxFlex.gt-md=\"33%\"\n      fxFlex.md=\"50%\"\n      fxFlex.lt-md=\"100%\"\n      class=\"footer-block\"\n    >\n      <h3>Contact Details</h3>\n      <ul>\n        <li>\n          <mat-icon>email</mat-icon>\n          <a href=\"mailto:jenniferyao1996@hotmail.com\"\n            ><span>jenniferyao1996@hotmail.com</span>\n          </a>\n        </li>\n        <li>\n          <mat-icon>call</mat-icon>\n          <span>866 2323-2345 poste 111</span>\n        </li>\n        <li>\n          <mat-icon>place</mat-icon>\n          <span>Saint-Laurent 152, Quebec, QC H4A 3D2</span>\n        </li>\n      </ul>\n    </div>\n    <div\n      fxFlex.gt-md=\"33%\"\n      fxFlex.md=\"50%\"\n      fxFlex.lt-md=\"100%\"\n      class=\"footer-block\"\n    >\n      <h3>Since 1980</h3>\n      <span class=\"image-container\">\n        <img\n          class=\"image\"\n          src=\"https://source.unsplash.com/random/100×100/?gasoline\"\n          alt=\"company image\"\n        />\n      </span>\n    </div>\n    <div\n      fxFlex.gt-md=\"33%\"\n      fxFlex.md=\"50%\"\n      fxFlex.lt-md=\"100%\"\n      class=\"footer-block\"\n    >\n      <h3>Best days to shop</h3>\n      <ul>\n        <li>\n          <mat-icon>celebration</mat-icon\n          ><span>June 13,&nbsp;2021 summer holiday sale</span>\n        </li>\n        <li>\n          <mat-icon>celebration</mat-icon\n          ><span>Sep 01,&nbsp;2021 return to school sale</span>\n        </li>\n        <li>\n          <mat-icon>celebration</mat-icon\n          ><span>Dec 12,&nbsp;2021 snow tyres sale</span>\n        </li>\n      </ul>\n    </div>\n  </div>\n  <div class=\"property_text\">\n    @2021 Excel Company&nbsp;|&nbsp; All rights reserved.\n  </div>\n</footer>\n","import { Component, OnDestroy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport { ReturnWithMessage } from 'src/app/models/return-values';\n\n@Component({\n  selector: 'app-forget-password',\n  templateUrl: './forget-password.component.html',\n  styleUrls: ['./forget-password.component.scss'],\n})\nexport class ForgetPasswordComponent implements OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  email = new FormControl('', [Validators.required, Validators.email]);\n  errorMessage: string | null = null;\n  successMessage: string | null = null;\n\n  constructor(private service: AuthService) {}\n  getErrorMessage() {\n    if (this.email.hasError('required')) {\n      return 'You must enter a value';\n    }\n\n    return this.email.hasError('email') ? 'Not a valid email' : '';\n  }\n\n  sendEmail() {\n    if (this.email.valid) {\n      this.service\n        .sendResetPasswordEmail(this.email.value)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(\n          (data: ReturnWithMessage) => {\n            this.successMessage = data.message;\n          },\n          (err) => {\n            this.errorMessage = err;\n            setTimeout(() => {\n              this.errorMessage = null;\n            }, 3000);\n          }\n        );\n    }\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"main_container\">\n  <mat-card>\n    <main class=\"content\">\n      <form>\n        <h2 class=\"form-header\">Send Reset Password Email</h2>\n        <div class=\"container\" *ngIf=\"!successMessage\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your email</mat-label>\n            <input\n              matInput\n              placeholder=\"Enter your email address here\"\n              [formControl]=\"email\"\n              required\n            />\n            <mat-error *ngIf=\"email.invalid\">{{ getErrorMessage() }}</mat-error>\n          </mat-form-field>\n        </div>\n        <div *ngIf=\"!successMessage\">\n          <button mat-raised-button color=\"accent\" (click)=\"sendEmail()\">\n            Send\n          </button>\n        </div>\n        <div *ngIf=\"successMessage\" class=\"information-text\">\n          {{ successMessage }}\n        </div>\n      </form>\n    </main>\n  </mat-card>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  NgZone,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\n\nimport { filter, map, pairwise, throttleTime, takeUntil } from 'rxjs/operators';\nimport { Subject, timer } from 'rxjs';\n\nexport interface ImageItem {\n  title: string;\n  content: string;\n  image: string;\n}\n@Component({\n  selector: 'app-infinite-list',\n  templateUrl: './infinite-list.component.html',\n  styleUrls: ['./infinite-list.component.scss'],\n})\nexport class InfiniteListComponent implements OnInit, AfterViewInit, OnDestroy {\n  @ViewChild('scroller') scroller!: CdkVirtualScrollViewport;\n  destroy$: Subject<void> = new Subject<void>();\n\n  listItems: ImageItem[] = [];\n  loading = false;\n\n  constructor(private ngZone: NgZone) {}\n  ngOnInit(): void {\n    this.fetchMore();\n  }\n\n  ngAfterViewInit(): void {\n    this.scroller\n      .elementScrolled()\n      .pipe(\n        map(() => this.scroller.measureScrollOffset('bottom')),\n        pairwise(),\n        filter(([y1, y2]) => y2 < y1 && y2 < 140),\n        throttleTime(200),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(() => {\n        //  the CDK virtual scroller runs outside the ngZone for performance reasons.\n        this.ngZone.run(() => {\n          this.fetchMore();\n        });\n      });\n  }\n  \n  fetchMore(): void {\n    const images = [\n      'IuLgi9PWETU',\n      'fIq0tET6llw',\n      'xcBWeU4ybqs',\n      'YW3F-C5e8SE',\n      'H90Af2TFqng',\n    ];\n\n    const newItems: ImageItem[] = [];\n    for (let i = 0; i < 20; i++) {\n      const randomListNumber = Math.round(Math.random() * 100);\n      const randomPhotoId = Math.round(Math.random() * 4);\n      newItems.push({\n        title: 'List Item' + randomListNumber,\n        content:\n          'This is some description of the list - item #' + randomListNumber,\n        image: `https://source.unsplash.com/${images[randomPhotoId]}/50x50`,\n      });\n      this.loading = true;\n      timer(1000)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(() => {\n          this.loading = false;\n          this.listItems = [...this.listItems, ...newItems];\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<p>\n  <button mat-raised-button color=\"primary\" (click)=\"fetchMore()\">\n    fetch more\n  </button>\n</p>\n<cdk-virtual-scroll-viewport #scroller itemSize=\"72\" class=\"content\">\n  <mat-list>\n    <ng-container *cdkVirtualFor=\"let item of listItems\">\n      <mat-list-item>\n        <img matListAvatar [src]=\"item.image\" />\n        <h3 matLine>{{ item.title }}</h3>\n        <p matLine>\n          <span>{{ item.content }}</span>\n        </p>\n        <button mat-icon-button [matMenuTriggerFor]=\"itemMenu\">\n          <mat-icon>more_vert</mat-icon>\n        </button>\n        <mat-divider></mat-divider>\n      </mat-list-item>\n    </ng-container>\n    <div class=\"spinner-item\">\n      <mat-progress-spinner\n        *ngIf=\"loading\"\n        [mode]=\"'indeterminate'\"\n        [diameter]=\"50\"\n      ></mat-progress-spinner>\n    </div>\n  </mat-list>\n\n  <mat-menu #itemMenu=\"matMenu\">\n    <button mat-menu-item>Option 1</button>\n    <button mat-menu-item>Option 2</button>\n    <button mat-menu-item>Option 3</button>\n  </mat-menu>\n</cdk-virtual-scroll-viewport>\n","import {\n  Component,\n  Inject,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport { map, startWith, takeUntil } from 'rxjs/operators';\n\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/models/user';\nimport { LogFilter } from '../../models/log-filter';\n\n@Component({\n  selector: 'app-logfilter',\n  templateUrl: './logfilter.component.html',\n  styleUrls: ['./logfilter.component.scss'],\n})\nexport class LogfilterComponent implements OnInit, AfterViewInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  nameControl = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(10),\n  ]);\n  contentControl = new FormControl('', Validators.maxLength(10));\n  myForm!: FormGroup;\n  userArray: User[] = [];\n  errorMessage = '';\n  filteredOptions = new Observable<User[]>();\n\n  constructor(\n    private service: UserService,\n    public dialogRef: MatDialogRef<LogfilterComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: LogFilter\n  ) {\n    this.myForm = new FormGroup({\n      name: this.nameControl,\n      content: this.contentControl,\n    });\n  }\n\n  ngOnInit() {}\n\n  ngAfterViewInit() {\n    this.service\n      .getUsers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.userArray = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n    this.filteredOptions = this.nameControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): User[] {\n    const filterValue = value.toLowerCase();\n\n    return this.userArray.filter((option) =>\n      option.name.toLowerCase().includes(filterValue)\n    );\n  }\n\n  onSubmit() {\n    if (this.myForm.touched && this.nameControl.errors) {\n      this.errorMessage = 'Please enter valid name. Max length is 10.';\n      return;\n    }\n    if (this.contentControl.errors) {\n      this.errorMessage = 'Please enter valid content. Max length is 10.';\n      return;\n    }\n\n    let userId: string | null = null;\n    if (this.nameControl.value.trim().length > 0) {\n      const idx = this.userArray.findIndex(\n        (item) =>\n          item.name.toLowerCase() ===\n          this.nameControl.value.trim().toLowerCase()\n      );\n\n      if (idx >= 0) {\n        userId = this.userArray[idx]._id || '';\n      } else {\n        this.errorMessage = 'Please enter valid name. Max length is 10.';\n        return;\n      }\n    }\n\n    this.dialogRef.close({\n      userId,\n      content: this.contentControl.value.trim(),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<form [formGroup]=\"myForm\" (ngSubmit)=\"onSubmit()\">\n  <h2 mat-dialog-title>Add more filters</h2>\n  <div mat-dialog-content>\n    <mat-form-field class=\"full-width\" appearance=\"fill\">\n      <mat-label>User Name</mat-label>\n      <input\n        type=\"text\"\n        placeholder=\"{{ data.userName }}\"\n        aria-label=\"Name\"\n        matInput\n        [formControl]=\"nameControl\"\n        [matAutocomplete]=\"auto\"\n      />\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option\n          *ngFor=\"let option of filteredOptions | async\"\n          [value]=\"option.name\"\n        >\n          {{ option.name }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n    <mat-form-field class=\"full-width\" appearance=\"fill\">\n      <mat-label>Log Content</mat-label>\n      <input\n        type=\"text\"\n        placeholder=\"{{ data.content }}\"\n        aria-label=\"log content\"\n        matInput\n        [formControl]=\"contentControl\"\n      />\n    </mat-form-field>\n  </div>\n  <div *ngIf=\"errorMessage\" class=\"input-error\">\n    {{ errorMessage }}\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button mat-dialog-close>Cancel</button>\n    <button mat-button type=\"submit\" (click)=\"onSubmit()\" cdkFocusInitial>\n      Confirm\n    </button>\n  </div>\n</form>\n","import { Component, OnInit, ViewChild, OnDestroy } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { AuthService } from 'src/app/services/auth.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  unamePattern = '^[a-z0-9_-]{8,15}$';\n  pwdPattern = '^(?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?!.*\\\\s).{6,12}$';\n  mobnumPattern = '^((\\\\+91-?)|0)?[0-9]{10}$';\n\n  errorMessage = '';\n  hide = true;\n  constructor(\n    public authService: AuthService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit() {}\n\n  login(form: NgForm): void {\n    if (!form.valid) {\n      return;\n    }\n    this.authService\n      .login(form.controls.email.value, form.controls.password.value)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (result) => {\n          this.authService.currentUser = result.data;\n          this.authService.loginWithJwt();\n          const returnUrl = this.route.snapshot.queryParamMap.get('returnUrl');\n          this.router.navigate([returnUrl || '/']);\n        },\n        (err) => {\n          console.log('err', err.messages);\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"main__container\">\n  <div class=\"login-card\">\n    <main class=\"login-content\">\n      <span class=\"login-header\">Login</span>\n      <!-- login form -->\n\n      <form class=\"login-form\" (ngSubmit)=\"login(authform)\" #authform=\"ngForm\">\n        <div class=\"form-input-wrapper\">\n          <input\n            ngModel\n            type=\"email\"\n            autofocus\n            placeholder=\"Email\"\n            name=\"email\"\n            class=\"login-input\"\n            minlength=\"6\"\n            maxlength=\"100\"\n            required\n          />\n        </div>\n        <div class=\"form-input-wrapper\">\n          <input\n            ngModel\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Password\"\n            name=\"password\"\n            class=\"login-input\"\n            minlength=\"6\"\n            maxlength=\"50\"\n            required\n          />\n          <button\n            mat-icon-button\n            matSuffix\n            class=\"button-in-input\"\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </div>\n        <div class=\"form-input-wrapper\">\n          <input\n            type=\"submit\"\n            name=\"submit\"\n            value=\"Login\"\n            class=\"login-btn\"\n            [class.btn-disabled]=\"!authform.form.valid\"\n            [disabled]=\"!authform.form.valid\"\n          />\n        </div>\n      </form>\n      <div class=\"signup-link-wrapper\">\n        <span class=\"signup-notice\">Don't have an account?</span>\n        <a class=\"signup-link\" [routerLink]=\"['/signup']\">Sign up</a>\n      </div>\n      <div class=\"signup-link-wrapper\">\n        <span class=\"signup-notice\">Forget your password?</span>\n        <a class=\"signup-link\" routerLink=\"/forget-password\">Reset Password</a>\n      </div>\n    </main>\n\n    <!-- linking to signup -->\n    <aside class=\"login-aside\">\n      <div class=\"login-aside-overlay\"></div>\n      <h1 class=\"login-welcome-text\">Welcome Back!</h1>\n      <hr class=\"login-aside-hr\" />\n    </aside>\n  </div>\n</div>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  Component,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n  ViewChild,\n} from '@angular/core';\nimport { FormGroup, FormControl } from '@angular/forms';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { LogfilterComponent } from '../logfilter/logfilter.component';\nimport { LogRecord } from 'src/app/models/log-record';\nimport { LogsService } from 'src/app/services/logs.service';\n\nimport { of, from as observableFrom, Subject } from 'rxjs';\n\nimport {\n  catchError,\n  concatMap,\n  debounceTime,\n  switchMap,\n  takeUntil,\n} from 'rxjs/operators';\nimport {\n  ConfirmDialogData,\n  DialogService,\n} from 'src/app/services/dialog.service';\nimport { LogFilter } from 'src/app/models/log-filter';\n/**\n * Log Management: Remove Data\n * Sort, filter, Paginator\n */\n\n@Component({\n  selector: 'app-loglist',\n  templateUrl: './loglist.component.html',\n  styleUrls: ['./loglist.component.scss'],\n})\nexport class LoglistComponent implements OnInit, OnDestroy {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n  destroy$: Subject<void> = new Subject<void>();\n\n  displayedColumns: string[] = [\n    'select',\n    'logDate',\n    'userName',\n    'content',\n    'loginIP',\n    'star',\n  ];\n  dataSource = new MatTableDataSource<LogRecord>();\n\n  dialogFilterData: LogFilter | null | undefined;\n  range = new FormGroup({\n    start: new FormControl(),\n    end: new FormControl(),\n  });\n\n  showDeleteAlert = true;\n\n  selection = new SelectionModel<LogRecord>(true, []);\n  data: LogRecord[] = [];\n  errorMessage = '';\n\n  constructor(\n    public dialog: MatDialog,\n    private logService: LogsService,\n    private dialogSrv: DialogService\n  ) {}\n  ngOnInit() {\n    this.logService\n      .getLogs()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.data = data;\n          this.dataSource = new MatTableDataSource(data);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  searchDate() {\n    if (this.range.get('start')?.errors || this.range.get('end')?.errors) {\n      this.errorMessage = 'Please enter valid date range.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n    const startDate = this.range.controls.start.value;\n    const endDate = this.range.controls.end.value;\n\n    this.logService\n      .getLogs(\n        startDate || new Date('Jan 1,1970'),\n        endDate || new Date(),\n        this.dialogFilterData?.userId,\n        this.dialogFilterData?.content\n      )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data: LogRecord[]) => {\n          this.dialogFilterData = null;\n          this.data = data;\n          this.dataSource.data = this.data;\n          if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n          }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort;\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected()\n      ? this.selection.clear()\n      : this.data.forEach((row) => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: LogRecord): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row _id ${\n      row._id\n    }`;\n  }\n\n  deleteAllLogsInSelection(): void {\n    const deletedLogs = [...this.selection.selected];\n    const errorArray = [];\n    if (deletedLogs && deletedLogs.length > 0) {\n      observableFrom(deletedLogs)\n        .pipe(\n          concatMap((log: LogRecord) => {\n            return this.logService.deleteLog(log._id).pipe(\n              catchError((err) => {\n                errorArray.push(err);\n                return of('error' + err);\n              })\n            );\n          }),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(\n          () => {\n            // 1 , delete from data\n            deletedLogs.forEach((deleteLog) => {\n              let idx = this.data.findIndex((log) => log._id === deleteLog._id);\n              if (idx >= 0) {\n                this.data.splice(idx, 1);\n              }\n            });\n            this.dataSource.data = this.data;\n            if (this.dataSource.paginator) {\n              this.dataSource.paginator.firstPage();\n            }\n            // 2, delete from selection\n            this.selection.clear();\n          },\n          (err) => {\n            this.errorMessage = err;\n            setTimeout(() => {\n              this.errorMessage = '';\n            }, 3000);\n          }\n        );\n    }\n  }\n\n  deleteLogItem(deletedLog: LogRecord): void {\n    let idx = this.data.findIndex((item) => item._id === deletedLog._id);\n    if (idx >= 0) {\n      this.data.splice(idx, 1);\n      this.dataSource.data = this.data;\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n      this.logService\n        .deleteLog(deletedLog._id)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(\n          () => {},\n          (err) => {\n            this.errorMessage = err;\n            setTimeout(() => {\n              this.errorMessage = '';\n            }, 3000);\n          }\n        );\n    }\n  }\n\n  editLogItem(item: LogRecord): void {\n    this.dialogSrv\n      .confirmDialog({\n        title: 'Log Details',\n        message: `userName: ${item.userName} operation: ${item.content}`,\n        confirmText: 'OK',\n        cancelText: 'Cancel',\n      })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  hideDeleteAlert() {\n    this.showDeleteAlert = false;\n    setTimeout(() => {\n      this.showDeleteAlert = true;\n    }, 10000); // after 10 seconds\n  }\n\n  openDialog(): void {\n    this.dialogFilterData = {\n      userName: 'Alex',\n      content: 'login',\n    };\n    const dialogRef = this.dialog.open(LogfilterComponent, {\n      width: '80%',\n      data: this.dialogFilterData,\n    });\n\n    dialogRef\n      .afterClosed()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((result) => {\n        if (result) {\n          this.dialogFilterData = result;\n        }\n      });\n  }\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div style=\"position: relative\">\n  <h2>Log Management</h2>\n  <mat-card\n    class=\"alert-card\"\n    *ngIf=\"selection.selected.length > 2 && showDeleteAlert\"\n  >\n    <mat-card-subtitle align=\"end\" class=\"alert-close-button-wrapper\"\n      ><button mat-button color=\"primary\" (click)=\"hideDeleteAlert()\">\n        <mat-icon aria-hidden=\"false\" aria-label=\"hide\">close</mat-icon>\n      </button>\n    </mat-card-subtitle>\n    <mat-card-content>\n      <p>\n        {{ selection.selected.length }} logs are selected. Do you want to delete\n        them?\n      </p>\n    </mat-card-content>\n    <mat-divider inset></mat-divider>\n    <mat-card-actions align=\"end\">\n      <button color=\"primary\" mat-button (click)=\"deleteAllLogsInSelection()\">\n        Delete\n      </button>\n      <button mat-button (click)=\"hideDeleteAlert()\">Cancel</button>\n    </mat-card-actions>\n  </mat-card>\n\n  <div class=\"filter-area\">\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Enter log date range</mat-label>\n      <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n        <input matStartDate formControlName=\"start\" placeholder=\"Start date\" />\n        <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\n      </mat-date-range-input>\n      <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n      <mat-date-range-picker #picker></mat-date-range-picker>\n      <!--{{ range.controls.start.value | json }} -->\n\n      <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\"\n        >Invalid start date</mat-error\n      >\n      <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\"\n        >Invalid end date</mat-error\n      >\n    </mat-form-field>\n\n    <button mat-raised-button class=\"button-ml\" (click)=\"openDialog()\">\n      + Add a filter\n    </button>\n    <button mat-raised-button color=\"primary\" class=\"button-ml\" (click)=\"searchDate()\">\n      <mat-icon>search</mat-icon>\n    </button>\n  </div>\n\n  <div class=\"mat-elevation-z8 table-container\">\n    <table mat-table matSort [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n      <!-- Checkbox Column -->\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox\n            (change)=\"$event ? masterToggle() : null\"\n            [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\n            [aria-label]=\"checkboxLabel()\"\n          >\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox\n            (click)=\"$event.stopPropagation()\"\n            (change)=\"$event ? selection.toggle(row) : null\"\n            [checked]=\"selection.isSelected(row)\"\n            [aria-label]=\"checkboxLabel(row)\"\n          >\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <!-- logDate Column -->\n      <ng-container matColumnDef=\"logDate\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n        <td mat-cell *matCellDef=\"let element\">\n          {{ element.createDate | date: \"MMM d, y\" }}\n        </td>\n      </ng-container>\n\n      <!-- Name Column -->\n      <ng-container matColumnDef=\"userName\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>User</th>\n        <td mat-cell class=\"cell-overflow\" *matCellDef=\"let element\">\n          {{ element.userName }}\n        </td>\n      </ng-container>\n\n      <!-- Content Column -->\n      <ng-container matColumnDef=\"content\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Content</th>\n        <td mat-cell class=\"cell-overflow logContent\" *matCellDef=\"let element\">\n          {{ element.content }}\n        </td>\n      </ng-container>\n\n      <!-- loginIP Column -->\n      <ng-container matColumnDef=\"loginIP\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>IP</th>\n        <td mat-cell class=\"cell-overflow logContent\" *matCellDef=\"let element\">\n          {{ element.ip }}\n        </td>\n      </ng-container>\n\n      <!-- Star Column -->\n      <ng-container matColumnDef=\"star\" stickyEnd>\n        <th mat-header-cell *matHeaderCellDef></th>\n        <td mat-cell *matCellDef=\"let element\">\n          <button\n            mat-icon-button\n            [matMenuTriggerFor]=\"menu\"\n            aria-label=\"Icon-button with a menu\"\n          >\n            <mat-icon>more_vert</mat-icon>\n          </button>\n          <mat-menu #menu=\"matMenu\">\n            <button mat-menu-item (click)=\"deleteLogItem(element)\">\n              <mat-icon>delete</mat-icon>\n              <span>Delete</span>\n            </button>\n            <button mat-menu-item (click)=\"editLogItem(element)\">\n              <mat-icon>edit</mat-icon>\n              <span>Edit</span>\n            </button>\n          </mat-menu>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr\n        mat-row\n        *matRowDef=\"let row; columns: displayedColumns\"\n        (click)=\"selection.toggle(row)\"\n      ></tr>\n\n      <!-- Row shown when there is no matching data. -->\n      <tr class=\"mat-row\" *matNoDataRow>\n        <td class=\"mat-cell\" colspan=\"3\">No data matching the filter</td>\n      </tr>\n    </table>\n    <mat-paginator\n      [pageSizeOptions]=\"[5, 10, 25, 100]\"\n      aria-label=\"Select page of users\"\n    ></mat-paginator>\n  </div>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\n\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { OrderService } from 'src/app/services/order.service';\nimport { OrderHeader } from '../../models/order-header';\nimport { OrderItem } from '../../models/order-item';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { convertDateToYYYYmmDD } from '../../utils/date-convert.util';\n\n@Component({\n  selector: 'app-order-query',\n  templateUrl: './order-query.component.html',\n  styleUrls: ['./order-query.component.scss'],\n})\nexport class OrderQueryComponent implements OnInit,OnDestroy, AfterViewInit {\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  selectedRow: OrderHeader | null = null;\n  destroy$: Subject<void> = new Subject<void>();\n  dataSource = new MatTableDataSource<OrderHeader>();\n  detailsDataSource = new MatTableDataSource<OrderItem>();\n\n  displayedColumns: string[] = ['position', 'customer', 'date', 'salesperson'];\n  detailsDisplayedColumns: string[] = [\n    'position',\n    'product',\n    'price',\n    'quantity',\n    'amount',\n  ];\n\n  range = new FormGroup({\n    start: new FormControl('', Validators.required),\n    end: new FormControl('', Validators.required),\n  });\n\n  errorMessage = '';\n\n  constructor(\n    private orderSrv: OrderService,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {}\n\n  ngAfterViewInit(): void {\n    this.dataSource.sort = this.sort;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  getOrderHeaders(): void {\n    if (this.range.get('start')?.errors || this.range.get('end')?.errors) {\n      this.errorMessage = 'Please enter valid date range.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n    this.dataSource.data = [];\n    this.detailsDataSource.data = [];\n\n    const startDate = this.range.controls.start.value;\n    const endDate = this.range.controls.end.value;\n    const personId = this.authService.currentUser?._id || '';\n    const startString = convertDateToYYYYmmDD(startDate);\n    const endString = convertDateToYYYYmmDD(endDate);\n    this.orderSrv\n      .getOrderHeaders(startString, endString, personId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.dataSource.data = data;\n          this.dataSource.sort = this.sort;\n          this.dataSource.paginator = this.paginator;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 2000);\n        }\n      );\n  }\n\n  getOrderDetails(row: OrderHeader): void {\n    this.selectedRow = row;\n    const orderHeaderId = row._id || '';\n\n    this.orderSrv\n      .getOrderByHeaderId(orderHeaderId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.detailsDataSource.data = data;\n        },\n        (err) => {\n          this.detailsDataSource.data = [];\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 2000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"container\">\n  <h2>Order Review</h2>\n  <div>\n    <form>\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Enter a date range</mat-label>\n        <mat-date-range-input [formGroup]=\"range\" [rangePicker]=\"picker\">\n          <input\n            matStartDate\n            formControlName=\"start\"\n            placeholder=\"Start date\"\n          />\n          <input matEndDate formControlName=\"end\" placeholder=\"End date\" />\n        </mat-date-range-input>\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-date-range-picker #picker></mat-date-range-picker>\n        <mat-error *ngIf=\"range.controls.start.hasError('matStartDateInvalid')\"\n          >Invalid start date</mat-error\n        >\n        <mat-error *ngIf=\"range.controls.end.hasError('matEndDateInvalid')\"\n          >Invalid end date</mat-error\n        >\n      </mat-form-field>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        style=\"margin-left: 8px\"\n        [class.btn-disabled]=\"range.invalid\"\n        [disabled]=\"range.invalid\"\n        (click)=\"getOrderHeaders()\"\n      >\n        <mat-icon>search</mat-icon>Search\n      </button>\n    </form>\n  </div>\n\n  <h3>Order Header</h3>\n  <table\n    mat-table\n    #orderHeader\n    [dataSource]=\"dataSource\"\n    class=\"mat-elevation-z8 demo-table\"\n    matSort\n  >\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element; let i = index\">{{ i + 1 }}</td>\n    </ng-container>\n\n    <!-- Customer Name Column -->\n    <ng-container matColumnDef=\"customer\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.customerName }}</td>\n    </ng-container>\n\n    <!-- Date Column -->\n    <ng-container matColumnDef=\"date\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.orderDate }}</td>\n    </ng-container>\n\n    <!-- Salesperson Column -->\n    <ng-container matColumnDef=\"salesperson\">\n      <th mat-header-cell *matHeaderCellDef>Salesperson</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.salespersonName }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr\n      mat-row\n      (click)=\"getOrderDetails(row)\"\n      [class.demo-row-is-clicked]=\"row === selectedRow\"\n      *matRowDef=\"let row; columns: displayedColumns\"\n    ></tr>\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"4\">\n        No order header data matching the filter\n      </td>\n    </tr>\n  </table>\n  <mat-paginator  class=\"mat-elevation-z8\"\n    [pageSizeOptions]=\"[5, 10, 20]\"\n    showFirstLastButtons\n    aria-label=\"Select page of periodic elements\"\n  >\n  </mat-paginator>\n\n  <h3 style=\"margin-top: 16px\">Order Details</h3>\n  <table\n    mat-table\n    #orderDetails\n    [dataSource]=\"detailsDataSource\"\n    class=\"mat-elevation-z8 demo-table\"\n  >\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef>No.</th>\n      <td mat-cell *matCellDef=\"let element; let i = index\">{{ i + 1 }}</td>\n    </ng-container>\n\n    <!-- Product Column -->\n    <ng-container matColumnDef=\"product\">\n      <th mat-header-cell *matHeaderCellDef>Product</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.productName }}</td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n    </ng-container>\n\n    <!-- Quantity Column -->\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n    </ng-container>\n\n    <!-- Amount Column -->\n    <ng-container matColumnDef=\"amount\">\n      <th mat-header-cell *matHeaderCellDef>Amount</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"detailsDisplayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: detailsDisplayedColumns\"></tr>\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"5\">\n        No order details data matching the filter\n      </td>\n    </tr>\n  </table>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { Customer } from 'src/app/models/customer';\nimport { FormControl } from '@angular/forms';\n@Component({\n  selector: 'app-pipeline-all',\n  templateUrl: './pipeline-all.component.html',\n  styleUrls: ['./pipeline-all.component.scss'],\n})\nexport class PipelineAllComponent implements OnInit {\n  destroy$: Subject<void> = new Subject<void>();\n\n  initCustomers: Customer[] = [];\n  customers: Customer[] = [];\n  errorMessage: string | null = null;\n  criteria = new FormControl();\n\n  constructor(private customerSrv: CustomerService) {}\n\n  ngOnInit(): void {\n    this.customerSrv\n      .getCustomers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.initCustomers = data;\n          this.customers = [...this.initCustomers];\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n\n  trackPipelineId(index: number, customer: Customer) {\n    return customer._id;\n  }\n\n  search() {\n    if (this.criteria.value.trim().length > 0) {\n      const searchTerm = this.criteria.value.trim().toLowerCase();\n      this.customers = this.initCustomers.filter((customer) =>\n        customer.name.toLowerCase().includes(searchTerm)\n      );\n    } else {\n      this.customers = [...this.initCustomers];\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"list-wrapper\" style=\"padding: 8px\">\n  <p class=\"search-wrapper\">\n    <input\n      type=\"text\"\n      placeholder=\"Enter customer name\"\n      [formControl]=\"criteria\"\n      maxlength=\"50\"\n      autofocus\n    />\n    <button\n      mat-raised-button\n      class=\"refresh-button\"\n      color=\"accent\"\n      (click)=\"search()\"\n    >\n      <mat-icon>search</mat-icon>\n      Search\n    </button>\n  </p>\n  <div *ngIf=\"customers.length >= 1; else noData\">\n    <mat-list>\n      <ng-container\n        *ngFor=\"let customer of customers; trackBy: trackPipelineId\"\n      >\n        <mat-divider></mat-divider>\n        <mat-list-item>\n          <img\n            matListAvatar\n            src=\"https://source.unsplash.com/random/100x100?car\"\n            alt=\"...\"\n          />\n          <h3 matLine>{{ customer.name }}</h3>\n          <p matLine>{{ customer.address }}</p>\n          <p matLine>\n            <span\n              [ngClass]=\"customer.isAuthorized ? 'authorized' : 'unauthorized'\"\n            >\n              Authorized: &nbsp;{{ customer.isAuthorized }} &nbsp;&nbsp;{{\n                customer.credit\n              }}\n            </span>\n          </p>\n        </mat-list-item>\n      </ng-container>\n    </mat-list>\n  </div>\n\n  <ng-template #noData>\n    <p>No data meet the selection criteria</p>\n  </ng-template>\n</div>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CustomerService } from 'src/app/services/customer.service';\n\nimport { Customer } from 'src/app/models/customer';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\n\n@Component({\n  selector: 'app-pipeline-authorized',\n  templateUrl: './pipeline-authorized.component.html',\n  styleUrls: ['./pipeline-authorized.component.scss'],\n})\nexport class PipelineAuthorizedComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n\n  customers: Customer[] = [];\n  errorMessage: string | null = null;\n\n  constructor(private customerSrv: CustomerService) {}\n\n  ngOnInit(): void {\n    this.customerSrv\n      .getAllAuthorizedCustomers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.customers = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n\n  trackPipelineId(index: number, customer: Customer): string {\n    return customer._id || '';\n  }\n\n  getImageSrc(customerId = ''): string {\n    const apiUrl =\n      environment.imageUrl + '/customers' + '/' + customerId + '.jpg';\n\n    // E.X.  https://xxx.xxx.xxx.xx:5000/custoemrs/addd1323.jpg,\n    return apiUrl;\n  }\n\n  frozeCustomer(id = ''): void {\n    const idx = this.customers.findIndex((customer) => customer._id === id);\n\n    this.customerSrv\n      .updateCustomer(id, { isAuthorized: false })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n           if (idx >= 0) {\n             this.customers.splice(idx, 1);\n           }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"list-wrapper\">\n  <div *ngIf=\"customers.length >= 1; else noData\">\n    <mat-list>\n      <ng-container\n        *ngFor=\"let customer of customers; trackBy: trackPipelineId\"\n      >\n        <mat-list-item>\n          <img\n            matListAvatar\n            [src]=\"getImageSrc(customer._id)\"\n            alt=\"customer image\"\n          />\n          <h3 matLine>{{ customer.name }}</h3>\n          <p matLine>{{ customer.address }}</p>\n          <p matLine>\n            <span\n              [ngClass]=\"customer.isAuthorized ? 'authorized' : 'unauthorized'\"\n            >\n              Authorized: &nbsp;{{ customer.isAuthorized }} &nbsp;&nbsp;{{\n                customer.credit\n              }}\n            </span>\n          </p>\n          <p>\n            <span\n              class=\"unauthorize-button\"\n              (click)=\"frozeCustomer(customer._id)\"\n              >UnAuthorize</span\n            >\n          </p>\n        </mat-list-item>\n        <mat-divider></mat-divider>\n      </ng-container>\n    </mat-list>\n  </div>\n\n  <ng-template #noData>\n    <p>No data meet the selection criteria</p>\n  </ng-template>\n</div>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CustomerAuthorizeService } from 'src/app/services/customer-authorize.service';\n\nimport { merge, Observable, of, Subject, timer } from 'rxjs';\nimport {\n  mapTo,\n  mergeMap,\n  skip,\n  switchMap,\n  tap,\n  takeUntil,\n  shareReplay,\n} from 'rxjs/operators';\nimport { Customer } from 'src/app/models/customer';\nimport { environment } from 'src/environments/environment';\n\nconst CACHE_SIZE = 1;\nconst REFRESH_INTERVAL = 10000; // 10 seconds\n\n@Component({\n  selector: 'app-pipelines',\n  templateUrl: './pipelines.component.html',\n  styleUrls: ['./pipelines.component.scss'],\n  providers: [CustomerAuthorizeService],\n})\nexport class PipelinesComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n\n  customers: Customer[] = [];\n  updateClick$ = new Subject<void>();\n  showNotification$?: Observable<boolean>;\n  errorMessage: string | null = null;\n  cacheCustomers$?: Observable<Customer[]>;\n\n  constructor(private customerSrv: CustomerAuthorizeService) {}\n\n  ngOnInit(): void {\n    this.customerSrv.createDate = new Date();\n    const initialCustomers$ = this.getCustomerOnce();\n    const updatedUsers$ = this.updateClick$.pipe(\n      mergeMap(() => this.getCustomerOnce()),\n      tap(() => {\n        this.customerSrv.createDate = new Date();\n      }),\n      takeUntil(this.destroy$)\n    );\n    merge(initialCustomers$, updatedUsers$)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data: Customer[]) => {\n          this.customers = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n\n    const show$ = this.getNew();\n    const hide$ = this.updateClick$.pipe(\n      mapTo(false)\n    );\n    this.showNotification$ = merge(show$, hide$);\n  }\n\n  trackPipelineId(index: number, customer: Customer): string {\n    return customer._id || '';\n  }\n\n  getImageSrc(customerId = ''): string {\n    const apiUrl =\n      environment.imageUrl + '/customers' + '/' + customerId + '.jpg';\n\n    // E.X.  https://xxx.xxx.xxx.xx:5000/custoemrs/addd1323.jpg,\n    return apiUrl;\n  }\n\n  refreshDate() {\n    this.updateClick$.next();\n  }\n\n  getCustomerOnce() {\n    return this.customerSrv\n      .getAllUnauthorizedCustomers();\n  }\n\n  getNew() {\n    return this.newCustomers.pipe(\n      skip(1),\n      switchMap((data) => {\n        if (data.length > 0) {\n          return of(true);\n        }\n        return of(false);\n      }),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  get newCustomers(): Observable<Customer[]> {\n    if (!this.cacheCustomers$) {\n      const timer$ = timer(0, REFRESH_INTERVAL).pipe(takeUntil(this.destroy$));\n      this.cacheCustomers$ = timer$.pipe(\n        switchMap(() => this.customerSrv.requestNewAndUnAuthorizedCustomers()),\n        shareReplay(CACHE_SIZE),\n        takeUntil(this.destroy$)\n      );\n    }\n    return this.cacheCustomers$;\n  }\n\n  authorizeCustomer(id = '') {\n    const idx = this.customers.findIndex((customer) => customer._id === id);\n    if (idx >= 0) {\n      this.customers.splice(idx, 1);\n    }\n    this.customerSrv\n      .updateCustomer(id, { isAuthorized: true })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {},\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = null;\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<h2 class=\"first-level-header\">Pipeline Management</h2>\n\n<mat-tab-group>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon [class.tab-notification-icon]=\"showNotification$ | async\"\n        >notifications_active</mat-icon\n      >\n      Unauthorized\n    </ng-template>\n    <ng-template matTabContent>\n      <div class=\"list-wrapper\" style=\"padding: 8px\">\n        <p *ngIf=\"showNotification$ | async\" class=\"search-wrapper\">\n          <button\n            mat-raised-button\n            class=\"refresh-button\"\n            color=\"accent\"\n            (click)=\"refreshDate()\"\n          >\n            Refresh</button\n          ><span style=\"margin-left: 8px\">New client registered</span>\n\n          <mat-divider></mat-divider>\n        </p>\n        <div *ngIf=\"customers.length >= 1; else noData\">\n          <mat-list>\n            <ng-container\n              *ngFor=\"let customer of customers; trackBy: trackPipelineId\"\n            >\n              <mat-list-item>\n                <img\n                  matListAvatar\n                  [src]=\"getImageSrc(customer._id)\"\n                  alt=\"...\"\n                />\n                <h3 matLine>{{ customer.name }}</h3>\n                <p matLine>{{ customer.address }}</p>\n                <p matLine>\n                  <span\n                    [ngClass]=\"\n                      customer.isAuthorized ? 'authorized' : 'unauthorized'\n                    \"\n                  >\n                    Authorized: &nbsp;{{ customer.isAuthorized }} &nbsp;&nbsp;{{\n                      customer.credit\n                    }}\n                  </span>\n                </p>\n                <p>\n                  <span\n                    class=\"authorize-button\"\n                    (click)=\"authorizeCustomer(customer._id)\"\n                    >Authorize</span\n                  >\n                </p>\n              </mat-list-item>\n              <mat-divider></mat-divider>\n            </ng-container>\n          </mat-list>\n        </div>\n\n        <ng-template #noData>\n          <p>No data meet the selection criteria</p>\n        </ng-template>\n      </div>\n    </ng-template>\n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">check_circle</mat-icon>\n      Authorized</ng-template\n    >\n    <ng-template matTabContent>\n      <app-pipeline-authorized></app-pipeline-authorized>\n    </ng-template>\n  </mat-tab>\n  <mat-tab>\n    <ng-template mat-tab-label>\n      <mat-icon class=\"example-tab-icon\">search</mat-icon>\n      All</ng-template\n    >\n    <ng-template matTabContent>\n      <app-pipeline-all></app-pipeline-all>\n    </ng-template>\n  </mat-tab>\n</mat-tab-group>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  AfterViewInit,\n  OnInit,\n  Component,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EChartsOption } from 'echarts';\nimport { ReportsService } from 'src/app/services/reports.service';\nimport { zip, Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport * as fileConvert from 'src/app/utils/file-convert.util';\n\nexport interface PeriodicElement {\n  position: number;\n  orderDate: Date;\n  productName: string;\n  customerName: string;\n  amount: number;\n  salespersonName: string;\n}\n\nexport interface PieItem {\n  value: number;\n  name: string;\n}\n\n// line graph, bar graph\nexport interface GraphData {\n  xAxisData: string[];\n  seriesData: number[];\n}\n\n@Component({\n  selector: 'app-report-this-month',\n  templateUrl: './report-this-month.component.html',\n  styleUrls: ['./report-this-month.component.scss'],\n})\nexport class ReportThisMonthComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  destroy$: Subject<void> = new Subject<void>();\n\n  productData?: Array<any>;\n  customerData?: Array<any>;\n  salespersonData?: Array<any>;\n  initSalesData?: Array<any>;\n  elementData: PeriodicElement[] = [];\n  errorMessage = '';\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  queryDate = new Date();\n  pieData: PieItem[] = []; // product\n  barData: GraphData = { xAxisData: [], seriesData: [] };\n  lineData: GraphData = { xAxisData: [], seriesData: [] };\n  pieOptions: any;\n\n  initOpts = {\n    renderer: 'svg',\n    width: 300,\n    height: 300,\n  };\n  LineOptions!: EChartsOption;\n\n  barOptions!: EChartsOption;\n\n  displayedColumns: string[] = [\n    'position',\n    'date',\n    'product',\n    'customer',\n    'amount',\n    'sales',\n  ];\n  dataSource = new MatTableDataSource<PeriodicElement>();\n\n  constructor(private dataService: ReportsService) {}\n\n  ngOnInit(): void {\n    const year = this.queryDate.getFullYear();\n    const month = this.queryDate.getMonth();\n    zip(\n      this.dataService.getSpecificMonthProductSalesData(year, month),\n      this.dataService.getSpecificMonthCustomerSalesData(year, month),\n      this.dataService.getSpecificMonthSalespersonSalesData(year, month),\n      this.dataService.getSpecificMonthInitSalesData(year, month)\n    )\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.productData = data[0];\n          this.customerData = data[1];\n          this.salespersonData = data[2];\n          this.initSalesData = data[3];\n\n          this.setProductData();\n          this.setCustomerData();\n          this.setSalespersonData();\n          this.setInitSaleData();\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  private setInitSaleData() {\n    if (this.initSalesData && this.initSalesData.length > 0) {\n      this.initSalesData.forEach((initOrder, index) => {\n        this.elementData.push({\n          position: index + 1,\n          orderDate: initOrder.createDate,\n          productName: initOrder.products_info\n            ? initOrder.products_info.name\n            : 'deleted product',\n          customerName: initOrder.customers_info\n            ? initOrder.customers_info.name\n            : 'deleted customer',\n          amount: initOrder.amount,\n          salespersonName: initOrder.salespersons_info.name,\n        });\n      });\n\n      this.dataSource.data = this.elementData;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  private setProductData() {\n    if (this.productData && this.productData.length > 0) {\n      const data = [...this.productData];\n      if (data && data.length > 0) {\n        this.pieData = [];\n\n        data.forEach((item: any) => {\n          this.pieData.push({\n            name: item._id.productName,\n            value: item.totalAmount,\n          });\n        });\n        this.setPieData();\n      }\n    }\n  }\n\n  private setPieData() {\n    // pie\n    this.pieOptions = {\n      tooltip: {\n        trigger: 'item',\n      },\n      series: [\n        {\n          type: 'pie',\n          radius: '60%',\n          data: this.pieData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        },\n      ],\n    };\n  }\n\n  private setCustomerData() {\n    // bar\n    if (this.customerData && this.customerData.length > 0) {\n      const data = [...this.customerData];\n      if (data && data.length > 0) {\n        let xData: string[] = [];\n        let seriesData: number[] = [];\n        data.forEach((item: any) => {\n          xData.push(item._id.customerName);\n          seriesData.push(item.totalAmount);\n        });\n        this.barData = { xAxisData: xData, seriesData: seriesData };\n\n        this.setBarData();\n      }\n    }\n  }\n\n  private setBarData() {\n    this.barOptions = {\n      color: ['#3398DB'],\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow',\n        },\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true,\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: this.barData?.xAxisData,\n          axisTick: {\n            alignWithLabel: true,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: 'value',\n        },\n      ],\n      series: [\n        {\n          name: 'Counters',\n          type: 'bar',\n          barWidth: '60%',\n          data: this.barData?.seriesData,\n        },\n      ],\n    };\n  }\n\n  private setSalespersonData() {\n    // line\n    if (this.salespersonData && this.salespersonData.length > 0) {\n      const data = [...this.salespersonData];\n      if (data && data.length > 0) {\n        let xData: string[] = [];\n        let seriesData: number[] = [];\n        data.forEach((item: any) => {\n          xData.push(item._id.salespersonName);\n          seriesData.push(item.totalAmount);\n        });\n        this.lineData = { xAxisData: xData, seriesData: seriesData };\n        this.setLineData();\n      }\n    }\n  }\n\n  setLineData() {\n    this.LineOptions = {\n      xAxis: {\n        type: 'category',\n        data: this.lineData?.xAxisData,\n      },\n      yAxis: {\n        type: 'value',\n      },\n      series: [\n        {\n          data: this.lineData?.seriesData,\n          type: 'line',\n        },\n      ],\n    };\n  }\n\n  ngAfterViewInit() {}\n\n  downloadData() {\n    // PeriodicElement\n    const initData = [...this.elementData];\n    if (!(initData && initData.length >= 1)) {\n      return;\n    }\n    const output = [];\n    const fields = Object.keys(initData[0]);\n    output.push(fields);\n    initData.forEach((row) => {\n      let rowData = [];\n      for (const [key, value] of Object.entries(row)) {\n        rowData.push(value);\n      }\n      output.push(rowData);\n    });\n\n    const csvFileData = fileConvert.makeCSV(output);\n    const fileName = 'initSalesData';\n    fileConvert.saveBlobtoLocalFile(csvFileData, fileName + '.csv', 'text/csv');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"content-header\">\n    Sales Data Analyze ( {{ queryDate | date: \"MMM y\" }} )\n  </h2>\n  <div class=\"content\">\n    <mat-tab-group mat-align-tabs=\"start\">\n      <mat-tab label=\"By Category\">\n        <mat-card class=\"content-body\">\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <div echarts [initOpts]=\"initOpts\" [options]=\"pieOptions\"></div>\n            </div>\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <h3>Top 10 popular products</h3>\n              <table>\n                <tr>\n                  <th>No.</th>\n                  <th>Name</th>\n                  <th>Amount($)</th>\n                </tr>\n                <ng-container\n                  *ngFor=\"let item of pieData; let position = index\"\n                >\n                  <tr>\n                    <td>{{ position + 1 }}</td>\n                    <td>{{ item.name }}</td>\n                    <td>{{ item.value }}</td>\n                  </tr>\n                </ng-container>\n              </table>\n            </div>\n          </div>\n        </mat-card>\n      </mat-tab>\n      <mat-tab label=\"By Customer\">\n        <mat-card class=\"content-body\">\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <div echarts [options]=\"barOptions\"></div>\n            </div>\n\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <h3>Top 10 VIP Customers</h3>\n              <table>\n                <tr>\n                  <th>No.</th>\n                  <th>Name</th>\n                  <th>Amount($)</th>\n                </tr>\n                <ng-container\n                  *ngFor=\"let item of barData.xAxisData; let position = index\"\n                >\n                  <tr>\n                    <td>{{ position + 1 }}</td>\n                    <td>{{ item }}</td>\n                    <td>{{ barData.seriesData[position] }}</td>\n                  </tr>\n                </ng-container>\n              </table>\n            </div>\n          </div>\n        </mat-card></mat-tab\n      ><mat-tab label=\"By Salesperson\">\n        <mat-card class=\"content-body\">\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <div echarts [options]=\"LineOptions\"></div>\n            </div>\n\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <h3>Top 10 Salespersons</h3>\n              <table>\n                <tr>\n                  <th>No.</th>\n                  <th>Name</th>\n                  <th>Amount($)</th>\n                </tr>\n                <ng-container\n                  *ngFor=\"let item of lineData.xAxisData; let position = index\"\n                >\n                  <tr>\n                    <td>{{ position + 1 }}</td>\n                    <td>{{ item }}</td>\n                    <td>{{ lineData.seriesData[position] }}</td>\n                  </tr>\n                </ng-container>\n              </table>\n            </div>\n          </div>\n        </mat-card></mat-tab\n      >\n\n      <mat-tab label=\"InitData\">\n        <mat-card class=\"content-body\">\n          <button\n            mat-raised-button\n            class=\"download-button\"\n            (click)=\"downloadData()\"\n          >\n            <mat-icon>file_download</mat-icon>\n            Download\n          </button>\n          <div class=\"mat-elevation-z8\">\n            <table mat-table matSort [dataSource]=\"dataSource\" *ngIf=\"dataSource\">\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef>No.</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.position }}\n                </td>\n              </ng-container>\n\n              <!-- Order Data Column -->\n              <ng-container matColumnDef=\"date\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Date</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.orderDate | date }}\n                </td>\n              </ng-container>\n\n              <!-- Product Name Column -->\n              <ng-container matColumnDef=\"product\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Product</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.productName }}\n                </td>\n              </ng-container>\n\n              <!-- Customer Name Column -->\n              <ng-container matColumnDef=\"customer\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Customer</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.customerName }}\n                </td>\n              </ng-container>\n\n              <!-- Amount Column-->\n              <ng-container matColumnDef=\"amount\">\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Amount</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\n              </ng-container>\n\n              <!-- Salesperson Name Column -->\n              <ng-container matColumnDef=\"sales\">\n                <th mat-header-cell *matHeaderCellDef>Salesperson</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.salespersonName }}\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            </table>\n\n            <mat-paginator\n              [pageSizeOptions]=\"[5, 10, 20]\"\n              showFirstLastButtons\n              aria-label=\"Select page of periodic elements\"\n            >\n            </mat-paginator>\n          </div>\n        </mat-card>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  AfterViewInit,\n  OnInit,\n  Component,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { EChartsOption } from 'echarts';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport * as fileConvert from 'src/app/utils/file-convert.util';\nimport { createYearlyMockData, MockOrder } from 'src/app/utils/make-mock-data';\nimport { CreateGraphDataService } from 'src/app/services/create-graph-data.service';\n\nexport interface PeriodicElement {\n  position: number;\n  orderDate: Date;\n  productName: string;\n  customerName: string;\n  amount: number;\n  salespersonName: string;\n}\n\nexport interface PieItem {\n  value: number;\n  name: string;\n}\n\n// line graph, bar graph\nexport interface GraphData {\n  xAxisData: string[];\n  seriesData: number[];\n}\n@Component({\n  selector: 'app-report-this-year',\n  templateUrl: './report-this-year.component.html',\n  styleUrls: ['./report-this-year.component.scss'],\n})\nexport class ReportThisYearComponent\n  implements OnInit, AfterViewInit, OnDestroy\n{\n  destroy$: Subject<void> = new Subject<void>();\n  productData?: Array<any>;\n  customerData?: any;\n  salespersonData?: any;\n  initSalesData?: Array<any>;\n  elementData: PeriodicElement[] = [];\n  errorMessage = '';\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n  @ViewChild(MatSort) sort!: MatSort;\n\n  queryDate = new Date();\n  pieData: PieItem[] = []; // product\n  barData: GraphData = { xAxisData: [], seriesData: [] };\n  lineData: GraphData = { xAxisData: [], seriesData: [] };\n  pieOptions: any;\n\n  initOpts = {\n    renderer: 'svg',\n    width: 300,\n    height: 300,\n  };\n  lineOptions?: EChartsOption;\n\n  barOptions?: EChartsOption;\n\n  displayedColumns: string[] = [\n    'position',\n    'date',\n    'product',\n    'customer',\n    'amount',\n    'sales',\n  ];\n  dataSource?: MatTableDataSource<PeriodicElement>;\n  dataCreateOption = '';\n\n  constructor(private dataService: CreateGraphDataService) {}\n\n  ngOnInit(): void {}\n\n  private clearAllData() {\n    this.productData = undefined;\n    this.customerData = undefined;\n    this.salespersonData = undefined;\n    this.initSalesData = undefined;\n    this.elementData = [];\n    this.errorMessage = '';\n\n    this.pieData = []; // product\n    this.barData = { xAxisData: [], seriesData: [] };\n    this.lineData = { xAxisData: [], seriesData: [] };\n    this.pieOptions = undefined;\n\n    this.lineOptions = undefined;\n    this.barOptions = undefined;\n    this.dataSource = undefined;\n  }\n\n  private getDataFromFunction(counter: number) {\n    this.clearAllData();\n    const year = this.queryDate.getFullYear();\n    const month = this.queryDate.getMonth();\n    const data = createYearlyMockData(counter);\n    this.productData = data.productsData;\n    this.customerData = data.customersData;\n    this.salespersonData = data.salesData;\n    this.initSalesData = data.initOrders;\n    this.setProductData();\n    this.setCustomerData();\n    this.setSalespersonData();\n    this.setInitSaleData();\n  }\n\n  private getDataFromWorker(counter: number): void {\n    this.clearAllData();\n\n    const year = this.queryDate.getFullYear();\n    const month = this.queryDate.getMonth();\n    this.dataService\n      .createProductData(counter)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data: any) => {\n        this.productData = data.productsData;\n        this.customerData = data.customersData;\n        this.salespersonData = data.salesData;\n        this.initSalesData = data.initOrders;\n        this.setProductData();\n        this.setCustomerData();\n        this.setSalespersonData();\n        this.setInitSaleData();\n      });\n  }\n\n  private setInitSaleData(): void {\n    if (this.initSalesData && this.initSalesData.length > 0) {\n      this.elementData = [...this.initSalesData];\n      this.dataSource = new MatTableDataSource(this.elementData);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    }\n  }\n\n  private setProductData():void {\n    if (this.productData && this.productData.length > 0) {\n      this.pieData = [...this.productData];\n      this.setPieData();\n    }\n  }\n\n  private setPieData():void {\n    // pie\n    this.pieOptions = {\n      tooltip: {\n        trigger: 'item',\n      },\n      series: [\n        {\n          type: 'pie',\n          radius: '60%',\n          data: this.pieData,\n          emphasis: {\n            itemStyle: {\n              shadowBlur: 10,\n              shadowOffsetX: 0,\n              shadowColor: 'rgba(0, 0, 0, 0.5)',\n            },\n          },\n        },\n      ],\n    };\n  }\n\n  private setCustomerData() {\n    // bar\n    if (this.customerData && this.customerData.names.length > 0) {\n      const data = { ...this.customerData };\n      this.barData = { xAxisData: data.names, seriesData: data.amounts };\n      this.setBarData();\n    }\n  }\n\n  private setBarData() {\n    this.barOptions = {\n      color: ['#3398DB'],\n      tooltip: {\n        trigger: 'axis',\n        axisPointer: {\n          type: 'shadow',\n        },\n      },\n      grid: {\n        left: '3%',\n        right: '4%',\n        bottom: '3%',\n        containLabel: true,\n      },\n      xAxis: [\n        {\n          type: 'category',\n          data: this.barData?.xAxisData,\n          axisTick: {\n            alignWithLabel: true,\n          },\n        },\n      ],\n      yAxis: [\n        {\n          type: 'value',\n        },\n      ],\n      series: [\n        {\n          name: 'Counters',\n          type: 'bar',\n          barWidth: '60%',\n          data: this.barData?.seriesData,\n        },\n      ],\n    };\n  }\n\n  private setSalespersonData() {\n    // line\n    if (this.salespersonData && this.salespersonData.names.length > 0) {\n      const data = { ...this.salespersonData };\n\n      this.lineData = { xAxisData: data.names, seriesData: data.amounts };\n      this.setLineData();\n    }\n  }\n\n  setLineData():void {\n    this.lineOptions = {\n      xAxis: {\n        type: 'category',\n        data: this.lineData?.xAxisData,\n      },\n      yAxis: {\n        type: 'value',\n      },\n      series: [\n        {\n          data: this.lineData?.seriesData,\n          type: 'line',\n        },\n      ],\n    };\n  }\n\n  ngAfterViewInit() {}\n\n  downloadData():void {\n    // PeriodicElement\n    const initData = [...this.elementData];\n    if (!(initData && initData.length >= 1)) {\n      return;\n    }\n    const output = [];\n    const fields = Object.keys(initData[0]);\n    output.push(fields);\n    initData.forEach((row) => {\n      let rowData = [];\n      for (const [key, value] of Object.entries(row)) {\n        rowData.push(value);\n      }\n      output.push(rowData);\n    });\n\n    const csvFileData = fileConvert.makeCSV(output);\n    const fileName = 'initSalesData';\n    fileConvert.saveBlobtoLocalFile(csvFileData, fileName + '.csv', 'text/csv');\n  }\n\n  createData():void {\n    const counter1 = 999;\n    const counter2 = 888;\n    if (this.dataCreateOption === 'worker') {\n      this.getDataFromWorker(counter1);\n    }\n\n    if (this.dataCreateOption === 'func') {\n      this.getDataFromFunction(counter2);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"container\">\n  <h2 class=\"content-header\">\n    Sales Data Analyze ( {{ queryDate | date: \"MMM y\" }} )\n  </h2>\n  <div class=\"create-data-section\">\n    <mat-radio-group\n      [(ngModel)]=\"dataCreateOption\"\n      aria-label=\"Select an data create method\"\n    >\n      <mat-radio-button value=\"func\">Function</mat-radio-button>\n      <mat-radio-button value=\"worker\">WebWorker</mat-radio-button>\n    </mat-radio-group>\n\n    <button\n      class=\"create-button\"\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"createData()\"\n    >\n      Create Yearly Mock Data\n    </button>\n  </div>\n  <div class=\"content\">\n    <mat-tab-group mat-align-tabs=\"start\">\n      <mat-tab label=\"By Category\">\n        <mat-card class=\"content-body\">\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <div echarts [initOpts]=\"initOpts\" [options]=\"pieOptions\"></div>\n            </div>\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <h3>Top 10 popular products</h3>\n              <table>\n                <tr>\n                  <th>No.</th>\n                  <th>Name</th>\n                  <th>Amount($)</th>\n                </tr>\n                <ng-container\n                  *ngFor=\"let item of pieData; let position = index\"\n                >\n                  <tr>\n                    <td>{{ position + 1 }}</td>\n                    <td>{{ item.name }}</td>\n                    <td>{{ item.value }}</td>\n                  </tr>\n                </ng-container>\n              </table>\n            </div>\n          </div>\n        </mat-card>\n      </mat-tab>\n      <mat-tab label=\"By Customer\">\n        <mat-card class=\"content-body\">\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <div *ngIf=\"barOptions\" echarts [options]=\"barOptions\"></div>\n            </div>\n\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <h3>Top 10 VIP Customers</h3>\n              <table>\n                <tr>\n                  <th>No.</th>\n                  <th>Name</th>\n                  <th>Amount($)</th>\n                </tr>\n                <ng-container\n                  *ngFor=\"let item of barData.xAxisData; let position = index\"\n                >\n                  <tr>\n                    <td>{{ position + 1 }}</td>\n                    <td>{{ item }}</td>\n                    <td>{{ barData.seriesData[position] }}</td>\n                  </tr>\n                </ng-container>\n              </table>\n            </div>\n          </div>\n        </mat-card></mat-tab\n      ><mat-tab label=\"By Salesperson\">\n        <mat-card class=\"content-body\">\n          <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <div echarts *ngIf=\"lineOptions\" [options]=\"lineOptions\"></div>\n            </div>\n\n            <div fxFlex=\"50%\" fxFlex.lt-md=\"100%\">\n              <h3>Top 10 Salespersons</h3>\n              <table>\n                <tr>\n                  <th>No.</th>\n                  <th>Name</th>\n                  <th>Amount($)</th>\n                </tr>\n                <ng-container\n                  *ngFor=\"let item of lineData.xAxisData; let position = index\"\n                >\n                  <tr>\n                    <td>{{ position + 1 }}</td>\n                    <td>{{ item }}</td>\n                    <td>{{ lineData.seriesData[position] }}</td>\n                  </tr>\n                </ng-container>\n              </table>\n            </div>\n          </div>\n        </mat-card></mat-tab\n      >\n\n      <mat-tab label=\"InitData\">\n        <mat-card class=\"content-body\">\n          <button\n            mat-raised-button\n            class=\"download-button\"\n            (click)=\"downloadData()\"\n          >\n            <mat-icon>file_download</mat-icon>\n            Download\n          </button>\n          <div class=\"mat-elevation-z8\">\n            <table mat-table [dataSource]=\"dataSource\" *ngIf=\"dataSource\">\n              <!-- Position Column -->\n              <ng-container matColumnDef=\"position\">\n                <th mat-header-cell *matHeaderCellDef>No.</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.position }}\n                </td>\n              </ng-container>\n\n              <!-- Order Data Column -->\n              <ng-container matColumnDef=\"date\">\n                <th mat-header-cell *matHeaderCellDef>Date</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.orderDate | date }}\n                </td>\n              </ng-container>\n\n              <!-- Product Name Column -->\n              <ng-container matColumnDef=\"product\">\n                <th mat-header-cell *matHeaderCellDef>Product</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.productName }}\n                </td>\n              </ng-container>\n\n              <!-- Customer Name Column -->\n              <ng-container matColumnDef=\"customer\">\n                <th mat-header-cell *matHeaderCellDef>Customer</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.customerName }}\n                </td>\n              </ng-container>\n\n              <!-- Amount Column-->\n              <ng-container matColumnDef=\"amount\">\n                <th mat-header-cell *matHeaderCellDef>Amount</th>\n                <td mat-cell *matCellDef=\"let element\">{{ element.amount }}</td>\n              </ng-container>\n\n              <!-- Salesperson Name Column -->\n              <ng-container matColumnDef=\"sales\">\n                <th mat-header-cell *matHeaderCellDef>Salesperson</th>\n                <td mat-cell *matCellDef=\"let element\">\n                  {{ element.salespersonName }}\n                </td>\n              </ng-container>\n\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n              <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n            </table>\n\n            <mat-paginator\n              [pageSizeOptions]=\"[5, 10, 20]\"\n              showFirstLastButtons\n              aria-label=\"Select page of periodic elements\"\n            >\n            </mat-paginator>\n          </div>\n        </mat-card>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { uniquePasswordValidator } from 'src/app/services/unique-password.directive';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ReturnWithMessage } from 'src/app/models/return-values';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss'],\n})\nexport class ResetPasswordComponent implements OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  hide = true;\n  hideRepeat = true;\n  token = '';\n  myForm!: FormGroup;\n  successMessage: string | null = null;\n  errorMessage: string | null = null;\n\n  constructor(\n    private route: ActivatedRoute,\n    private authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.myForm = new FormGroup(\n      {\n        password: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n        repeatPassword: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n      },\n      { validators: uniquePasswordValidator, updateOn: 'submit' }\n    ); \n\n    // https://xxxx.xxx.xxx.xxx/reset-password?token=xxx\n    this.route.queryParams\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((params) => {\n        this.token = params['token'];\n      });\n  }\n  get password() {\n    return this.myForm.get('password');\n  }\n\n  get repeatPassword() {\n    return this.myForm.get('repeatPassword');\n  }\n  getRepeatNewPasswordErrorMessage(): string {\n    if (this.repeatPassword?.errors?.required) {\n      return 'repeat-new-password is required';\n    }\n\n    if (this.repeatPassword?.errors?.pattern) {\n      return 'repeat-new-password is invalid';\n    }\n    return 'repeat-new-password is invalid';\n  }\n\n  resetPassword(): void {\n    if (this.myForm.invalid) {\n      return;\n    }\n    this.authService\n      .resetPassword(this.password?.value, this.token)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data: ReturnWithMessage) => {\n          this.errorMessage = null;\n          this.successMessage = data.message;\n        },\n        (err) => {\n          this.successMessage = null;\n          this.errorMessage = err;\n          setTimeout(() => (this.errorMessage = ''), 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"main_container\">\n  <mat-card>\n    <main class=\"content\">\n      <form [formGroup]=\"myForm\">\n        <h2 class=\"form-header\">Reset Password</h2>\n        <div class=\"input-container\" *ngIf=\"successMessage\">\n          <a class=\"nav-link\" routerLink=\"['/login']\">{{ successMessage }}</a>\n        </div>\n\n        <div class=\"input-container\" *ngIf=\"!successMessage\">\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Enter your password</mat-label>\n            <input\n              matInput\n              required\n              maxlength=\"20\"\n              formControlName=\"password\"\n              [type]=\"hide ? 'password' : 'text'\"\n            />\n            <button\n              mat-icon-button\n              matSuffix\n              (click)=\"hide = !hide\"\n              [attr.aria-label]=\"'Hide password'\"\n              [attr.aria-pressed]=\"hide\"\n            >\n              <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div>\n          <mat-form-field appearance=\"fill\">\n            <mat-label>Repeat your password</mat-label>\n            <input\n              matInput\n              required\n              maxlength=\"20\"\n              formControlName=\"repeatPassword\"\n              [type]=\"hideRepeat ? 'password' : 'text'\"\n            />\n            <button\n              mat-icon-button\n              matSuffix\n              (click)=\"hideRepeat = !hideRepeat\"\n              [attr.aria-label]=\"'Hide password'\"\n              [attr.aria-pressed]=\"hide\"\n            >\n              <mat-icon>{{\n                hideRepeat ? \"visibility_off\" : \"visibility\"\n              }}</mat-icon>\n            </button>\n          </mat-form-field>\n        </div>\n        <div\n          class=\"form-error\"\n          *ngIf=\"\n            myForm?.touched &&\n            myForm?.invalid &&\n            repeatPassword?.value.length > 0 &&\n            myForm?.errors?.identifyPassword\n          \"\n        >\n          RepeatPassword should be equal to password.\n        </div>\n        <div>\n          <button mat-raised-button color=\"accent\" (click)=\"resetPassword()\">\n            Reset\n          </button>\n        </div>\n      </form>\n    </main>\n  </mat-card>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n  AfterViewInit,\n} from '@angular/core';\nimport { MatSelectionListChange } from '@angular/material/list/selection-list';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTable } from '@angular/material/table';\n\nimport { DayInCalendar } from '../calendar/calendar.component';\n\nimport { DialogService } from 'src/app/services/dialog.service';\nimport { CustomerService } from '../../services/customer.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { ContactPlanService } from 'src/app/services/contact-plan.service';\n\nimport { DataListComponent } from 'src/app/shared/data-list/data-list.component';\nimport { Customer } from 'src/app/models/customer';\nimport { User } from 'src/app/models/user';\nimport { switchMap, takeUntil } from 'rxjs/operators';\nimport { of, Subject } from 'rxjs';\nimport { ContactPlan } from '../../models/contact-plan';\nimport { convertDateToYYYYmmDD } from '../../utils/date-convert.util';\n\n/**\n * mock an autocomplete input\n */\n@Component({\n  selector: 'app-scheduler',\n  templateUrl: './scheduler.component.html',\n  styleUrls: ['./scheduler.component.scss'],\n})\nexport class SchedulerComponent implements OnInit, OnDestroy, AfterViewInit {\n  @ViewChild(MatTable) table!: MatTable<ContactPlan>;\n  destroy$: Subject<void> = new Subject<void>();\n\n  errorMessage = '';\n  showPersonList = false;\n  isValidPerson = true;\n  selectedPerson: User | null = null;\n  selectedDate: Date | null = null;\n  selectedCustomer: Customer | null = null;\n  allPersons: User[] = [];\n  allCustomers: Customer[] = [];\n  filterdPerson: User[] = [];\n  enteredSalesperson = '';\n\n  displayedColumns: string[] = ['action', 'name', 'period'];\n  initPlans: ContactPlan[] = [];\n  dataSource: ContactPlan[] = [];\n\n  constructor(\n    private dialog: MatDialog,\n    private dialogService: DialogService,\n    private customerService: CustomerService,\n    private userService: UserService,\n    private planService: ContactPlanService\n  ) {}\n\n  ngOnInit(): void {\n    this.initPlans = createNewContactPlan(8, 17);\n    this.dataSource = [...this.initPlans];\n    this.userService\n      .getUsers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.allPersons = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n    this.customerService\n      .getCustomers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.allCustomers = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngAfterViewInit() {\n    if (this.table) this.table.renderRows();\n  }\n\n  selectPLanDate(event: DayInCalendar | null): void {\n    this.selectedDate = event ? event.dateElement : null;\n  }\n\n  /* Custom Data-list: Select Salesperson Begin */\n  onInputChange(inputPerson: string): void {\n    this.isValidPerson = true;\n    this.dataSource = [...this.initPlans];\n    this.table.renderRows();\n    if (inputPerson.length > 0) {\n      this.filterdPerson = this.allPersons.filter(\n        (person) =>\n          person.name.toLowerCase().indexOf(inputPerson.toLowerCase()) >= 0\n      );\n    } else {\n      this.filterdPerson = this.allPersons.slice(0);\n    }\n    this.showPersonList = true;\n  }\n\n  selectPersonByPressEnter(inputPerson: string): void {\n    let idx = -1;\n    this.isValidPerson = false;\n    this.dataSource = [...this.initPlans];\n    this.table.renderRows();\n    if (inputPerson.trim().length === 0) {\n      this.selectedPerson = null;\n      this.enteredSalesperson = '';\n      this.isValidPerson = true;\n    }\n    if (inputPerson.trim().length > 0) {\n      idx = this.allPersons.findIndex(\n        (person) =>\n          person.name.toLowerCase().indexOf(inputPerson.toLowerCase()) >= 0\n      );\n      if (idx >= 0) {\n        this.isValidPerson = true;\n        this.selectedPerson = this.allPersons[idx];\n        this.enteredSalesperson = this.selectedPerson.name;\n      } else {\n        this.isValidPerson = false;\n        this.selectedPerson = null;\n        this.enteredSalesperson = '';\n      }\n    }\n    this.showPersonList = false;\n  }\n\n  selectPerson(event: MatSelectionListChange): void {\n    this.showPersonList = false;\n    this.isValidPerson = true;\n    this.selectedPerson = null;\n    this.dataSource = [...this.initPlans];\n    this.table.renderRows();\n    this.enteredSalesperson = event.source.selectedOptions.selected[0].value;\n    const findPerson = this.allPersons.find(\n      (person) => person.name === this.enteredSalesperson\n    );\n    if (findPerson) {\n      this.selectedPerson = { ...findPerson };\n      this.enteredSalesperson = this.selectedPerson.name;\n    }\n  }\n  /* Custom Data-list: Select Salesperson End */\n\n  getTaskList(): void {\n    if (this.selectedPerson === null) {\n      this.errorMessage = 'Please select  salesperson.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n\n    if (this.selectedDate === null) {\n      this.errorMessage = 'Please select  task date.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n\n    const dateString = convertDateToYYYYmmDD(this.selectedDate);\n\n    this.planService\n      .getContactPlans(dateString, this.selectedPerson._id || '')\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          data.forEach((record) => {\n            let per = record.contactPeriod;\n            let idx = -1;\n            idx = this.dataSource.findIndex(\n              (planItem) => planItem.contactPeriod === per\n            );\n\n            if (idx >= 0) {\n              this.dataSource.splice(idx, 1, { ...record });\n            }\n          });\n          this.table.renderRows();\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  deletePLan(arg: ContactPlan): void {\n    this.dialogService\n      .confirmDialog({\n        title: 'Scheduling',\n        message: 'Are you sure you want to delete this task?',\n        confirmText: 'Yes',\n        cancelText: 'No',\n      })\n      .pipe(\n        switchMap((confirm) => {\n          if (confirm) {\n            return this.planService.deleteContactPlan(arg._id);\n          } else {\n            return of(null);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          let idx = this.dataSource.findIndex(\n            (plan) => plan.contactPeriod === data?.contactPeriod\n          );\n          if (idx >= 0 && data !== null) {\n            this.dataSource[idx].customerId = '';\n            this.dataSource[idx].customerName = '';\n          }\n          this.table.renderRows();\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  addPlan(argPlan: ContactPlan): void {\n    if (this.selectedPerson === null) {\n      this.errorMessage = 'Please select  salesperson.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n\n    if (this.selectedDate === null) {\n      this.errorMessage = 'Please select task date.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n\n    const dateString = convertDateToYYYYmmDD(this.selectedDate);\n\n    const dataList = {\n      title: 'Select a Customer',\n      dataArray: this.allCustomers,\n    };\n    const dialogRef = this.dialog.open(DataListComponent, {\n      width: '80%',\n      maxWidth: '400px',\n      data: dataList,\n      disableClose: true,\n    });\n    dialogRef\n      .afterClosed()\n      .pipe(\n        switchMap((returnValue) => {\n          if (returnValue) {\n            this.selectedCustomer = returnValue;\n            const addPart = {\n              customerId: this.selectedCustomer?._id,\n              salespersonId: this.selectedPerson?._id,\n              contactDate: dateString,\n              contactPeriod: argPlan.contactPeriod,\n            };\n            return this.planService.addContactPlan(addPart);\n          } else {\n            return of(null);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          let idx = this.dataSource.findIndex(\n            (plan) => plan.contactPeriod === data?.contactPeriod\n          );\n          if (idx >= 0 && data !== null) {\n            this.dataSource[idx]._id = data._id;\n            this.dataSource[idx].customerName =\n              this.selectedCustomer?.name || '';\n            this.dataSource[idx].customerId = this.selectedCustomer?._id || '';\n            this.dataSource[idx].salespersonId = this.selectedPerson?._id || '';\n          }\n\n          this.table.renderRows();\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  updatePlan(initPlan: ContactPlan): void {\n    if (!this.selectedPerson) {\n      this.errorMessage = 'Please select salesperson firstly.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n\n    if (!this.selectedDate) {\n      this.errorMessage = 'Please select  date firstly.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n\n    const dataList = {\n      title: 'Select a Customer',\n      dataArray: this.allCustomers,\n    };\n    const dialogRef = this.dialog.open(DataListComponent, {\n      width: '80%',\n      maxWidth: '400px',\n      data: dataList,\n      disableClose: true,\n    });\n    dialogRef\n      .afterClosed()\n      .pipe(\n        switchMap((returnValue) => {\n          if (returnValue) {\n            this.selectedCustomer = returnValue;\n            const updatepart = {\n              customerId: this.selectedCustomer?._id,\n              salespersonId: initPlan.salespersonId,\n              contactDate: initPlan.contactDate,\n              contactPeriod: initPlan.contactPeriod,\n            };\n            return this.planService.updateContactPlan(initPlan._id, updatepart);\n          } else {\n            return of(null);\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          const idx = this.dataSource.findIndex(\n            (plan) => plan.contactPeriod === data?.contactPeriod\n          );\n          if (idx >= 0 && data !== null) {\n            this.dataSource[idx]._id = data._id;\n            this.dataSource[idx].customerName =\n              this.selectedCustomer?.name || '';\n            this.dataSource[idx].customerId = this.selectedCustomer?._id || '';\n          }\n          this.table.renderRows();\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\n// startHour: 8(:00)  endHour: 17(:00)\nfunction createNewContactPlan(\n  startHour: number,\n  endHour: number\n): ContactPlan[] {\n  const planArray: ContactPlan[] = [];\n  for (let i = startHour; i < endHour; i++) {\n    const start = i.toString();\n    const finalStart = start.padStart(2, '0') + ':00'; // 8:00 -> 08:00\n    const end = (i + 1).toString();\n    const finalEnd = end.padStart(2, '0') + ':00'; // 8:00 -> 08:00\n    const plan = {\n      _id: '',\n      customerId: '',\n      customerName: '',\n      contactDate: '',\n      contactPeriod: `${finalStart}-${finalEnd}`, // 09:00-10:00\n      salespersonId: '',\n      salespersonName: '',\n    };\n    planArray.push(plan);\n  }\n\n  return planArray;\n}\n","<div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n  <div class=\"calendar-section\" fxFlex=\"50%\" fxFlex.xs=\"100%\">\n    <app-calendar (itemEvent)=\"selectPLanDate($event)\" [title]=\"'Team Task'\"></app-calendar>\n  </div>\n  <div class=\"task-section\" fxFlex=\"50%\" fxFlex.xs=\"100%\">\n    <div class=\"search-area\">\n      <input\n        type=\"text\"\n        class=\"search-area_input\"\n        autocomplete\n        placeholder=\"Enter salesperson...\"\n        maxlength=\"20\"\n        [(ngModel)]=\"enteredSalesperson\"\n        (keyup.enter)=\"selectPersonByPressEnter(input.value)\"\n        (ngModelChange)=\"onInputChange(input.value)\"\n        #input\n      />\n      <button mat-button class=\"search-area_button\" (click)=\"getTaskList()\">\n        <mat-icon color=\"primary\">search</mat-icon>\n      </button>\n    </div>\n    <ng-container *ngIf=\"!isValidPerson\">\n      <mat-card class=\"search-area_input-error\">\n        No data matching the filter \"{{ input.value }}\".</mat-card\n      >\n    </ng-container>\n\n    <div\n      *ngIf=\"showPersonList && filterdPerson.length >= 1\"\n      class=\"data-list-wrapper\"\n    >\n      <mat-card>\n        <mat-selection-list\n          #persons\n          [multiple]=\"false\"\n          (selectionChange)=\"selectPerson($event)\"\n        >\n          <mat-list-option\n            *ngFor=\"let person of filterdPerson\"\n            [value]=\"person.name\"\n          >\n            {{ person.name }}\n          </mat-list-option>\n        </mat-selection-list>\n      </mat-card>\n    </div>\n\n    <div class=\"daily-task-card\">\n      <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"action\">\n          <th mat-header-cell *matHeaderCellDef>Action</th>\n          <td mat-cell *matCellDef=\"let element\">\n            <div\n              class=\"th_icon bigger-padding\"\n              *ngIf=\"!element.customerName\"\n              (click)=\"addPlan(element)\"\n            >\n              <mat-icon>add</mat-icon>\n            </div>\n            <div\n              class=\"th_icon\"\n              *ngIf=\"element.customerName\"\n              (click)=\"updatePlan(element)\"\n            >\n              <mat-icon>edit</mat-icon>\n            </div>\n            <div\n              class=\"th_icon\"\n              *ngIf=\"element.customerName\"\n              (click)=\"deletePLan(element)\"\n            >\n              <mat-icon>delete</mat-icon>\n            </div>\n          </td>\n        </ng-container>\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n          <th mat-header-cell *matHeaderCellDef>Customer</th>\n          <td mat-cell *matCellDef=\"let element\">{{ element.customerName }}</td>\n        </ng-container>\n\n        <!-- Period Column -->\n        <ng-container matColumnDef=\"period\">\n          <th mat-header-cell *matHeaderCellDef class=\"text-right\">Period</th>\n          <td mat-cell *matCellDef=\"let element\" class=\"text-right\">\n            {{ element.contactPeriod }}\n          </td>\n        </ng-container>\n\n        <!-- SelectedDate Row -->\n        <ng-container matColumnDef=\"table-title\">\n          <th\n            mat-header-cell\n            *matHeaderCellDef\n            colspan=\"3\"\n            class=\"selected-date-column\"\n          >\n            {{ selectedDate ? (selectedDate | date: \"dd MMMM yyyy\") : \"\" }}\n            &nbsp;&nbsp;&nbsp;&nbsp;Task List\n          </th>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"['table-title']\"></tr>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n      </table>\n    </div>\n  </div>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, Inject, HostListener } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-scroll-to-top',\n  templateUrl: './scroll-to-top.component.html',\n  styleUrls: ['./scroll-to-top.component.scss'],\n})\nexport class ScrollToTopComponent implements OnInit {\n  windowScrolled = false;\n\n  constructor(@Inject(DOCUMENT) private document: Document) {}\n\n  @HostListener('window:scroll', [])\n  onWindowScroll() {\n    if (\n      window.pageYOffset ||\n      document.documentElement.scrollTop ||\n      document.body.scrollTop > 100\n    ) {\n      this.windowScrolled = true;\n    } else if (\n      (this.windowScrolled && window.pageYOffset) ||\n      document.documentElement.scrollTop ||\n      document.body.scrollTop < 10\n    ) {\n      this.windowScrolled = false;\n    }\n  }\n  scrollToTop() {\n    (function smoothScroll() {\n      var currentScroll =\n        document.documentElement.scrollTop || document.body.scrollTop;\n      if (currentScroll > 0) {\n        window.requestAnimationFrame(smoothScroll);\n        window.scrollTo(0, currentScroll - currentScroll / 8);\n      }\n    })();\n  }\n\n  ngOnInit(): void {}\n}\n","<div class=\"scroll-to-top\" [ngClass]=\"{ 'show-scrollTop': windowScrolled }\">\n  <div class=\"back-top-button-container\">\n    <button\n      mat-fab\n      color=\"primary\"\n      data-toggle=\"button\"\n      aria-pressed=\"true\"\n      aria-label=\"back to top\"\n      (click)=\"scrollToTop()\"\n    >\n      <mat-icon>north</mat-icon>\n    </button>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ViewChild,\n  ElementRef,\n  OnDestroy,\n} from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { CartItem } from 'src/app/models/cart-item';\nimport { CartService } from 'src/app/services/cart.service';\nimport { environment } from 'src/environments/environment';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-cart-item',\n  templateUrl: './cart-item.component.html',\n  styleUrls: ['./cart-item.component.scss'],\n})\nexport class CartItemComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  @Input() item!: CartItem;\n  @Output() deletedItemEvent = new EventEmitter<string>();\n  @ViewChild('qty') qty!: ElementRef;\n  myForm!: FormGroup;\n  imgSrc = '';\n  imgSrcset = '';\n\n  showMore = false;\n  qtyReadOnly = true;\n  updateButtonText = 'edit';\n\n  constructor(private service: CartService) {}\n\n  ngOnInit(): void {\n    this.getImageSrcset();\n    this.myForm = new FormGroup(\n      {\n        productQty: new FormControl(this.item.quantity, {\n          validators: [\n            Validators.required,\n            Validators.min(0),\n            Validators.max(1000),\n          ],\n          updateOn: 'blur',\n        }),\n      },\n      { updateOn: 'submit' }\n    ); // <-- add custom validator at the FormGroup level\n  }\n\n  get productQty() {\n    return this.myForm.get('productQty');\n  }\n\n  onSelectedChange(value: boolean): void {\n    this.item.selected = value;\n    this.service\n      .toggleProductSelected(this.item._id, value)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n  }\n\n  onDelete(): void {\n    this.service\n      .removeProductFromCart(this.item._id)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe();\n    // this.deletedItemEvent.emit(this.item._id);\n  }\n\n  onUpdate(): void {\n    if (this.qtyReadOnly) {\n      this.qtyReadOnly = false;\n      this.qty.nativeElement.focus();\n      this.updateButtonText = 'update';\n    } else {\n      // if value is valid or not\n      if (this.productQty?.valid) {\n        this.qtyReadOnly = true;\n        this.updateButtonText = 'edit';\n        this.service\n          .updateProductQtyInCart(this.item._id, this.productQty?.value)\n          .pipe(takeUntil(this.destroy$))\n          .subscribe();\n      }\n    }\n  }\n\n  getImageSrcset(): void {\n    const apiUrl = environment.imageUrl + '/' + this.item.imageUrl + '/';\n\n    // products/e2 => https://xxx.xxx.xxx.xx:5000/products/e2/w-200.jpg 200w,\n    this.imgSrcset =\n      apiUrl +\n      'w_200.jpg 200w,' +\n      apiUrl +\n      'w_699.jpg 699w,' +\n      apiUrl +\n      'w_1080.jpg 1080w,';\n    this.imgSrc = apiUrl + 'w_1080.jpg';\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<form [formGroup]=\"myForm\">\n  <div class=\"item-wrapper\">\n    <div style=\"display: inline-block;text-align: start;\">\n      <input\n      #selectedFlag\n      type=\"checkbox\"\n      [checked]=\"item.selected\"\n      (change)=\"onSelectedChange(selectedFlag.checked)\"\n    />\n    </div>\n\n      <img\n        class=\"item-image\"\n        mat-card-image\n        sizes=\"(max-width: 1080px) 100vw, 1080px\"\n        [src]=\"imgSrc\"\n        [srcset]=\"imgSrcset\"\n        [alt]=\"item.productName\"\n      />\n\n    <div class=\"item-main-info\">\n      <p\n        [ngClass]=\"{ 'item-description': !showMore }\"\n        (click)=\"showMore = !showMore\"\n      >\n        {{ item.productName }}\n      </p>\n      <div class=\"item-price small-screen\">{{ item.price }}$</div>\n      <p>{{ item.stock }} in stock</p>\n      <div>\n        Qty: &nbsp;\n        <mat-form-field>\n          <input\n            formControlName=\"productQty\"\n            #qty\n            matInput\n            type=\"number\"\n            value=\"item.qty\"\n            [readonly]=\"qtyReadOnly\"\n            required\n          />\n          <mat-error *ngIf=\"productQty?.touched && productQty?.invalid\">\n            Qty should be between 0 and 1000.</mat-error\n          >\n        </mat-form-field>\n\n        <button mat-raised-button type=\"submit\" color=\"primary\" (click)=\"onUpdate()\">\n          {{ updateButtonText }}\n        </button>\n        <button mat-raised-button (click)=\"onDelete()\">delete</button>\n      </div>\n    </div>\n    <div class=\"item-price big-screen\">{{ item.price }}$</div>\n  </div>\n\n  <div class=\"divider\"></div>\n</form>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CartItem } from 'src/app/models/cart-item';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CartService } from 'src/app/services/cart.service';\nimport { catchError, switchMap, takeUntil } from 'rxjs/operators';\nimport { of, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.scss'],\n})\nexport class CartComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  errorMessage = '';\n\n  constructor(\n    public cartSrv: CartService,\n    private router: Router,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {}\n\n  getCustomerName(): string {\n    if (this.cartSrv.currentCustomer) {\n      return 'Client: ' + this.cartSrv.currentCustomer.name;\n    } else {\n      return '';\n    }\n  }\n\n  printInvoice(): void {\n    const isValidCustomer = this.cartSrv.currentCustomer?.isAuthorized;\n    if (isValidCustomer === undefined || isValidCustomer === false) {\n      this.errorMessage =\n        'This customer is not yet authorized. Please contact your administrator.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n    let orderHeaderId = '';\n\n    this.cartSrv\n      .addCartItemsToOrder()\n      .pipe(\n        switchMap((data) => {\n          orderHeaderId = data.v1.orderHeader;\n          return this.cartSrv\n            .clearCart()\n            .pipe(catchError((err) => of('clear cart error' + err)));\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        () => {\n          this.cartSrv.items = [];\n          this.router.navigate(['print', orderHeaderId], {\n            relativeTo: this.route,\n            queryParamsHandling: 'preserve',\n          });\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<mat-card class=\"cart-wrapper\">\n  <h2>Shopping Cart</h2>\n  <h3>{{ getCustomerName() }}</h3>\n  <hr class=\"cart-divider\" />\n  <div *ngIf=\"cartSrv.items.length === 0\">Your cart is Empty.</div>\n\n  <ng-container *ngFor=\"let item of cartSrv.items\">\n    <app-cart-item [item]=\"item\"></app-cart-item>\n  </ng-container>\n  <div class=\"cart-amount\">\n    <p>\n      Total&nbsp;({{ cartSrv.getTotalQuantity() }} items):\n      <strong>{{ cartSrv.getAmount() }}$</strong>\n    </p>\n    <button mat-raised-button color=\"primary\" (click)=\"printInvoice()\">\n      proceed to checkout\n    </button>\n  </div>\n</mat-card>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  Component,\n  Input,\n  ViewChild,\n  OnInit,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\n\nimport { constants } from 'src/app/config/constants';\nimport { PdfMakeService } from 'src/app/services/pdfmake.service';\nimport * as fileConvert from 'src/app/utils/file-convert.util';\nimport { OrderService } from 'src/app/services/order.service';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { Customer } from 'src/app/models/customer';\nimport { OrderItem } from '../../../models/order-item';\nimport { switchMap, tap, map, takeUntil } from 'rxjs/operators';\nimport { of, throwError, Subject, pipe } from 'rxjs';\n\n@Component({\n  selector: 'app-print-invoice',\n  templateUrl: './print-invoice.component.html',\n  styleUrls: ['./print-invoice.component.scss'],\n})\nexport class PrintInvoiceComponent implements OnInit, OnDestroy, AfterViewInit {\n  destroy$: Subject<void> = new Subject<void>();\n\n  panelOpenState = false;\n  displayedColumns: string[] = ['position', 'name', 'price', 'quantity'];\n  dataSource!: MatTableDataSource<OrderItem>;\n  orderCustomer?: Customer;\n  errorMessage = '';\n  orderDetails!: OrderItem[];\n\n  @ViewChild(MatSort) sort!: MatSort;\n\n  constructor(\n    private pdfService: PdfMakeService,\n    private orderService: OrderService,\n    private customerService: CustomerService,\n    private route: ActivatedRoute\n  ) {}\n\n  ngOnInit(): void {\n    this.getOrderDetails();\n  }\n\n  ngAfterViewInit() {}\n\n  getOrderDetails(): void {\n    const orderHeaderId =\n      this.route.snapshot.paramMap.get('orderHeaderId') || '';\n    if (orderHeaderId.trim().length < 1) {\n      this.errorMessage = 'Please select an valid order.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n\n    this.orderService\n      .getOrderByHeaderId(orderHeaderId)\n      .pipe(\n        tap((data) => {\n          this.orderDetails = data;\n          this.dataSource = new MatTableDataSource([...data]);\n          this.dataSource.sort = this.sort;\n        }),\n        switchMap((data) => {\n          if (data && data.length >= 1) {\n            return this.customerService.getCustomer(data[0].customerId);\n          } else {\n            return throwError(of('No valid customer for this order.'));\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          this.orderCustomer = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  getCustomerDetails(): void {\n    if (this.orderCustomer !== undefined && this.orderCustomer._id) {\n      this.customerService\n        .getCustomer(this.orderCustomer._id)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(\n          (data) => {\n            this.orderCustomer = data;\n          },\n          (err) => {\n            this.errorMessage = err;\n            setTimeout(() => {\n              this.errorMessage = '';\n            }, 3000);\n          }\n        );\n    }\n  }\n\n  /** Gets the total cost of all transactions. */\n  getTotalCost(): number {\n    if (this.orderDetails !== undefined && this.orderDetails.length > 0) {\n      return this.orderDetails\n        .map((t) => t.quantity * t.price)\n        .reduce((acc, value) => acc + value, 0);\n    } else {\n      return 0;\n    }\n  }\n\n  openPdf(): void {\n    if (!(this.orderDetails && this.orderDetails.length > 0)) {\n      this.errorMessage = 'No data for output.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n    const docDefinition = this.generateInvoiceData();\n    this.pdfService.generatePDF(docDefinition);\n  }\n\n  generateInvoiceData(): any {\n    //  myClient: Client;\n    //   myCompany: MyCompany;\n    //   items: CartItem[];\n\n    const items = [...this.orderDetails];\n    const subTotal = this.getTotalCost();\n    const taxTPS = subTotal * constants.tps;\n    const taxTVQ = subTotal * constants.tvq;\n    const total = subTotal + taxTPS + taxTVQ;\n    const docDefinition = {\n      header: 'Best Supplier of Gasoline',\n      content: [\n        {\n          text: 'Best Gas Company',\n          fontSize: 16,\n          alignment: 'center',\n          color: '#047886',\n        },\n        {\n          text: 'INVOICE',\n          style: 'selectionHeader',\n        },\n        {\n          text: `Date of Issue: ${new Date().toLocaleDateString()}`,\n          alignment: 'left',\n        },\n        {\n          text: `Bill No:${(Math.random() * 1000).toFixed(0)}`,\n          alignment: 'left',\n          margin: [0, 0, 16, 16],\n        },\n        {\n          margin: [0, 0, 16, 16],\n          columns: [\n            [\n              {\n                text: 'BILLED TO',\n                bold: true,\n              },\n              { text: this.orderCustomer?.name },\n              { text: this.orderCustomer?.address },\n              { text: this.orderCustomer?.email },\n              { text: this.orderCustomer?.phone },\n            ],\n            [\n              {\n                text: 'FROM',\n                bold: true,\n              },\n              { text: 'My company is best gas supplier' },\n              { text: '8882 golden street' },\n              { text: 'software@gmail.com' },\n              { text: '01-514-111-222' },\n            ],\n          ],\n        },\n\n        {\n          margin: [0, 0, 16, 16],\n          table: {\n            headerRows: 1,\n            widths: ['*', 'auto', 'auto', 'auto'],\n            body: [\n              ['Product', 'Price', 'Quantity', 'Amount'],\n              ...items.map((item) => [\n                item.productName,\n                item.price,\n                item.quantity,\n                (item.price * item.quantity).toFixed(2),\n              ]),\n              [\n                { text: 'SubTotal', colSpan: 3, alignment: 'right' },\n                {},\n                {},\n                subTotal.toFixed(2),\n              ],\n              [\n                { text: 'T.P.S', colSpan: 3, alignment: 'right' },\n                {},\n                {},\n                taxTPS.toFixed(2),\n              ],\n              [\n                { text: 'T.V.Q', colSpan: 3, alignment: 'right' },\n                {},\n                {},\n                taxTVQ.toFixed(2),\n              ],\n              [\n                { text: 'Total Amount', colSpan: 3, alignment: 'right' },\n                {},\n                {},\n                total.toFixed(2),\n              ],\n            ],\n          },\n        },\n        {\n          text: 'Terms and Conditions:',\n          bold: true,\n          decoration: 'underline',\n          ontSize: 18,\n          margin: [0, 0, 0, 8],\n        },\n        {\n          ul: [\n            'Order can be return in max 10 days.',\n            'Warranty of all products will be subject to manufacturers',\n            'You can call 08-900-088 when you have technical problem.',\n          ],\n        },\n      ],\n      // common styles\n      styles: {\n        selectionHeader: {\n          fontSize: 18,\n          bold: true,\n          alignment: 'center',\n          decoration: 'underline',\n          color: 'skyblue',\n          margin: [0, 15, 0, 15],\n        },\n      },\n    };\n    return docDefinition;\n  }\n\n  downloadCSV() {\n    if (!(this.orderDetails && this.orderDetails.length > 0)) {\n      this.errorMessage = 'No data for output.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 3000);\n      return;\n    }\n\n    const initData = [...this.orderDetails];\n    if (!(initData && initData.length >= 1)) {\n      return;\n    }\n    const output = [];\n    const fields = Object.keys(initData[0]);\n    output.push(fields);\n    initData.forEach((row) => {\n      const rowData = [];\n      for (const [key, value] of Object.entries(row)) {\n        rowData.push(value);\n      }\n      output.push(rowData);\n    });\n\n    const csvFileData = fileConvert.makeCSV(output);\n    const fileName = 'order-details';\n    fileConvert.saveBlobtoLocalFile(csvFileData, fileName + '.csv', 'text/csv');\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<h2>Print Invoice</h2>\n<div>\n  <span\n    style=\"color: green\"\n    class=\"download-button-wrapper\"\n    (click)=\"downloadCSV()\"\n  >\n    <button mat-icon-button aria-label=\"print icon\">\n      <mat-icon>file_download</mat-icon></button\n    >CSV</span\n  >\n  <span class=\"download-button-wrapper\" (click)=\"openPdf()\">\n    <button mat-icon-button aria-label=\"print icon\">\n      <mat-icon>print</mat-icon></button\n    ><mat-label>PDF</mat-label></span\n  >\n</div>\n<div>\n  <mat-accordion>\n    <mat-expansion-panel\n      (opened)=\"panelOpenState = true\"\n      (closed)=\"panelOpenState = false\"\n    >\n      <mat-expansion-panel-header>\n        <mat-panel-title> Client Information </mat-panel-title>\n      </mat-expansion-panel-header>\n      <div class=\"client-section\">\n        <span\n          ><strong>Client No:&nbsp;</strong\n          >{{ orderCustomer?._id | slice: -5 }}</span\n        >\n        <span\n          ><strong>Client Name:&nbsp;</strong>{{ orderCustomer?.name }}</span\n        >\n        <span><strong>Address:&nbsp;</strong>{{ orderCustomer?.address }}</span>\n        <span><strong>Tel:&nbsp;</strong>{{ orderCustomer?.phone }}</span>\n      </div>\n      <mat-divider></mat-divider>\n      <p style=\"text-align: right\">\n        <button\n          mat-flat-button\n          style=\"margin-top: 16px\"\n          color=\"primary\"\n          (click)=\"getCustomerDetails()\"\n        >\n          Refresh\n        </button>\n      </p>\n    </mat-expansion-panel>\n  </mat-accordion>\n</div>\n<div class=\"table-wrapper\">\n  <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n    <!-- Position Column -->\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>No.</th>\n      <td mat-cell *matCellDef=\"let element; let i = index\">{{ i + 1 }}</td>\n      <td mat-footer-cell *matFooterCellDef>Total</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.productName }}</td>\n      <td mat-footer-cell *matFooterCellDef>&nbsp;</td>\n    </ng-container>\n\n    <!-- Quantity Column -->\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.quantity }}</td>\n      <td mat-footer-cell *matFooterCellDef>\n        {{ getTotalCost() | currency }}\n      </td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.price }}</td>\n      <td mat-footer-cell *matFooterCellDef>&nbsp;</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n  </table>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\nimport { Product } from 'src/app/models/product';\nimport { CartService } from 'src/app/services/cart.service';\nimport { WishListService } from 'src/app/services/wish-list.service';\nimport { PdfMakeService } from 'src/app/services/pdfmake.service';\n\nimport { environment } from 'src/environments/environment';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-product-item',\n  templateUrl: './product-item.component.html',\n  styleUrls: ['./product-item.component.scss'],\n})\nexport class ProductItemComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  @Input() productItem!: Product;\n  imgSrc = '';\n  imgSrcset = '';\n  showMore = false;\n  errorMessage = '';\n\n  constructor(\n    private cartService: CartService,\n    private wishListService: WishListService,\n    private pdfService: PdfMakeService,\n    private http: HttpClient\n  ) {}\n\n  ngOnInit(): void {\n    this.getImageSrcset();\n  }\n\n  getImageSrcset() {\n    const apiUrl = environment.imageUrl + '/' + this.productItem.imageUrl + '/';\n\n    // products/e2 => https://xxx.xxx.xxx.xx:5000/products/e2/w-200.jpg 200w,\n    this.imgSrcset =\n      apiUrl +\n      'w_200.jpg 200w,' +\n      apiUrl +\n      'w_699.jpg 699w,' +\n      apiUrl +\n      'w_1080.jpg 1080w,';\n    this.imgSrc = apiUrl + 'w_1080.jpg';\n  }\n\n  addToCart() {\n    if (!this.cartService.currentCustomer) {\n      this.errorMessage =\n        'Please select a customer before add products to cart.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    this.cartService.addProductToCart(this.productItem);\n  }\n\n  addToWishList() {\n    if (!this.cartService.currentCustomer) {\n      this.errorMessage =\n        'Please select a customer before add products to cart.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n    }\n    this.wishListService.addToWishList(this.productItem._id);\n  }\n\n  removeFromWishList(): void {\n    this.wishListService.removeFromWishList(this.productItem._id);\n  }\n\n  openPdf(): void {\n    if (!this.imgSrc.trim()) {\n      this.errorMessage =\n        'This product has no image.It is not subject to print.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    this.generateProductPDF();\n  }\n\n  generateProductPDF(): any {\n    let imageData = null;\n    const endpoint = this.imgSrc.trim();\n    let docDefinition: any;\n    this.http\n      .get(endpoint, { responseType: 'blob' })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          // show image\n          if (data) {\n            const reader = new FileReader();\n            reader.readAsDataURL(data);\n            reader.onload = (result) => {\n              imageData = result.target?.result;\n              docDefinition = {\n                header: 'Best Supplier of Gasoline',\n                content: [\n                  {\n                    text: 'Best Gas Company',\n                    fontSize: 16,\n                    alignment: 'center',\n                    color: '#047886',\n                    margin: [0, 0, 0, 24],\n                  },\n                  {\n                    margin: [0, 0, 0, 16],\n                    columns: [\n                      {\n                        text: 'https://www.goodcompany.com',\n                        link: 'http://google.com',\n                      },\n                      {\n                        text: `Date of Issue: ${new Date().toLocaleDateString()}`,\n                        align: 'left',\n                      },\n                    ],\n                  },\n\n                  {\n                    margin: [0, 0, 16, 16],\n                    columns: [\n                      [\n                        {\n                          image: imageData, //this.productItem.imageUrl,\n                          width: 200,\n                          height: 150,\n                        },\n                      ],\n                      [\n                        {\n                          text: this.productItem.name,\n\n                          margin: [0, 0, 0, 16],\n                        },\n                        {\n                          columns: [\n                            {\n                              text: '$' + this.productItem.price,\n                              color: '#990099',\n                            },\n                            {\n                              text: this.productItem.stock + ' in stock',\n                              align: 'right',\n                              fontSize: 10,\n                            },\n                          ],\n                        },\n                        {\n                          text: 'Customer Satisfaction',\n                          bold: true,\n                          margin: [0, 16, 0, 8],\n                        },\n                        { text: 'very satisfied: 80%' },\n                        { text: 'satisfied     : 15%' },\n                        { text: 'not satisfied : 5%' },\n                      ],\n                    ],\n                  },\n\n                  {\n                    text: 'Terms and Conditions:',\n                    bold: true,\n                    decoration: 'underline',\n                    ontSize: 18,\n                    margin: [0, 16, 0, 16],\n                  },\n                  {\n                    lineHeight: 1.2,\n                    ul: [\n                      'Please visit our online stores to find best prices for your favorite goods.',\n                      'You can receive free delivery with your first order of $24 or more.',\n                      'You can call 08-900-088 when you have technical problem.',\n                    ],\n                  },\n                ],\n                // common styles\n                styles: {\n                  selectionHeader: {\n                    fontSize: 18,\n                    bold: true,\n                    alignment: 'center',\n                    decoration: 'underline',\n                    color: 'skyblue',\n                    margin: [0, 15, 0, 15],\n                  },\n                },\n              };\n              this.pdfService.generatePDF(docDefinition);\n            };\n          }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 2000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<mat-card class=\"product-card mat-elevation-z4\">\n  <mat-card-header>\n    <mat-card-title>{{ productItem.name }}</mat-card-title>\n    <mat-card-subtitle [ngClass]=\"productItem.category\">{{\n      productItem.category\n    }}</mat-card-subtitle>\n  </mat-card-header>\n\n  <button\n    mat-raised-button\n    class=\"image-button-container print mat-elevation-z4\"\n    (click)=\"openPdf()\"\n  >\n    <mat-icon color=\"primary\">print</mat-icon>\n  </button>\n  <button\n    mat-raised-button\n    class=\"image-button-container copy mat-elevation-z4\"\n    [cdkCopyToClipboard]=\"productItem.description\"\n  >\n    <mat-icon color=\"primary\">content_copy</mat-icon>\n  </button>\n\n  <img\n    class=\"product-image\"\n    mat-card-image\n    sizes=\"(max-width: 440px) 100vw, (max-width:900px) 33vw, 254px\"\n    [src]=\"imgSrc\"\n    [srcset]=\"imgSrcset\"\n    [alt]=\"productItem.name\"\n  />\n\n  <mat-card-content>\n    <p\n      [ngClass]=\"{ 'line-clamp': !showMore }\"\n      class=\"product-description\"\n      (click)=\"showMore = !showMore\"\n    >\n      {{ productItem.description }}\n    </p>\n\n    <p class=\"product-stock\">\n      <span>{{ productItem.price }}$</span>\n      <span *ngIf=\"productItem.stock > 0\"\n        >{{ productItem.stock }} in stock</span\n      >\n      <span *ngIf=\"!(productItem.stock > 0)\">out of stock</span>\n    </p>\n  </mat-card-content>\n  <mat-card-actions>\n    <button\n      *ngIf=\"productItem.stock > 0\"\n      mat-raised-button\n      color=\"primary\"\n      (click)=\"addToCart()\"\n    >\n      Add to Cart\n    </button>\n    <button\n      *ngIf=\"!(productItem.stock > 0)\"\n      mat-raised-button\n      (click)=\"addToWishList()\"\n    >\n      Add to Wait List\n    </button>\n  </mat-card-actions>\n</mat-card>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subject, Subscription } from 'rxjs';\nimport { map, startWith, switchMap, takeUntil } from 'rxjs/operators';\nimport { Product } from 'src/app/models/product';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SearchProductService } from 'src/app/services/search-product.service';\nimport { CartService } from 'src/app/services/cart.service';\nimport { Customer } from 'src/app/models/customer';\nimport { CustomerService } from '../../../services/customer.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n\n  categories: string[] = ['gas', 'diesel', 'lubricant'];\n  chipsControl = new FormControl(['gas']);\n\n  productList: Product[] = [];\n  filteredProductList: Product[] = [];\n  customerControl = new FormControl();\n  customers: Customer[] = [];\n  filteredOptions?: Observable<Customer[]>;\n  errorMessage = '';\n  sub?: Subscription;\n\n  constructor(\n    private searchSrv: SearchProductService,\n    private productService: ProductService,\n    private cartSrv: CartService,\n    private customerSrv: CustomerService\n  ) {}\n\n  ngOnInit(): void {\n    // this.productList = this.productService.getProducts();\n    this.sub = this.searchSrv.searchTermObs\n      .pipe(\n        switchMap((term: string | null) => {\n          return this.productService.getProducts(term);\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((data) => {\n        this.productList = [...data];\n        this.filteredProductList = [...data];\n      });\n    this.customerSrv\n      .getCustomers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.customers = [...data];\n      });\n    this.filteredOptions = this.customerControl.valueChanges.pipe(\n      startWith(''),\n      map((value) => this._filter(value))\n    );\n    this.chipsControl.valueChanges\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((data) => {\n        this.filteredProductList = [];\n        data.forEach((category: string) => {\n          const result = this.productList.filter(\n            (product) =>\n              category.toLowerCase().indexOf(product.category.toLowerCase()) >=\n              0\n          );\n          if (result && result.length >= 1) {\n            this.filteredProductList = [...this.filteredProductList, ...result];\n          }\n        });\n      });\n  }\n\n  private _filter(value: string): Customer[] {\n    const filterValue = value.toLowerCase();\n\n    return this.customers.filter((customer) =>\n      customer.name.toLowerCase().includes(filterValue)\n    );\n  }\n\n  updateCurrentCustomer(customer: Customer): void {\n    this.cartSrv.currentCustomer = { ...customer };\n    // get cart items\n    this.cartSrv\n      .getCartItems()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.cartSrv.items = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<h2>Select Products</h2>\n\n<div>\n  <form>\n    <mat-form-field class=\"input-area-full-width\" appearance=\"standard\">\n      <mat-label>Customer Name</mat-label>\n      <input\n        type=\"text\"\n        placeholder=\"Pick one\"\n        aria-label=\"customer\"\n        matInput\n        #customerInput\n        [formControl]=\"customerControl\"\n        [matAutocomplete]=\"auto\"\n      />\n      <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n        <mat-option\n          *ngFor=\"let option of filteredOptions | async\"\n          [value]=\"option.name\"\n          (onSelectionChange)=\"updateCurrentCustomer(option)\"\n        >\n          {{ option.name }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  </form>\n</div>\n<div class=\"chips-container\">\n  <app-chips-multi-select [options]=\"categories\" [formControl]=\"chipsControl\">\n  </app-chips-multi-select>\n</div>\n<h3>Search result is : {{ filteredProductList.length }} articles</h3>\n\n<div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n  <div\n    fxFlex=\"25%\"\n    fxFlex.xs=\"100%\"\n    fxFlex.sm=\"33%\"\n    *ngFor=\"let item of filteredProductList\"\n  >\n    <app-product-item [productItem]=\"item\"></app-product-item>\n  </div>\n</div>\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-wish-list',\n  templateUrl: './wish-list.component.html',\n  styleUrls: ['./wish-list.component.scss']\n})\nexport class WishListComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>wish-list works!</p>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\nimport { UniqueUserValidator } from 'src/app/services/unique-user.directive';\nimport { uniquePasswordValidator } from 'src/app/services/unique-password.directive';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss'],\n})\nexport class SignUpComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  hide = true;\n  hideRepeat = true;\n  myForm!: FormGroup;\n  errorMessage: string | null = null;\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private uniqueValidator: UniqueUserValidator\n  ) {}\n\n  ngOnInit(): void {\n    this.myForm = new FormGroup(\n      {\n        fullName: new FormControl('', {\n          validators: [\n            Validators.required,\n            Validators.minLength(3),\n            Validators.maxLength(10),\n          ],\n\n          updateOn: 'blur',\n        }),\n        email: new FormControl('', {\n          validators: [Validators.required, Validators.email],\n          asyncValidators: [\n            this.uniqueValidator.validate.bind(this.uniqueValidator),\n          ],\n          updateOn: 'blur',\n        }),\n        password: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n        repeatPassword: new FormControl('', {\n          validators: [Validators.required, Validators.minLength(6)],\n          updateOn: 'blur',\n        }),\n      },\n      { validators: uniquePasswordValidator, updateOn: 'submit' }\n    ); // <-- add custom validator at the FormGroup level\n  }\n\n  get fullName() {\n    return this.myForm.get('fullName');\n  }\n  get email() {\n    return this.myForm.get('email');\n  }\n\n  get password() {\n    return this.myForm.get('password');\n  }\n\n  get repeatPassword() {\n    return this.myForm.get('repeatPassword');\n  }\n\n  getNameMessage() {\n    if (this.fullName?.errors?.required) {\n      return 'Name is required';\n    }\n    if (this.fullName?.errors?.minlength) {\n      return 'Too short: ' + JSON.stringify(this.fullName?.errors?.minlength);\n    }\n    if (this.fullName?.errors?.maxlength) {\n      return 'Too long: ' + JSON.stringify(this.fullName?.errors?.maxlength);\n    }\n    return 'Name is invalid';\n  }\n\n  getEmailMessage() {\n    if (this.email?.errors?.required) {\n      return 'Email is required';\n    }\n\n    if (this.email?.errors?.userExists) {\n      return 'Email Exists';\n    }\n    if (this.email?.errors?.email) {\n      return 'Not a valid email ';\n    }\n    return 'Email is invalid';\n  }\n\n  getPasswordMessage() {\n    if (this.password?.errors?.required) {\n      return 'Password is required';\n    }\n\n    if (this.password?.errors?.pattern) {\n      return 'Password is invalid';\n    }\n    if (this.password?.errors?.minlength) {\n      return 'Too short: ' + JSON.stringify(this.password?.errors?.minlength);\n    }\n    return 'Password is invalid';\n  }\n\n  getRepeatPasswordMessage() {\n    if (this.repeatPassword?.errors?.required) {\n      return 'RepeatPassword is required';\n    }\n\n    if (this.repeatPassword?.errors?.pattern) {\n      return 'RepeatPassword is invalid';\n    }\n    return 'RepeatPassword is invalid';\n  }\n\n  signup() {\n    if (this.myForm.invalid) {\n      return;\n    }\n    this.authService\n      .registerUser({\n        name: this.fullName?.value,\n        email: this.email?.value,\n        password: this.password?.value,\n      })\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.authService.currentUser = { ...data.data };\n          this.authService.loginWithJwt();\n          this.router.navigate(['/']);\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => (this.errorMessage = ''), 3000);\n        }\n      );\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<div class=\"main__container\">\n  <div class=\"signup-card\">\n    <main class=\"signup-content\">\n      <span class=\"signup-header\">Signup</span>\n      <!-- signup form -->\n      <form\n        class=\"signup-form\"\n        (ngSubmit)=\"signup()\"\n        #authform=\"ngForm\"\n        [formGroup]=\"myForm\"\n      >\n        <div class=\"form-input-wrapper\">\n          <input\n            type=\"text\"\n            autofocus\n            id=\"fullName\"\n            name=\"fullName\"\n            placeholder=\"Enter your name\"\n            formControlName=\"fullName\"\n            class=\"signup-input\"\n          />\n        </div>\n        <div\n          class=\"form-input-wrapper error\"\n          *ngIf=\"fullName?.touched && fullName?.invalid\"\n        >\n          {{ getNameMessage() }}\n        </div>\n        <div class=\"form-input-wrapper\">\n          <input\n            type=\"email\"\n            id=\"email\"\n            name=\"email\"\n            placeholder=\"pat@example.com\"\n            formControlName=\"email\"\n            class=\"signup-input\"\n          />\n        </div>\n        <div\n          class=\"form-input-wrapper error\"\n          *ngIf=\"email?.touched && email?.invalid\"\n        >\n          {{ getEmailMessage() }}\n        </div>\n        <div class=\"form-input-wrapper\">\n          <input\n            id=\"password\"\n            name=\"password\"\n            [type]=\"hide ? 'password' : 'text'\"\n            placeholder=\"Password\"\n            formControlName=\"password\"\n            class=\"signup-input\"\n          />\n          <button\n            mat-icon-button\n            matSuffix\n             name=\"togglePassword\"\n\n            class=\"button-in-input\"\n            (click)=\"hide = !hide\"\n            [attr.aria-label]=\"'Hide password'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\n          </button>\n        </div>\n        <div\n          class=\"form-input-wrapper error\"\n          *ngIf=\"password?.touched && password?.invalid\"\n        >\n          {{ getPasswordMessage() }}\n        </div>\n        <div class=\"form-input-wrapper\">\n          <input\n            [type]=\"hideRepeat ? 'password' : 'text'\"\n            id=\"repeatPassword\"\n            name=\"repeatPassword\"\n            placeholder=\"Repeat your password\"\n            formControlName=\"repeatPassword\"\n            class=\"signup-input\"\n            minlength=\"6\"\n            required\n          />\n          <button\n            mat-icon-button\n            matSuffix\n            name=\"toggleRepeatPassword\"\n            class=\"button-in-input\"\n            (click)=\"hideRepeat = !hideRepeat\"\n            [attr.aria-label]=\"'Hide repeatPassword'\"\n            [attr.aria-pressed]=\"hide\"\n          >\n            <mat-icon>{{\n              hideRepeat ? \"visibility_off\" : \"visibility\"\n            }}</mat-icon>\n          </button>\n        </div>\n        <div\n          class=\"form-input-wrapper error\"\n          *ngIf=\"repeatPassword?.touched && repeatPassword?.invalid\"\n        >\n          {{ getRepeatPasswordMessage() }}\n        </div>\n\n        <div\n          class=\"form-input-wrapper error\"\n          *ngIf=\"\n            myForm?.touched &&\n            myForm?.invalid &&\n            repeatPassword?.value.length > 0 &&\n            myForm?.errors?.identifyPassword\n          \"\n        >\n          RepeatPassword should be equal to password.\n        </div>\n        <div class=\"form-input-wrapper\">\n          <input\n            type=\"submit\"\n            name=\"submit\"\n            value=\"Signup\"\n            class=\"signup-btn\"\n            [class.btn-disabled]=\"!authform.form.valid\"\n            [disabled]=\"!authform.form.valid\"\n          />\n          <input\n            type=\"button\"\n            name=\"reset\"\n            value=\"Reset\"\n            class=\"signup-btn\"\n            (click)=\"authform.reset()\"\n          />\n        </div>\n      </form>\n      <div class=\"login-link-wrapper\">\n        <span class=\"login-notice\">Already Have an account?</span>\n        <a class=\"login-link\" routerLink=\"/login\">login</a>\n      </div>\n    </main>\n\n    <!-- linking to signup -->\n    <aside class=\"signup-aside\">\n      <div class=\"signup-aside-overlay\"></div>\n      <h1 class=\"signup-welcome-text\">Join Excellent Today!</h1>\n      <hr class=\"signup-aside-hr\" />\n    </aside>\n  </div>\n</div>\n","import {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nimport { Component, OnInit, OnDestroy } from '@angular/core';\n\n@Component({\n  selector: 'app-slide-shows',\n  templateUrl: './slide-shows.component.html',\n  styleUrls: ['./slide-shows.component.scss'],\n  animations: [\n    trigger('flyInOut', [\n      transition('void => *', [\n        style({\n          position: 'absolute',\n          left: '0',\n          top: '0',\n          transform: 'translateX(-100%)',\n        }),\n        animate(1000),\n      ]),\n      transition('* => void', [\n        animate(\n          1000,\n          style({\n            position: 'absolute',\n            left: '0',\n            top: '0',\n            opacity: 0,\n            transform: 'translateX(100%)',\n          })\n        ),\n      ]),\n    ]),\n  ],\n})\nexport class SlideShowsComponent implements OnInit, OnDestroy {\n  activeSlideIdx = 0;\n  slides = [0, 1, 2];\n  slideId?: number;\n\n  constructor() {}\n\n  ngOnInit(): void {\n    this.slideId = window.setInterval(() => {\n      this.plusSlides(1);\n    }, 5000);\n  }\n\n  ngOnDestroy() {\n    window.clearInterval(this.slideId);\n  }\n\n  changeSlideManually(incrementIdx: number) {\n    window.clearInterval(this.slideId);\n    this.plusSlides(incrementIdx);\n  }\n\n  plusSlides(incrementIdx: number): void {\n    this.activeSlideIdx += incrementIdx;\n    if (this.activeSlideIdx > 2) {\n      this.activeSlideIdx = 0;\n    }\n    if (this.activeSlideIdx < 0) {\n      this.activeSlideIdx = 2;\n    }\n  }\n\n  jumpToSlide(index: number): void {\n    window.clearInterval(this.slideId);\n    this.activeSlideIdx = index;\n  }\n}\n","<div class=\"slideshow-container\">\n  <div\n    @flyInOut\n    *ngIf=\"activeSlideIdx === 0\"\n    fxLayout=\"row wrap \"\n    fxLayoutAlign=\"space-between\"\n  >\n    <div fxFlex=\"48%\" fxFlex.lt-md=\"100%\">\n      <img src=\"./assets/station.jpg\" class=\"slide-image\" alt=\"slide image\" />\n    </div>\n    <div fxFlex=\"48%\" fxFlex.lt-md=\"100%\" class=\"slideshow-text-wrapper\">\n      <h3 class=\"slideshow-text-header\">Best gas station near your house</h3>\n      <h4>24/7 service without stopping</h4>\n      <p class=\"slideshow-text-details\">\n        <button mat-raised-button color=\"primary\" routerLink=\"/find-store\">\n          Know more...<mat-icon>navigate_next</mat-icon>\n        </button>\n      </p>\n    </div>\n  </div>\n\n  <div\n    @flyInOut\n    *ngIf=\"activeSlideIdx === 1\"\n    fxLayout=\"row wrap \"\n    fxLayoutAlign=\"space-between\"\n  >\n    <div fxFlex=\"48%\" fxFlex.lt-md=\"100%\">\n      <img src=\"./assets/garage.jpg\" class=\"slide-image\" alt=\"slide image\" />\n    </div>\n    <div fxFlex=\"48%\" fxFlex.lt-md=\"100%\" class=\"slideshow-text-area\">\n      <h3 class=\"slideshow-text-header\">Best engineers. Best service.</h3>\n      <div style=\"display: flex; justify-content: flex-start; padding: 8px\">\n        <div style=\"border-right: 1px solid lightgray; padding-right: 8px\">\n          <p style=\"font-size: 16px; font-weight: bold\">1200</p>\n          <p>qualified engineers</p>\n        </div>\n        <div style=\"padding-left: 8px\">\n          <p style=\"font-size: 16px; font-weight: bold\">12000</p>\n          <p>franchised service centers</p>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    @flyInOut\n    *ngIf=\"activeSlideIdx === 2\"\n    fxLayout=\"row wrap \"\n    fxLayoutAlign=\"space-between\"\n  >\n    <div fxFlex=\"48%\" fxFlex.lt-md=\"100%\">\n      <img\n        src=\"./assets/carwashing.jpg\"\n        class=\"slide-image\"\n        alt=\"slide image\"\n      />\n    </div>\n    <div fxFlex=\"48%\" fxFlex.lt-md=\"100%\" class=\"slideshow-text-area\">\n      <h3 class=\"slideshow-text-header\">All in One</h3>\n      <p class=\"slideshow-text-details\">\n        From Oct 1 2021 , we will supply one year free car-washing service for\n        customers whose order value is more than $100. Download our app for more\n        information about discounts and products on-sale.\n      </p>\n    </div>\n  </div>\n\n  <ul class=\"slideshow-dots\">\n    <li\n      *ngFor=\"let slide of slides\"\n      [ngClass]=\"{ active: slide === activeSlideIdx }\"\n    >\n      <a (click)=\"jumpToSlide(slide)\">{{ slide + 1 }}</a>\n    </li>\n  </ul>\n  <a class=\"prev\" (click)=\"changeSlideManually(-1)\">❮</a>\n  <a class=\"next\" (click)=\"changeSlideManually(1)\">❯</a>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-success',\n  templateUrl: './success.component.html',\n  styleUrls: ['./success.component.scss'],\n})\nexport class SuccessComponent implements OnInit {\n  @Input() message: string | null = null;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"success-wrapper\">\n  <span class=\"success-message\">{{ message }}</span>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-technical-support',\n  templateUrl: './technical-support.component.html',\n  styleUrls: ['./technical-support.component.scss']\n})\nexport class TechnicalSupportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>technical-support works!</p>\n","import { Component, ViewChild, OnInit, OnDestroy } from '@angular/core';\nimport {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDropList,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport { FormControl } from '@angular/forms';\nimport { MapInfoWindow, MapMarker, GoogleMap } from '@angular/google-maps';\nimport { map, takeUntil, switchMap, concatMap } from 'rxjs/operators';\nimport {\n  Subject,\n  Observable,\n  forkJoin,\n  of,\n  from as observableFrom,\n  throwError,\n} from 'rxjs';\n\nimport { ContactPlan } from '../../models/contact-plan';\nimport { ContactRecord } from '../../models/contact-record';\nimport { Customer } from 'src/app/models/customer';\n\nimport { ContactPlanService } from 'src/app/services/contact-plan.service';\nimport { ContactRecordService } from 'src/app/services/contact-record.service';\nimport { CustomerService } from 'src/app/services/customer.service';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { convertDateToYYYYmmDD } from '../../utils/date-convert.util';\nimport { DialogService } from 'src/app/services/dialog.service';\n\nconst MAX_CLIENT_NUMBER = 8; // a salesperson can visit 8 clients daily when planning\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.scss'],\n})\nexport class TodoComponent implements OnInit, OnDestroy {\n  @ViewChild(GoogleMap, { static: false }) map!: GoogleMap; // false: resolve after change detection.\n  @ViewChild(MapInfoWindow, { static: false }) info!: MapInfoWindow;\n  destroy$: Subject<void> = new Subject<void>();\n  dateControl = new FormControl();\n\n  errorMessage = '';\n  successMessage = '';\n  zoom = 12;\n  center!: google.maps.LatLngLiteral;\n  options: google.maps.MapOptions = {\n    mapTypeId: 'hybrid',\n    zoomControl: true,\n    scrollwheel: false,\n    disableDoubleClickZoom: false,\n    maxZoom: 15,\n    minZoom: 8,\n  };\n  markers: Array<any> = [];\n  infoContent = 'aaa';\n  tourLength = 300;\n\n  initPlans: ContactPlan[] = [];\n  initRecords: ContactRecord[] = [];\n\n  todo = [''];\n\n  done = [''];\n  customerArray: Customer[] = [];\n  selectedDate: Date | null = null;\n\n  constructor(\n    private planSrv: ContactPlanService,\n    private recordSrv: ContactRecordService,\n    private customerSrv: CustomerService,\n    private authSrv: AuthService,\n    private dialogService: DialogService\n  ) {}\n\n  ngOnInit(): void {\n    const options = {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 60000,\n    };\n\n    getPosition(options)\n      .then((position) => {\n        this.center = {\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        };\n      })\n      .catch((err) => {\n        this.errorMessage = err;\n        setTimeout(() => {\n          this.errorMessage = '';\n        }, 3000);\n      });\n\n    // get customers\n    this.customerSrv\n      .getCustomers()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(\n        (data) => {\n          this.customerArray = data;\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 0);\n        }\n      );\n\n    this.dateControl.valueChanges\n      .pipe(\n        switchMap((returnDate) => {\n          if (returnDate) {\n            this.selectedDate = returnDate;\n            const argDate = convertDateToYYYYmmDD(returnDate);\n            const personId = this.authSrv.currentUser?._id || '';\n\n            return forkJoin({\n              plans: this.planSrv.getContactPlans(argDate, personId),\n              records: this.recordSrv.getContactRecords(argDate, personId),\n            });\n          } else {\n            return of({\n              plans: [],\n              records: [],\n            });\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          this.initPlans = [...data.plans];\n          this.initRecords = [...data.records];\n          if (this.initRecords && this.initRecords.length > 0) {\n            return this.resetTodoAndDone(this.initRecords);\n          } else {\n            return this.resetTodoAndDone(this.initPlans);\n          }\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  resetTodoAndDone(todoDataSource: ContactPlan[] | ContactRecord[]): void {\n    this.todo = [];\n    this.done = [];\n    todoDataSource.forEach((plan: ContactPlan | ContactRecord) => {\n      this.todo.push(plan.customerName);\n    });\n    this.customerArray.forEach((customer) => {\n      const isFound = this.todo.find((item) => item === customer.name);\n      if (!isFound) {\n        this.done.push(customer.name);\n      }\n    });\n    this.addMarker();\n  }\n\n  onSubmit(): void {\n    if (!(this.todo && this.todo.length > 0)) {\n      this.errorMessage = 'No plan need to be saved.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    if (!this.selectedDate) {\n      this.errorMessage = 'Please select a valid date.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    let i = 0;\n    observableFrom(this.todo)\n      .pipe(\n        concatMap((customerName) => {\n          const idx = this.customerArray.findIndex(\n            (customer) => customer.name === customerName\n          );\n          if (idx < 0) {\n            return throwError(customerName + 'is not found in database');\n          }\n\n          const dateString = convertDateToYYYYmmDD(\n            this.selectedDate || new Date()\n          );\n          const periodString = this.getStringFromPosition(i);\n          i += 1;\n          return this.recordSrv.addContactRecord({\n            customerId: this.customerArray[idx]._id,\n            contactDate: dateString,\n            contactPeriod: periodString,\n          });\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe(\n        (data) => {\n          this.errorMessage = '';\n          this.successMessage = 'Your visit plan has been saved successfully.';\n          setTimeout(() => {\n            this.successMessage = '';\n          }, 2000);\n        },\n        (err) => {\n          this.errorMessage = err;\n          setTimeout(() => {\n            this.errorMessage = '';\n          }, 3000);\n        }\n      );\n  }\n\n  getInitTask(): void {\n    if (!this.selectedDate) {\n      this.errorMessage = 'Please select a valid date.';\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    if (this.initRecords && this.initRecords.length > 1) {\n      this.dialogService\n        .confirmDialog({\n          title: 'Contact Management',\n          message: 'Are you sure you to delete this plan?',\n          confirmText: 'Yes',\n          cancelText: 'No',\n        })\n        .pipe(\n          switchMap((confirm) => {\n            if (confirm) {\n              const dateString = convertDateToYYYYmmDD(\n                this.selectedDate || new Date()\n              );\n              const personId = this.authSrv.currentUser?._id || '';\n              return forkJoin({\n                deletedOldRecords: this.recordSrv.deleteSpecificDatePlan(\n                  dateString,\n                  personId\n                ),\n                initPlans: this.planSrv.getContactPlans(dateString, personId),\n              });\n            } else {\n              return of(null);\n            }\n          }),\n          takeUntil(this.destroy$)\n        )\n        .subscribe(\n          (data) => {\n            if (data) {\n              this.initPlans = data?.initPlans || [];\n              this.resetTodoAndDone(this.initPlans);\n            }\n          },\n          (err) => {\n            this.errorMessage = err;\n            setTimeout(() => {\n              this.errorMessage = '';\n            }, 3000);\n          }\n        );\n    }\n  }\n\n  drop(event: CdkDragDrop<string[]>): void {\n    if (\n      event.container.id === 'todo' &&\n      event.container.data.length >= MAX_CLIENT_NUMBER\n    ) {\n      this.errorMessage = `A salesperson can visit au maximum ${MAX_CLIENT_NUMBER} clients daily.`;\n      setTimeout(() => {\n        this.errorMessage = '';\n      }, 2000);\n      return;\n    }\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n    this.tourLength = this.todo.length * 50; // TODO google map distance calculation\n    this.addMarker();\n  }\n\n  zoomIn(): void {\n    if (this.zoom < (this.options.maxZoom ? this.options.maxZoom : 7)) {\n      this.zoom++;\n    }\n  }\n\n  zoomOut(): void {\n    if (this.zoom > (this.options.minZoom ? this.options.minZoom : 7)) {\n      this.zoom--;\n    }\n  }\n\n  click(event: google.maps.MapMouseEvent): void {\n    // console.log('event', event);\n  }\n\n  addMarker(): void {\n    this.markers = [];\n    this.todo.forEach((visitedCustomer) => {\n      const idx = this.customerArray.findIndex(\n        (customer) => customer.name === visitedCustomer\n      );\n      if (idx >= 0) {\n        const customerLat = parseFloat(this.customerArray[idx].latitude || '0');\n        const customerLng = parseFloat(\n          this.customerArray[idx].longitude || '0'\n        );\n\n        this.markers.push({\n          position: {\n            lat: customerLat,\n            lng: customerLng,\n          },\n          label: {\n            color: 'red',\n            text: visitedCustomer,\n          },\n          title: visitedCustomer,\n          info: visitedCustomer,\n          options: {\n            animation: google.maps.Animation.DROP,\n          },\n        });\n      }\n    });\n  }\n\n  openInfo(marker: MapMarker, content: string): void {\n    this.infoContent = content + ' is a excellent location';\n    this.info.open(marker);\n  }\n\n  getStringFromPosition(index: number): string {\n    const start = (index + 8).toString();\n    const end = (index + 9).toString();\n    const finalStart = start.padStart(2, '0'); // 08:00,09:00,...\n    const finalEnd = end.padStart(2, '0'); // 09:00,10.00,...\n\n    // YYYY-mm-DD\n    const period = finalStart + ':00-' + finalEnd + ':00';\n    return period;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n\nfunction getPosition(options?: PositionOptions): Promise<any> {\n  return new Promise((resolve, reject) =>\n    navigator.geolocation.getCurrentPosition(resolve, reject, options)\n  );\n}\n","<div>\n  <div class=\"header\">\n    <h2>Contact Management</h2>\n    <div class=\"search-section\">\n      <mat-form-field appearance=\"fill\">\n        <mat-label>Choose a date</mat-label>\n        <input matInput [formControl]=\"dateControl\" [matDatepicker]=\"picker\" />\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n      </mat-form-field>\n      <button mat-raised-button (click)=\"getInitTask()\">Get Init Task</button>\n      <button mat-raised-button color=\"primary\" (click)=\"onSubmit()\">\n        Confirm\n      </button>\n    </div>\n  </div>\n\n  <div *ngIf=\"initPlans.length >= 1; else noData\">\n    <div fxLayout=\"row wrap\" fxLayoutGap=\"16px grid\">\n      <div fxFlex=\"45%\" fxFlex.xs=\"100%\">\n        <h3>Visit Plan</h3>\n\n        <div\n          cdkDropList\n          id=\"todo\"\n          #todoList=\"cdkDropList\"\n          [cdkDropListData]=\"todo\"\n          [cdkDropListConnectedTo]=\"doneList\"\n          class=\"list\"\n          (cdkDropListDropped)=\"drop($event)\"\n        >\n          <div\n            class=\"list-item\"\n            *ngFor=\"let item of todo; let i = index\"\n            cdkDrag\n          >\n            {{ getStringFromPosition(i) }}&nbsp;&nbsp;{{ item }}\n          </div>\n        </div>\n      </div>\n\n      <div fxFlex=\"45%\" fxFlex.xs=\"100%\">\n        <h3>Waiting List</h3>\n        <div\n          id=\"done\"\n          cdkDropList\n          #doneList=\"cdkDropList\"\n          [cdkDropListData]=\"done\"\n          [cdkDropListConnectedTo]=\"todoList\"\n          class=\"list\"\n          (cdkDropListDropped)=\"drop($event)\"\n        >\n          <div class=\"list-item\" *ngFor=\"let item of done\" cdkDrag>\n            {{ item }}\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <h3 class=\"todo-summary\">\n      Summary: Today you need visit {{ todo.length }} clients and drive\n      {{ tourLength }} kilometers. Good trip.\n    </h3>\n  </div>\n\n  <ng-template #noData>\n    <mat-card>No data matching the criteria.</mat-card>\n  </ng-template>\n\n  <mat-divider style=\"margin: 8px auto\"></mat-divider>\n\n  <div class=\"map-wrapper\">\n    <google-map\n      height=\"500px\"\n      width=\"100%\"\n      [zoom]=\"zoom\"\n      [center]=\"center\"\n      [options]=\"options\"\n      (mapClick)=\"click($event)\"\n    >\n      <map-marker\n        #markerElem=\"mapMarker\"\n        *ngFor=\"let marker of markers\"\n        [position]=\"marker.position\"\n        [label]=\"marker.label\"\n        [title]=\"marker.title\"\n        [options]=\"marker.options\"\n        (mapClick)=\"openInfo(markerElem, marker.info)\"\n      ></map-marker>\n\n      <map-info-window style=\"width: 150px; height: 150px; color: blue\">{{\n        infoContent\n      }}</map-info-window>\n    </google-map>\n  </div>\n</div>\n<app-success *ngIf=\"successMessage\" [message]=\"successMessage\"></app-success>\n\n<app-error *ngIf=\"errorMessage\" [message]=\"errorMessage\"></app-error>\n","import {\n  Component,\n  HostBinding,\n  Input,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { NavItem } from 'src/app/models/nav-item';\nimport { NavService } from 'src/app/services/nav.service';\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\n\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-menu-list-item',\n  templateUrl: './menu-list-item.component.html',\n  styleUrls: ['./menu-list-item.component.scss'],\n  animations: [\n    trigger('indicatorRotate', [\n      state('collapsed', style({ transform: 'rotate(0deg)' })),\n      state('expanded', style({ transform: 'rotate(180deg' })),\n      transition('expanded <=> collapsed', animate('225ms')),\n    ]),\n  ],\n})\nexport class MenuListItemComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n\n  expanded = false;\n  @HostBinding('attr.aria-expanded') ariaExpanded = this.expanded;\n  @Input() item!: NavItem;\n  @Input() depth?: number;\n\n  constructor(public navService: NavService, public router: Router) {\n    if (this.depth === undefined) {\n      this.depth = 0;\n    }\n  }\n\n  ngOnInit(): void {\n    this.navService.currentUrl\n      .pipe(takeUntil(this.destroy$))\n      .subscribe((url) => {\n        if (this.item.route && url) {\n          this.expanded = url.indexOf(`/${this.item.route}`) === 0;\n          this.ariaExpanded = this.expanded;\n        }\n      });\n  }\n\n  onItemSelected(item: NavItem): void {\n    if (!item.children || !item.children.length) {\n      if (this.navService.appDrawer.mode === 'over') {\n        this.router.navigate([item.route]);\n        this.navService.closeNav();\n      } else {\n        this.router.navigate([item.route]);\n      }\n    }\n\n    if (item.children && item.children.length) {\n      this.expanded = !this.expanded;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<a\n  class=\"menu-list-item\"\n  mat-list-item\n  [ngStyle]=\"{ 'padding-left': (depth === undefined ? 0 : depth) * 12 + 'px' }\"\n  (click)=\"onItemSelected(item)\"\n  [ngClass]=\"{\n    active: item.route ? router.isActive(item.route, true) : false,\n    expanded: expanded\n  }\"\n  ><mat-icon>{{ item.icon }}</mat-icon> {{ item.label }}\n  <span fxFlex *ngIf=\"item.children && item.children.length\">\n    <span fxFlex></span\n    ><mat-icon [@indicatorRotate]=\"expanded ? 'expanded' : 'collapsed'\"\n      >expand_more</mat-icon\n    ></span\n  >\n</a>\n<div *ngIf=\"expanded\">\n  <app-menu-list-item\n    *ngFor=\"let child of item.children\"\n    [item]=\"child\"\n    [depth]=\"(depth === undefined ? 0 : depth) + 1\"\n  >\n  </app-menu-list-item>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  map,\n  takeUntil,\n  tap,\n} from 'rxjs/operators';\nimport { SearchProductService } from 'src/app/services/search-product.service';\n@Component({\n  selector: 'app-search-box',\n  templateUrl: './search-box.component.html',\n  styleUrls: ['./search-box.component.scss'],\n})\nexport class SearchBoxComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  sub?: Subscription;\n  constructor(\n    private router: Router,\n    private activeRoute: ActivatedRoute,\n    private service: SearchProductService\n  ) {}\n\n  productInput = new FormControl('', [\n    Validators.required,\n    Validators.maxLength(50),\n    Validators.minLength(3),\n  ]);\n\n  ngOnInit(): void {\n    this.sub = this.productInput.valueChanges\n      .pipe(\n        debounceTime(300),\n        distinctUntilChanged(),\n\n        map((searchTerm: string) => {\n          this.service.setSearchTerms(searchTerm);\n          // if productList component is not active, navigate to it\n          if (!this.router.url.includes('product-list')) {\n            this.router.navigateByUrl('/product-list');\n          }\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy(): void {\n    this.sub?.unsubscribe();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  resetSearchTerm(): void {\n    this.productInput.reset();\n  }\n}\n","<form role=\"search\">\n  <div class=\"search-box-wrapper\">\n    <input\n      #searchBox\n      [formControl]=\"productInput\"\n      id=\"mySearch\"\n      class=\"search-input\"\n      name=\"mySearch\"\n      type=\"search\"\n      aria-label=\"search\"\n      placeholder=\"Search product...\"\n    />\n    <mat-icon *ngIf=\"searchBox.value === '' || searchBox.value === undefined\"\n      >search</mat-icon\n    >\n    <mat-icon *ngIf=\"searchBox.value.length > 0\" (click)=\"resetSearchTerm()\"\n      >clear</mat-icon\n    >\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-unique-pass',\n  templateUrl: './unique-pass.component.html',\n  styleUrls: ['./unique-pass.component.scss'],\n})\nexport class UniquePassComponent implements OnInit {\n  public model = {\n    newPassword: '',\n    newRepeatPassword: '',\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onSubmit() {\n    this.model = {\n      newPassword: 'aaa',\n      newRepeatPassword: 'aaa',\n    };\n  }\n}\n","<form #myForm=\"ngForm\" appUniquePassword>\n  <input\n    type=\"text\"\n    id=\"password\"\n    name=\"password\"\n    required\n    [(ngModel)]=\"model.newPassword\"\n  />\n  <input\n    type=\"text\"\n    name=\"repeatPassword\"\n    id=\"repeatPassword\"\n    [(ngModel)]=\"model.newRepeatPassword\"\n  />\n  <div>{{ model | json }}</div>\n  <div id=\"formErrors\">{{ myForm.errors | json }}</div>\n  <button class=\"primary\" (click)=\"myForm.reset(); onSubmit()\">Submit</button>\n</form>\n","export const constants = {\n  tps: 0.05,\n  tvq: 0.09975,\n};\n","import { EnvService } from './env.service';\nimport { browser } from 'protractor';\n\nexport const EnvServiceFactory = () => {\n  // Create env\n  const env = new EnvService();\n\n  // Read environment variables  from browser window\n  const browserWindow = window || {};\n \n  // const windowKeys: string[] = Object.keys(browserWindow);\n\n  // const browserWindowEnv = browserWindow['__env'] || {};\n\n  // Assign environment variables from browser window to env\n  // In the current implementation, properties from env.js\n  // If needed, a deep merge can be performed\n  for (const key in browserWindow) {\n    if (browserWindow.hasOwnProperty(key)) {\n      if (key === 'apiUrl') {\n        env.apiUrl = (browserWindow as any).apiUrl;\n      }\n      if (key === 'enableDebug') {\n        env.enableDebug = (browserWindow as any).enableDebug;\n      }\n      // env[key] = window['__env'][key];\n    }\n  }\n\n  return env;\n};\n\nexport const EnvServiceProvider = {\n  provide: EnvService,\n  useFactory: EnvServiceFactory,\n  deps: [],\n};\n","export class EnvService {\n  public apiUrl = '';\n  public enableDebug = true;\n  constructor() {}\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-form-select',\n  templateUrl: './form-select.component.html',\n  styleUrls: ['./form-select.component.scss']\n})\nexport class FormSelectComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>form-select works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n \n})\nexport class HomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-slide-shows></app-slide-shows>\n<app-animate-card-list></app-animate-card-list>\n<div class='introduction-wrapper'>\n  <p class=\"introduction\">\n    Find your nearest gas Station using our station locator tool, and plan your\n    route. And when you’re done, find out how new series V-Power Premium\n    Gasoline provides the best total engine protection you can get, delivering\n    unbeatable protection against gunk and corrosion and superior protection\n    against wear.\n  </p>\n  <br />\n  <p class=\"introduction\">\n    Enjoy your journey with happiness and without any worry, because we put the\n    service back into service-station, ensuring you always leave us a little\n    happier than when you arrived.\n  </p>\n</div>\n<div class=\"banner-wrapper\">\n  <img src=\"./assets/homepage.jpg\" class=\"banner-image\" />\n  <h1 class=\"banner-text\">Best gas and Best Service for all the world!</h1>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse,\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(req).pipe(\n      retry(1),\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = '';\n        if (error.error instanceof ErrorEvent) {\n          // client-side error\n          errorMessage = `Error: ${error.error.message}`;\n        } else {\n          // server-side error\n          errorMessage = `Error Code: ${error.status}\\nMessage:${error.error} \\n${error.message}`;\n        }\n        //  window.alert(errorMessage);\n        return throwError(errorMessage);\n      })\n    );\n  }\n}\n","/* \"Barrel\" of Http Interceptors */\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { ErrorInterceptor } from './error.interceptor';\nimport { NetworkInterceptor } from './network.interceptor';\nimport { XsrftokenInterceptor } from './xsrftoken.interceptor';\n\n/** Http interceptor providers in outside-in order */\nexport const httpInterceptorProviders = [\n  { provide: HTTP_INTERCEPTORS, useClass: XsrftokenInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: NetworkInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n];\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoadingService } from '../services/loading.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class NetworkInterceptor implements HttpInterceptor {\n  constructor(private loader: LoadingService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    this.loader.show();\n    return next.handle(request).pipe(\n      finalize(() => {\n        this.loader.hide();\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable()\nexport class XsrftokenInterceptor implements HttpInterceptor {\n  constructor(public cookieService: CookieService) {}\n\n  intercept(\n    request: HttpRequest<unknown>,\n    next: HttpHandler\n  ): Observable<HttpEvent<unknown>> {\n    let token;\n    let reqClone;\n    token = this.cookieService.get(environment.cookieName);\n\n    if (token !== null && !request.headers.has(environment.tokenHeaderName)) {\n      // reqClone = request.clone({\n      //   headers: request.headers.set(environment.tokenHeaderName, token),\n      //   withCredentials: true,\n      //   body: request.body,\n      // });\n\n      reqClone = request.clone({\n        headers: request.headers.set(environment.tokenHeaderName, token),\n        body: request.body,\n      });\n\n      return next.handle(reqClone);\n    }\n    return next.handle(request);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { LayoutModule } from '@angular/cdk/layout';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    LayoutModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    MatFormFieldModule,\n  ],\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.scss']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-card-title>404</mat-card-title>\n  <mat-card-content>Page Not Found</mat-card-content>\n  <mat-card-actions align=\"end\">\n    <button mat-raised-button color=\"primary\" routerLink=\"/home\">Back To Home</button>\n  </mat-card-actions>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  CanLoad,\n  Route,\n  Router,\n  RouterStateSnapshot,\n  UrlSegment,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminServiceGuard implements CanLoad, CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n\n  canLoad(route: Route, segments: UrlSegment[]): boolean {\n    if (this.authService.currentUser?.isAdmin !== true) {\n      window.alert(\n        'You are not authorized to visit this page.Please contact your supervisor.'\n      );\n      // // Navigate to /home\n      this.router.navigate(['/home']);\n      return false;\n    }\n    return true;\n  }\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    if (this.authService.currentUser?.isAdmin) {\n      return true;\n    }\n\n    window.alert(\n      'You are not authorized to visit this page.Please contact your supervisor.'\n    );\n    this.router.navigate(['/home']);\n    // this.router.navigate(['/login'], {\n    //   queryParams: { returnUrl: state.url },\n    // });\n    return false;\n  }\n}\n","import {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\nimport { AuthService } from '../services/auth.service';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    if (!this.authService.currentUser?.name) {\n      window.alert('You need log in.');\n      // // Navigate to /login?returnUrl=xxxxx\n      this.router.navigate(['/login'], {\n        queryParams: { returnUrl: state.url },\n      });\n      return false;\n    }\n\n    if (\n      this.authService.currentUser?.name &&\n      this.authService.currentUser?.isSalesperson === false\n    ) {\n      window.alert(\n        'You are not authorized to visit this page.Please contact your supervisor.'\n      );\n      // // Navigate to /home\n      this.router.navigate(['/home']);\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable, of, throwError } from 'rxjs';\nimport { User } from '../models/user';\nimport jwt_decode from 'jwt-decode';\nimport { CookieService } from 'ngx-cookie-service';\nimport { LogsService } from './logs.service';\n\nimport { environment } from '../../environments/environment';\nimport {\n  ReturnWithDataAndMessage,\n  ReturnWithMessage,\n} from '../models/return-values';\nimport { map, tap } from 'rxjs/operators';\n\nexport interface RegisterResult {\n  data: User;\n  message: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  configUrl = environment.apiUrl;\n  tokenKey = 'token';\n  currentUser: User | null = null;\n\n  constructor(\n    private http: HttpClient,\n    private cookieService: CookieService,\n    private logsSrv: LogsService\n  ) {}\n\n  registerUser(user: User): Observable<RegisterResult> {\n    const url = this.configUrl + '/users';\n    return this.http.post<RegisterResult>(url, user);\n  }\n\n  findUserByEmail(email: string): Observable<User[]> {\n    const url = this.configUrl + '/users/?email=' + email;\n    return this.http.get<User[]>(url);\n  }\n\n  sendResetPasswordEmail(email: string): Observable<ReturnWithMessage> {\n    const url = this.configUrl + '/auth/send-reset-email';\n    return this.http.post<ReturnWithMessage>(url, { email });\n  }\n\n  sendPlaceOrderEmail(\n    email?: string,\n    customerName?: string,\n    orderAmount?: number,\n    orderTax?: number,\n    orderTotal?: number\n  ) {\n    const url = this.configUrl + '/auth/send-place-order-email';\n    return this.http.post(url, {\n      email,\n      name: customerName,\n      amount: orderAmount,\n      tax: orderTax,\n      total: orderTotal,\n    });\n  }\n\n  resetPassword(\n    newPassword: string,\n    token: string\n  ): Observable<ReturnWithMessage> {\n    const url = this.configUrl + '/auth/reset-password?token=' + token;\n    return this.http.post<ReturnWithMessage>(url, { newPassword });\n  }\n\n  updatePassword(\n    password: string,\n    newPassword: string\n  ): Observable<ReturnWithMessage> {\n    const url = this.configUrl + '/auth';\n    return this.http.put<ReturnWithMessage>(url, { password, newPassword });\n  }\n\n  login(email: string, password: string): Observable<ReturnWithDataAndMessage> {\n    const url = this.configUrl + '/auth';\n\n    return this.http\n      .post<ReturnWithDataAndMessage>(url, {\n        email,\n        password,\n      })\n      .pipe(\n        tap((res) => {\n          if (res.token) {\n            this.cookieService.set(environment.cookieName, res.token);\n          }\n        })\n      );\n  }\n\n  getToken(): string {\n    return this.cookieService.get(environment.cookieName) || '';\n    //  return localStorage.getItem(this.tokenKey) || '';\n  }\n\n  loginWithJwt() {\n    this.logsSrv.addLog('login');\n  }\n\n  setCurrentUser(): void {\n    const jwt = this.getToken();\n    if (jwt && jwt.length >= 1) {\n      try {\n        this.currentUser = jwt_decode(jwt);\n      } catch (error) {\n        this.currentUser = null;\n      }\n    }\n  }\n\n  logout(): void {\n    this.logsSrv.addLog('logout');\n    this.cookieService.delete(environment.cookieName);\n    window.location.reload();\n  }\n\n  // with credential case\n  // login(email: string, password: string): Observable<ReturnWithDataAndMessage> {\n  //   const url = this.configUrl + '/auth';\n\n  //   return this.http\n  //     .post<ReturnWithDataAndMessage>(\n  //       url,\n  //       {\n  //         email,\n  //         password,\n  //       },\n  //       {\n  //         withCredentials: true,\n  //       }\n  //     )\n  //     .pipe(\n  //       tap((res) => {\n  //         if (res.token) {\n  //           this.cookieService.set(environment.cookieName, res.token);\n  //         }\n  //       })\n  //     );\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, from as observableFrom, forkJoin, zip } from 'rxjs';\n\nimport { CartItem } from '../models/cart-item';\nimport { Product } from '../models/product';\nimport { Customer } from '../models/customer';\nimport { environment } from '../../environments/environment';\nimport { User } from '../models/user';\nimport { AuthService } from './auth.service';\nimport { constants } from 'src/app/config/constants';\nimport { concatMap, switchMap, catchError } from 'rxjs/operators';\nimport { convertDateToYYYYmmDD } from '../utils/date-convert.util';\nimport { OrderHeader } from '../models/order-header';\n\nimport { ReturnWithDataAndMessage } from '../models/return-values';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartService {\n  configUrl = environment.apiUrl + '/carts';\n\n  items: CartItem[] = [];\n  currentCustomer?: Customer;\n\n  constructor(private http: HttpClient, private authSrv: AuthService) {}\n\n  getTotalQuantity(): number {\n    return this.items\n      .map((item) => (item.selected ? item.quantity : 0))\n      .reduce((acc, value) => acc + value, 0);\n  }\n\n  getAmount(): number {\n    return this.items\n      .filter((item) => item.selected === true)\n      .reduce((acc, item) => acc + item.quantity * item.price, 0);\n  }\n\n  getCartItems(): Observable<CartItem[]> {\n    const customer = this.currentCustomer?._id;\n    const createUser = this.authSrv.currentUser?._id;\n    const getUrl =\n      this.configUrl + '?createUser=' + createUser + '&customer=' + customer;\n    return this.http.get<CartItem[]>(getUrl);\n  }\n\n  removeProductFromCart(id: string = ''): Observable<ReturnWithDataAndMessage> {\n    const idx = this.items.findIndex((item) => item._id === id);\n    if (idx >= 0) {\n      this.items.splice(idx, 1);\n    }\n    const deleteUrl = this.configUrl + '?id=' + id;\n    return this.http.delete<ReturnWithDataAndMessage>(deleteUrl);\n  }\n\n  clearCart(): Observable<ReturnWithDataAndMessage> {\n    const customerId = this.currentCustomer?._id;\n    const createUserId = this.authSrv.currentUser?._id;\n    const deleteUrl =\n      this.configUrl +\n      '?customer=' +\n      customerId +\n      '&createUser=' +\n      createUserId;\n    return this.http.delete<ReturnWithDataAndMessage>(deleteUrl);\n  }\n\n  addProductToCart(product: Product): void {\n    // 1, update local array\n    // 2, update remote database\n    const cartItem = this.items.find((item) => item.productId === product._id);\n    if (cartItem) {\n      cartItem.quantity += 1;\n      const putUrl = this.configUrl + '/' + cartItem._id;\n      this.http.put(putUrl, { quantity: cartItem.quantity }).subscribe();\n    } else {\n      const newItem: CartItem = {\n        selected: true,\n        productId: product._id,\n        productName: product.name,\n        quantity: 1,\n        price: product.price,\n        stock: product.stock,\n        customerId: this.currentCustomer?._id,\n        customerName: this.currentCustomer?.name,\n        salespersonId: this.authSrv.currentUser?._id,\n        salespersonName: this.authSrv.currentUser?.name,\n        imageUrl: product.imageUrl ? product.imageUrl : '',\n      };\n      this.http.post(this.configUrl, newItem).subscribe((data: any) => {\n        const _id = data._id;\n        this.items.push({ _id, ...newItem });\n      });\n    }\n  }\n\n  updateProductQtyInCart(\n    _id = '',\n    quantity: number\n  ): Observable<ReturnWithDataAndMessage | never[]> {\n    // 1, update local array\n    // 2, update remote database\n    const cartItem = this.items.find((item) => item._id === _id);\n    if (cartItem) {\n      cartItem.quantity = quantity;\n      const putUrl = this.configUrl + '/' + _id;\n      return this.http.put<ReturnWithDataAndMessage>(putUrl, { quantity });\n    } else {\n      return of([]);\n    }\n  }\n\n  toggleProductSelected(_id: string = '', selected: boolean): Observable<any> {\n    const idx = this.items.findIndex((item) => item._id === _id);\n\n    if (idx >= 0) {\n      const cartItem = { ...this.items[idx] };\n      cartItem.selected = selected;\n      this.items.splice(idx, 1, cartItem);\n      const putUrl = this.configUrl + '/' + _id;\n      return this.http.put(putUrl, { selected });\n    } else {\n      return of([]);\n    }\n  }\n\n  addCartItemsToOrder(): Observable<any> {\n    const orderDetailUrl = environment.apiUrl + '/orders';\n    // firstly, save order header\n    // secondly, save order detail with header information\n    const headerUrl = environment.apiUrl + '/orderheaders';\n    const orderDate = new Date();\n\n    const orderDateString = convertDateToYYYYmmDD(orderDate);\n\n    const subTotal = this.getAmount();\n    const taxTPS = subTotal * constants.tps;\n    const taxTVQ = subTotal * constants.tvq;\n    const total = subTotal + taxTPS + taxTVQ;\n\n    const selectedItems = this.items.filter((item) => item.selected);\n\n    // 1,add an order header\n    return this.http\n      .post(headerUrl, {\n        customerId: this.currentCustomer?._id,\n        orderDate: orderDateString,\n      })\n      .pipe(\n        catchError((err) => of('orderHeader save error ' + err)),\n        switchMap((headerData: any) => {\n          return forkJoin({\n            v1: observableFrom(selectedItems).pipe(\n              concatMap((item) => {\n                return this.http\n                  .post(orderDetailUrl, {\n                    orderHeader: headerData._id,\n                    orderDate: headerData.orderDate,\n                    customerId: this.currentCustomer?._id,\n                    productId: item.productId,\n                    quantity: item.quantity,\n                    price: item.price,\n                    amount: item.price * item.quantity,\n                  })\n                  .pipe(\n                    catchError((err) => {\n                      return of('order detail save error' + err);\n                    })\n                  );\n              })\n            ),\n            v2: this.authSrv\n              .sendPlaceOrderEmail(\n                this.currentCustomer?.email,\n                this.currentCustomer?.name,\n                subTotal,\n                taxTPS + taxTVQ,\n                total\n              )\n              .pipe(\n                catchError((err) => {\n                  console.log(\n                    'email error , email is ',\n                    this.currentCustomer?.email,\n                    JSON.stringify(err)\n                  );\n                  return of('send email error is' + err);\n                })\n              ),\n          });\n        })\n      );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { ContactPlan, ContactPlanForUpdate } from '../models/contact-plan';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactPlanService {\n  configUrl = environment.apiUrl + '/contactplans';\n\n  constructor(private http: HttpClient) {}\n\n  getContactPlans(\n    contactDate: string,\n    salesperson: string\n  ): Observable<ContactPlan[]> {\n    const url =\n      environment.apiUrl +\n      `/contactplans?contactDate=${contactDate}&salesperson=${salesperson}`;\n    return this.http.get<ContactPlan[]>(url).pipe(retry(1));\n  }\n\n  addContactPlan(addPart: ContactPlanForUpdate): Observable<ContactPlan> {\n    return this.http.post<ContactPlan>(this.configUrl, addPart);\n  }\n\n  deleteContactPlan(planId: string): Observable<ContactPlan> {\n    const url = `${this.configUrl}/${planId}`;\n    return this.http.delete<ContactPlan>(url);\n  }\n\n  updateContactPlan(\n    planId: string,\n    updatePart: ContactPlanForUpdate\n  ): Observable<ContactPlan> {\n    const url = `${this.configUrl}/${planId}`;\n    return this.http.put<ContactPlan>(url, updatePart);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { ContactRecord, ContactRecordForUpdate } from '../models/contact-record';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ContactRecordService {\n  configUrl = environment.apiUrl + '/contactrecords';\n\n  constructor(private http: HttpClient) {}\n\n  getContactRecords(\n    contactDate: string,\n    salesperson: string\n  ): Observable<ContactRecord[]> {\n    const url =\n      this.configUrl + `?contactDate=${contactDate}&salesperson=${salesperson}`;\n    return this.http.get<ContactRecord[]>(url).pipe(retry(1));\n  }\n\n  addContactRecord(addPart: ContactRecordForUpdate): Observable<ContactRecord> {\n    return this.http.post<ContactRecord>(this.configUrl, addPart);\n  }\n\n  deleteContactRecord(planId: string): Observable<ContactRecord> {\n    const url = `${this.configUrl}/${planId}`;\n    return this.http.delete<ContactRecord>(url);\n  }\n\n  deleteSpecificDatePlan(\n    contactDate: string,\n    createUserId: string\n  ): Observable<ContactRecord[]> {\n    const deleteUrl =\n      this.configUrl +\n      '?contactDate=' +\n      contactDate +\n      '&createUser=' +\n      createUserId;\n    return this.http.delete<ContactRecord[]>(deleteUrl);\n  }\n\n  updateContactRecord(\n    planId: string,\n    updatePart: ContactRecordForUpdate\n  ): Observable<ContactRecord> {\n    const url = `${this.configUrl}/${planId}`;\n    return this.http.put<ContactRecord>(url, updatePart);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nexport const MAX_LINES = 20000;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CreateGraphDataService {\n  items = [];\n  worker: Worker;\n\n  constructor() {\n    this.worker = new Worker(\n      new URL('../yearly-data-create.worker', import.meta.url)\n    );\n  }\n\n  createProductData(counter: number): Observable<number> {\n    const resultSubject = new BehaviorSubject<number>(0);\n    this.worker.onmessage = ({ data }) => {\n      resultSubject.next(data);\n    };\n    this.worker.postMessage(counter);\n    return resultSubject;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, timer, throwError } from 'rxjs';\nimport {\n  map,\n  share,\n  switchMap,\n  shareReplay,\n  catchError,\n  tap,\n} from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\nimport { Customer, CustomerForUpdate } from '../models/customer';\nimport {\n  ReturnWithDataAndMessage,\n  ReturnWithMessage,\n} from '../models/return-values';\n\n@Injectable()\nexport class CustomerAuthorizeService {\n  configUrl = environment.apiUrl + '/customers';\n  createDate: Date | null = null;\n\n  constructor(private http: HttpClient) {}\n\n  getAllUnauthorizedCustomers(): Observable<Customer[]> {\n    const url = `${this.configUrl}?isAuthorized=false`;\n    return this.http.get<Customer[]>(url);\n  }\n\n  getAllAuthorizedCustomers(): Observable<Customer[]> {\n    const url = `${this.configUrl}?isAuthorized=true`;\n    return this.http.get<Customer[]>(url);\n  }\n\n  requestNewAndUnAuthorizedCustomers(): Observable<never[] | Customer[]> {\n    const url =\n      `${this.configUrl}?isAuthorized=false&createDate=` +\n      this.createDate?.toUTCString();\n    return this.http.get<Customer[]>(url).pipe(\n      map((response) => response),\n      catchError((error) => {\n        throwError(error);\n        return of([]);\n      })\n    );\n  }\n\n  getCustomer(id: string): Observable<Customer> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.get<Customer>(url);\n  }\n\n  updateCustomer(\n    id: string,\n    updatePart: CustomerForUpdate\n  ): Observable<ReturnWithDataAndMessage> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.put<ReturnWithDataAndMessage>(url, updatePart);\n  }\n\n  deleteCustomer(id: string): Observable<ReturnWithMessage> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.delete<ReturnWithMessage>(url);\n  }\n\n  getCustomers(): Observable<Customer[]> {\n    const url = environment.apiUrl + '/customers';\n    return this.http.get<Customer[]>(url);\n  }\n\n  addCustomer(customer: Customer): Observable<Customer> {\n    return this.http.post<Customer>(this.configUrl, customer);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { Customer, CustomerForUpdate } from '../models/customer';\nimport {\n  ReturnWithDataAndMessage,\n  ReturnWithMessage,\n} from '../models/return-values';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomerService {\n  configUrl = environment.apiUrl + '/customers';\n\n  constructor(private http: HttpClient) {}\n\n  getCustomer(id: string): Observable<Customer> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.get<Customer>(url);\n  }\n\n  getAllAuthorizedCustomers(): Observable<Customer[]> {\n    const url = `${this.configUrl}?isAuthorized=true`;\n    return this.http.get<Customer[]>(url);\n  }\n\n  updateCustomer(\n    id: string,\n    updatePart: CustomerForUpdate\n  ): Observable<ReturnWithDataAndMessage> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.put<ReturnWithDataAndMessage>(url, updatePart);\n  }\n\n  deleteCustomer(id: string): Observable<ReturnWithMessage> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.delete<ReturnWithMessage>(url);\n  }\n\n  getCustomers(): Observable<Customer[]> {\n    const url = environment.apiUrl + '/customers';\n    return this.http.get<Customer[]>(url);\n  }\n\n  addCustomer(customer: Customer): Observable<Customer> {\n    return this.http.post<Customer>(this.configUrl, customer);\n  }\n}\n","import { ComponentType } from '@angular/cdk/portal';\nimport { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Observable } from 'rxjs';\nimport { ConfirmComponent } from '../shared/confirm/confirm.component';\n\nexport interface ConfirmDialogData {\n  title: string;\n  message: string;\n  confirmText: string;\n  cancelText: string;\n}\n@Injectable({\n  providedIn: 'root',\n})\nexport class DialogService {\n  constructor(private dialog: MatDialog) {}\n\n  confirmDialog(data: ConfirmDialogData): Observable<boolean> {\n    return this.dialog\n      .open(ConfirmComponent, { data, width: '400px', disableClose: true })\n      .afterClosed();\n  }\n\n  async openLazyDialog(dialogName: string): Promise<MatDialogRef<any>> {\n    const chunk = await import(\n      `../lazy-components/${dialogName}/${dialogName}.component`\n    );\n    const dialogComponent = Object.values(chunk)[0] as ComponentType<unknown>;\n    return this.dialog.open(dialogComponent);\n\n    // in component template\n    //  <button\n    //     mat-raised-button\n    //     (click)=\"dialogService.openLazyDialog('take-notes')\"\n    //   >\n    //     Open Lazy Loading Dialog\n    //   </button>\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fileSize',\n})\nexport class FileSizePipe implements PipeTransform {\n  // template, .html  {{ file.size | fileSize }}\n  transform(size: number): string {\n    return (size / (1024 * 1024)).toFixed(2) + 'MB';\n  }\n\n  // with parameters\n  // transform(size: number, extension: string = 'MB'): string {\n  //   return (size / (1024 * 1024)).toFixed(2) + extension;\n  // }\n  // {{ file.size | fileSize:'megabyte' }}\n  // {{ value | pipe:arg1:arg2 }}\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GoogleMapService {\n  mapKey = environment.mapKey;\n  constructor(private http: HttpClient) {}\n\n  getPositionByZipCode(zipCode: string): void {\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?key=${this.mapKey}&components=postal_code:${zipCode}`;\n    this.http.post(url, {}).subscribe((data: any) => {\n      const latitude = data.results[0].geometry.location.lat;\n      const longitude = data.results[0].geometry.location.lng;\n      alert('Lat = ' + latitude + '- Long = ' + longitude);\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoadingService {\n  private _loading = new BehaviorSubject<boolean>(false);\n  public readonly laoding$ = this._loading.asObservable();\n\n  constructor() {}\n  show() {\n    this._loading.next(true);\n  }\n  hide() {\n    this._loading.next(false);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { LogRecord } from 'src/app/models/log-record';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogsService {\n  ipAddress = '';\n  configUrl = environment.apiUrl + '/logs';\n\n  constructor(private http: HttpClient) {\n   //  this.getIPAddress();\n  }\n\n  getLog(id: string): Observable<LogRecord> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.get<LogRecord>(url);\n  }\n\n  deleteLog(id: string): Observable<LogRecord> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.delete<LogRecord>(url);\n  }\n\n  getLogs(\n    startDate?: Date,\n    endDate?: Date,\n    userId?: string,\n    content?: string\n  ): Observable<LogRecord[]> {\n    let url = this.configUrl;\n\n    if (\n      startDate !== undefined &&\n      endDate !== undefined &&\n      userId !== undefined &&\n      userId !== null\n    ) {\n      url = `${this.configUrl}?startDate=${startDate}&endDate=${endDate}&userId=${userId}&content=${content}`;\n    } else if (startDate !== undefined && endDate !== undefined) {\n      url = `${this.configUrl}?startDate=${startDate}&endDate=${endDate}`;\n    }\n\n    return this.http.get<LogRecord[]>(url).pipe(retry(1));\n  }\n\n  addLog(content: string): void {\n    this.http.post(this.configUrl, {  content }).subscribe();\n  }\n\n  getIPAddress(): void {\n    // CORS policy does not allow the operation\n    this.http\n      .get('https://api.ipify.org/?format=json')\n      .subscribe((res: any) => {\n        this.ipAddress = res.ip;\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ManagerServiceGuard implements CanActivate {\n  constructor(private router: Router, private authService: AuthService) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | boolean {\n    if (this.authService.currentUser?.isManager) {\n      return true;\n    }\n\n    // Navigate to /home\n    window.alert(\n      'You are not authorized to visit this page..Please contact your supervisor.'\n    );\n    this.router.navigate(['/home']);\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { Event, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavService {\n  public appDrawer!: MatSidenav;\n  public currentUrl = new BehaviorSubject<string | null>(null);\n\n  constructor(private router: Router) {\n    this.router.events.pipe(first()).subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        this.currentUrl.next(event.urlAfterRedirects);\n      }\n    });\n  }\n\n  public closeNav(): void {\n    this.appDrawer.close();\n  }\n\n  public openNav(): void {\n    this.appDrawer.open();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError, of } from 'rxjs';\nimport { catchError, retry, switchMap } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { OrderItem } from '../models/order-item';\nimport { OrderHeader } from '../models/order-header';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderService {\n  configUrl = environment.apiUrl + '/orders';\n\n  constructor(private http: HttpClient) {}\n\n  getOrder(id: string): Observable<OrderItem> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.get<OrderItem>(url);\n  }\n\n  getOrderByHeaderId(headerId: string): Observable<OrderItem[]> {\n    const url = `${this.configUrl}?orderHeader=${headerId}`;\n    return this.http.get<OrderItem[]>(url);\n  }\n\n  getOrders(): Observable<OrderItem[]> {\n    return this.http.get<OrderItem[]>(this.configUrl).pipe(retry(1));\n  }\n\n  getFilterdOrders(\n    startDate: string,\n    endDate: string,\n    salespersonId = ''\n  ): Observable<OrderItem[]> {\n    // http://localhost:5000/api/Orders?startdate=2021-01-01&enddate=2022-12-01&userName=&content=insert\n    const requestUrl = `${this.configUrl}?startdate=${startDate}&enddate=${endDate}&createuser=${salespersonId}`;\n    return this.http.get<OrderItem[]>(requestUrl).pipe(retry(1));\n  }\n\n  getOrderHeaders(\n    startDate: string,\n    endDate: string,\n    salespersonId = ''\n  ): Observable<OrderHeader[]> {\n    // http(s)://xxx.xxx.xxx.xxx:xxxx/api/orderheaders?startdate=2022-09-12&enddate=2022-09-13&createuser=2322332323\n    const requestUrl =\n      environment.apiUrl +\n      `/orderheaders?startdate=${startDate}&enddate=${endDate}&createuser=${salespersonId}`;\n    return this.http.get<OrderHeader[]>(requestUrl).pipe(retry(1));\n  }\n}\n","import { Injectable } from '@angular/core';\n// tslint:disable-next-line: import-spacing\nimport  * as pdfMake from 'pdfmake/build/pdfMake';\n// tslint:disable-next-line: import-spacing\nimport  * as pdfFonts from 'pdfmake/build/vfs_fonts';\n\n(pdfMake as any).vfs = pdfFonts.pdfMake.vfs;\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PdfMakeService {\n  generatePDF(docDefinition: any, action: string = 'open'): void {\n    // docDefinition = {\n    //   header: 'C#Corner PDF Header',\n    //   content:\n    //     'Sample PDF generated with Angular and PDFMake for C#Corner Blog',\n    // };\n\n    switch (action) {\n      case 'open': {\n        pdfMake.createPdf(docDefinition).open();\n        break;\n      }\n      case 'download': {\n        pdfMake.createPdf(docDefinition).download();\n        break;\n      }\n      case 'print': {\n        pdfMake.createPdf(docDefinition).print();\n        break;\n      }\n      default: {\n        pdfMake.createPdf(docDefinition).open();\n        break;\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '../models/product';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductService {\n  configUrl = environment.apiUrl + '/products';\n  products: Product[] = [];\n\n  constructor(private http: HttpClient) {}\n\n  getProducts(productName: string | null | undefined): Observable<Product[]> {\n    const requestUrl = `${this.configUrl}?productName=${productName}`;\n    return this.http.get<Product[]>(requestUrl).pipe(retry(1));\n  }\n\n  updateProduct(product: Product): Observable<Product> {\n    const updateUrl = `${this.configUrl}/${product._id}`;\n    return this.http.put<Product>(updateUrl, product);\n  }\n\n  addProduct(product: Product): Observable<Product> {\n    return this.http.post<Product>(this.configUrl, product);\n  }\n\n  deleteProduct(product: Product): Observable<Product> {\n    const deleteUrl = `${this.configUrl}/${product._id}`;\n\n    return this.http.delete<Product>(deleteUrl);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of, timer, throwError } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReportsService {\n  configUrl = environment.apiUrl + '/reports';\n\n  constructor(private http: HttpClient) {}\n\n  getSpecificMonthProductSalesData(\n    year: number,\n    month: number\n  ): Observable<[]> {\n    // Jan: 0, Feb: 1,...\n    const url = `${this.configUrl}/monthly-product?year=${year}&month=${month}`;\n    return this.http.get<[]>(url);\n  }\n\n  getSpecificMonthCustomerSalesData(\n    year: number,\n    month: number\n  ): Observable<[]> {\n    // Jan: 0, Feb: 1,...\n    const url = `${this.configUrl}/monthly-customer?year=${year}&month=${month}`;\n    return this.http.get<[]>(url);\n  }\n\n  getSpecificMonthSalespersonSalesData(\n    year: number,\n    month: number\n  ): Observable<[]> {\n    // Jan: 0, Feb: 1,...\n    const url = `${this.configUrl}/monthly-salesperson?year=${year}&month=${month}`;\n    return this.http.get<[]>(url);\n  }\n\n  getSpecificMonthInitSalesData(year: number, month: number): Observable<[]> {\n    // Jan: 0, Feb: 1,...\n    const url = `${this.configUrl}/monthly-initdata?year=${year}&month=${month}`;\n    return this.http.get<[]>(url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchProductService {\n  private searchTerms = new BehaviorSubject<string | null>(null);\n  public readonly searchTermObs = this.searchTerms.asObservable();\n\n  constructor() {}\n  setSearchTerms(term: string) {\n    this.searchTerms.next(term);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeService {\n  private darkTheme = new BehaviorSubject<boolean>(false);\n  private handsetFlag = new BehaviorSubject<boolean>(false);\n  public readonly isDarkTheme = this.darkTheme.asObservable();\n  public readonly isHandset = this.handsetFlag.asObservable();\n\n  setDarkTheme(isDark: boolean): void {\n    this.darkTheme.next(isDark);\n  }\n\n  setHandset(isHand: boolean): void {\n    this.handsetFlag.next(isHand);\n  }\n  constructor() {}\n}\n","import { Directive } from '@angular/core';\nimport {\n  AbstractControl,\n  FormGroup,\n  NG_VALIDATORS,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n} from '@angular/forms';\n\n\n/** Password should be equal to repeat-password */\nexport const uniquePasswordValidator: ValidatorFn = (\ncontrol: AbstractControl\n): ValidationErrors | null => {\n  const password = control.get('password');\n  const repeatPassword = control.get('repeatPassword');\n\n  return password && repeatPassword && password.value !== repeatPassword.value\n    ? {\n        identifyPassword: true,\n      }\n    : null;\n};\n\n\n\n@Directive({\n  selector: '[appUniquePassword]',\n  providers: [\n    {\n      provide: NG_VALIDATORS,\n      useExisting: UniquePasswordDirective,\n      multi: true,\n    },\n  ],\n})\nexport class UniquePasswordDirective implements Validator {\n  validate(control: AbstractControl): ValidationErrors | null {\n    return uniquePasswordValidator(control);\n  }\n}\n\n","import { Directive, forwardRef, Injectable } from '@angular/core';\nimport {\n  AsyncValidator,\n  AbstractControl,\n  NG_ASYNC_VALIDATORS,\n  ValidationErrors,\n} from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { AuthService } from '../services/auth.service';\n\n@Injectable({ providedIn: 'root' })\nexport class UniqueUserValidator implements AsyncValidator {\n  constructor(private userService: AuthService) {}\n\n  validate(ctrl: AbstractControl): Observable<ValidationErrors | null> {\n    return this.userService.findUserByEmail(ctrl.value).pipe(\n      map((users) => {\n        return users.length >= 1 ? { userExists: true } : null;\n      }),\n      catchError(() => of(null))\n    );\n  }\n}\n\n@Directive({\n  selector: '[appUniqueUser]',\n  providers: [\n    {\n      provide: NG_ASYNC_VALIDATORS,\n      useExisting: forwardRef(() => UniqueUserValidator),\n      multi: true,\n    },\n  ],\n})\nexport class UniqueUserDirective implements AsyncValidator {\n  constructor(private validator: UniqueUserValidator) {}\n  validate(control: AbstractControl): Observable<ValidationErrors | null> {\n    return this.validator.validate(control);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  Router,\n  Resolve,\n  RouterStateSnapshot,\n  ActivatedRouteSnapshot,\n} from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport { UserService } from './user.service';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserResolver implements Resolve<User[]> {\n  constructor(private userService: UserService) {}\n  resolve(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<User[]> {\n    return this.userService.getUsers();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { retry } from 'rxjs/operators';\n\nimport { environment } from '../../environments/environment';\nimport { User, UserForUpdate } from '../models/user';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  configUrl = environment.apiUrl + '/users';\n\n  constructor(private http: HttpClient) {}\n\n  getUser(id: string): Observable<User> {\n    const url = `${this.configUrl}/${id}`;\n    return this.http.get<User>(url);\n  }\n\n  getUsers(): Observable<User[]> {\n    return this.http.get<User[]>(this.configUrl).pipe(retry(1));\n  }\n\n  updateUser(userId?: string, updatePart?: UserForUpdate): Observable<User> {\n    const url = `${this.configUrl}/${userId}`;\n    return this.http.put<User>(url, updatePart);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { CartService } from './cart.service';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class WishListService {\n  configUrl = environment.apiUrl + '/waitlists';\n\n  constructor(private http: HttpClient, private cartSrv: CartService) {}\n\n  addToWishList(itemId?: string): void {\n    this.http\n      .post(this.configUrl, {\n        customerId: this.cartSrv.currentCustomer?._id,\n        productId: itemId,\n      })\n      .subscribe();\n  }\n\n  removeFromWishList(id?: string) {\n    const deleteUrl = this.configUrl + '/' + id;\n    this.http.delete(deleteUrl).subscribe();\n  }\n}\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subject, timer } from 'rxjs';\nimport { takeUntil, tap } from 'rxjs/operators';\nimport {\n  customSlide,\n  customRotate,\n  customFade,\n} from 'src/app/shared/animations/triggers.animations';\nimport { ThemeService } from 'src/app/services/theme.service';\n\n@Component({\n  selector: 'app-animate-card-list',\n  templateUrl: './animate-card-list.component.html',\n  styleUrls: ['./animate-card-list.component.scss'],\n  animations: [customSlide, customRotate, customFade],\n})\nexport class AnimateCardListComponent implements OnInit, OnDestroy {\n  destroy$: Subject<void> = new Subject<void>();\n  antStatus = 'normal';\n  noDisplay = false;\n  innerWidth = 300;\n  innerHeight = 400;\n  darkMode = false;\n\n  garage = './assets/garage.jpg';\n  gas = './assets/gasoline.jpg';\n  imageSrcTop = this.garage;\n  imageSrcBottom = this.gas;\n  imageSloganTop = 'Service';\n  imageSloganBottom = 'Gasoline';\n  imageSrc = this.imageSrcTop;\n  showTop = true;\n  ob1 = timer(0, 2000);\n  speed = 1000;\n  leaveSpeed = 2000;\n  oldTop = '';\n\n  constructor(public themeSrv: ThemeService) {}\n\n  ngOnInit(): void {\n    this.ob1\n      .pipe(\n        tap((data) => {\n          const imageIndex = Math.ceil(Math.random() * 4);\n          this.imageSrc = `./assets/animate${imageIndex}.jpg`;\n          this.showTop = !this.showTop;\n        }),\n        takeUntil(this.destroy$)\n      )\n      .subscribe();\n  }\n\n  ngOnDestroy():void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<!-- styled input , type :range -->\n<div\n  [ngClass]=\"{ dark: (themeSrv.isDarkTheme | async) }\"\n  style=\"margin: 1rem auto; width: 100%; max-width: 300px; text-align: center\"\n>\n  <input\n    type=\"range\"\n    id=\"volume\"\n    name=\"volume\"\n    min=\"500\"\n    max=\"2000\"\n    #animateSpeed\n    [(ngModel)]=\"speed\"\n  />\n  <span> Animation Speed: &nbsp;{{ animateSpeed.value }}&nbsp;ms</span>\n</div>\n<div class=\"animatons_contain\">\n  <div class=\"card_wrapper\">\n    <div class=\"card_area\">\n      <app-animate-card\n        id=\"topCard\"\n        *ngIf=\"showTop\"\n        [@customSlide]=\"{ value: ':enter', params: { time: speed } }\"\n        [imageSlogan]=\"imageSloganTop\"\n        [imageSrc]=\"imageSrc\"\n      ></app-animate-card>\n      <app-animate-card\n        id=\"topCard\"\n        *ngIf=\"!showTop\"\n        [@customSlide]=\"{ value: ':enter', params: { time: speed } }\"\n        [imageSlogan]=\"imageSloganTop\"\n        [imageSrc]=\"imageSrc\"\n      ></app-animate-card>\n    </div>\n  </div>\n\n  <div class=\"card_wrapper\">\n    <div class=\"card_area\">\n      <app-animate-card\n        id=\"topCard\"\n        *ngIf=\"showTop\"\n        [@customRotate]=\"{ value: ':enter', params: { time: speed } }\"\n        [imageSlogan]=\"imageSloganTop\"\n        [imageSrc]=\"imageSrc\"\n      ></app-animate-card>\n      <app-animate-card\n        id=\"topCard\"\n        *ngIf=\"!showTop\"\n        [@customRotate]=\"{ value: ':enter', params: { time: speed } }\"\n        [imageSlogan]=\"imageSloganTop\"\n        [imageSrc]=\"imageSrc\"\n      ></app-animate-card>\n    </div>\n  </div>\n\n  <div class=\"card_wrapper\">\n    <div class=\"card_area\">\n      <app-animate-card\n        id=\"topCard\"\n        *ngIf=\"showTop\"\n        [@customFade]=\"{ value: ':enter', params: { time: speed } }\"\n        [imageSlogan]=\"imageSloganTop\"\n        [imageSrc]=\"imageSrc\"\n      ></app-animate-card>\n      <app-animate-card\n        id=\"topCard\"\n        *ngIf=\"!showTop\"\n        [@customFade]=\"{ value: ':enter', params: { time: speed } }\"\n        [imageSlogan]=\"imageSloganTop\"\n        [imageSrc]=\"imageSrc\"\n      ></app-animate-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n\n\n@Component({\n  selector: 'app-animate-card',\n  templateUrl: './animate-card.component.html',\n  styleUrls: ['./animate-card.component.scss'],\n})\nexport class AnimateCardComponent implements OnInit {\n  @Input() imageSrc?: string;\n  @Input() imageSlogan?: string;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"card\">\n  <img [src]=\"imageSrc\" class=\"card-image\" />\n  <div class=\"card-slogan\">{{ imageSlogan }}</div>\n</div>\n","// 3D card, flip to front when tapped\n\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component, OnInit } from '@angular/core';\nimport { CardData } from './cardData';\n\n@Component({\n  selector: 'app-game-card',\n  templateUrl: './game-card.component.html',\n  styleUrls: ['./game-card.component.scss'],\n  animations: [\n    trigger('cardFlip', [\n      state('default', style({ transform: 'none' })),\n      state('flipped', style({ transform: 'rotateY(180deg)' })),\n      transition('default=>flipped', [animate('400ms')]),\n      transition('flipped=>default', [animate('200ms')]),\n    ]),\n  ],\n})\nexport class GameCardComponent implements OnInit {\n  data: CardData = {\n    imageId: 'pDGNBK9A0sk',\n    state: 'default',\n  };\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  cardClicked(): void {\n    if (this.data.state === 'default') {\n      this.data.state = 'flipped';\n    } else {\n      this.data.state = 'default';\n    }\n  }\n}\n","<div class=\"card\" (click)=\"cardClicked()\" [@cardFlip]=\"data.state\">\n  <div class=\"face back\">\n    <img src=\"assets/animations/photo-back.jpg\" />\n  </div>\n  <div class=\"face front\">\n    <img src=\"assets/animations/photo-face.jpg\" />\n  </div>\n</div>\n","import {\n  trigger,\n  state,\n  animate,\n  style,\n  transition,\n} from '@angular/animations';\n\nexport function routerTransition() {\n  return slideToRight();\n}\n\nfunction slideToRight() {\n  return trigger('routerTransition', [\n    state('void', style({ position: 'fixed', width: '100%' })),\n    state('*', style({ position: 'fixed', width: '100%' })),\n    transition(':enter', [\n      style({ transform: 'translateX(-100%' }),\n      animate('0.5s ease-in-out', style({ transform: 'translateX(0%)' })),\n    ]),\n    transition(':leave', [\n      style({ transform: 'translateX(0%)' }),\n      animate('0.5s ease-in-out', style({ transform: 'translateX(100%)' })),\n    ]),\n  ]);\n}\n","import {\n  trigger,\n  state,\n  animate,\n  style,\n  transition,\n  keyframes,\n} from '@angular/animations';\n\n// time: maximum 2000ms. enter time must be less than leave time.\nexport const customSlide = trigger('customSlide', [\n  transition(\n    ':enter',\n    [\n      style({\n        bottom: '-200px',\n        opacity: '0.4',\n      }),\n      animate('{{ time }}ms', style({ bottom: '-5px', opacity: '1' })),\n    ],\n    { params: { time: '500' } }\n  ),\n  transition(':leave', animate('2s', style({ opacity: '0' }))),\n]);\n\nexport const customRotate = trigger('customRotate', [\n  transition(\n    ':enter',\n    [\n      animate(\n        '{{ time }}ms ease-in',\n        keyframes([\n          style({ transform: 'rotate(0deg)', opacity: '0.2' }),\n          style({\n            transform: 'rotate(360deg)',\n            opacity: '0.9',\n          }),\n        ])\n      ),\n    ],\n    { params: { time: '500' } }\n  ),\n  transition(':leave', animate('2s', style({ opacity: '0' }))),\n]);\n\nexport const customFade = trigger('customFade', [\n  transition(\n    ':enter',\n    [\n      animate(\n        '{{ time }}ms ease-in',\n        keyframes([\n          style({ transform: 'scale(1)', opacity: '0.2' }),\n          style({ transform: 'scale(1.2)', opacity: '0.5' }),\n          style({\n            transform: 'scale(1)',\n            opacity: '1',\n          }),\n        ])\n      ),\n    ],\n    { params: { time: '500' } }\n  ),\n  transition(':leave', animate('2s', style({ opacity: '0' }))),\n]);\n","import {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  AfterViewInit,\n  OnDestroy,\n} from '@angular/core';\nimport { MatChip, MatChipList } from '@angular/material/chips';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { map, takeUntil } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-chips-multi-select',\n  templateUrl: './chips-multi-select.component.html',\n  styleUrls: ['./chips-multi-select.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: ChipsMultiSelectComponent,\n      multi: true,\n    },\n  ],\n})\nexport class ChipsMultiSelectComponent\n  implements OnInit, OnDestroy, AfterViewInit, ControlValueAccessor\n{\n  @Input() options: string[] = [];\n  @ViewChild(MatChipList) chipList!: MatChipList;\n  destroy$: Subject<void> = new Subject<void>();\n  value: string[] = [];\n  sub?: Subscription;\n  disabled = false;\n\n  onChange!: (value: string[]) => void;\n\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  toggleSelection(chip: MatChip): void {\n    if (!this.disabled) {\n      chip.toggleSelected();\n    }\n  }\n\n  writeValue(value: string[]): void {\n    if (this.chipList && value) {\n      // when form value set when chips list initialized\n      this.selectChips(value);\n    } else if (value) {\n      // when chips not initialized\n      this.value = value;\n    }\n  }\n\n  selectChips(value: string[]): void {\n    this.chipList.chips.forEach((chip) => chip.deselect());\n\n    const chipsToSelect = this.chipList.chips.filter((c) =>\n      value.includes(c.value)\n    );\n\n    chipsToSelect.forEach((chip) => chip.select());\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  propagateChange(value: string[]) {\n    if (this.onChange) {\n      this.onChange(value);\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.sub = this.chipList.chipSelectionChanges\n      .pipe(\n        map((event) => event.source),\n        takeUntil(this.destroy$)\n      )\n      .subscribe((chip: MatChip) => {\n        if (chip.selected) {\n          this.value = [...this.value, chip.value];\n        } else {\n          this.value = this.value.filter((obj) => obj !== chip.value);\n        }\n        this.propagateChange(this.value);\n      });\n  }\n\n  registerOnTouched(fn: any): void {}\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  ngOnDestroy(): void {\n    this.sub?.unsubscribe();\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<mat-chip-list selectable multiple>\n<mat-chip  #c=\"matChip\" *ngFor=\"let option of options\" [value]=\"option\" (click)=\"toggleSelection(c)\">\n<mat-icon *ngIf=\"c.selected\">check</mat-icon>{{option}}\n</mat-chip>\n</mat-chip-list>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { ConfirmDialogData } from 'src/app/services/dialog.service';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss'],\n})\nexport class ConfirmComponent implements OnInit {\n  constructor(@Inject(MAT_DIALOG_DATA) public data: ConfirmDialogData) {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"header\">\n  <h2 mat-dialog-title>{{ data?.title }}</h2>\n  <button mat-icon-button [mat-dialog-close]=\"false\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n<div mat-dialog-content>{{ data?.message }}</div>\n<div mat-dialog-actions [align]=\"'end'\">\n  <button mat-raised-button [mat-dialog-close]=\"false\">\n    {{ data?.cancelText }}\n  </button>\n  <button mat-raised-button color=\"primary\" [mat-dialog-close]=\"true\">\n    {{ data?.confirmText }}\n  </button>\n</div>\n","import { Component, Inject } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nexport interface ListElement {\n  _id: string;\n  name: string;\n}\n\nexport interface StringArrayWithTitle {\n  title: string;\n  dataArray: ListElement[];\n}\n\n@Component({\n  selector: 'app-data-list',\n  templateUrl: './data-list.component.html',\n  styleUrls: ['./data-list.component.scss'],\n})\nexport class DataListComponent  {\n  displayedColumns: string[] = ['id', 'name'];\n  dataSource = new MatTableDataSource<ListElement>();\n\n  constructor(\n    public dialogRef: MatDialogRef<DataListComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: StringArrayWithTitle\n  ) {\n    this.dataSource.data = data.dataArray;\n  }\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n  }\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  selectOneElement(selectedRow: ListElement) {\n    this.dialogRef.close(selectedRow);\n  }\n}\n","<div class=\"header\">\n  <h2 mat-dialog-title>{{ data.title }}</h2>\n  <button mat-icon-button [mat-dialog-close]=\"false\">\n    <mat-icon>close</mat-icon>\n  </button>\n</div>\n\n<div mat-dialog-content>\n  <mat-form-field appearance=\"standard\">\n    <mat-label>Filter</mat-label>\n    <input\n      matInput\n      maxlength=\"20\"\n      (keyup)=\"applyFilter($event)\"\n      placeholder=\"Ex. \"\n      #input\n    />\n  </mat-form-field>\n\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!-- Id Column -->\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef>Id</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element._id | slice: -5 }}</td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{ element.name }}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr\n      mat-row\n      *matRowDef=\"let row; columns: displayedColumns\"\n      (click)=\"selectOneElement(row)\"\n    ></tr>\n    <!-- Row shown when there is no matching data. -->\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" attr.colspan=\"{{ displayedColumns.length }}\">\n        No data matching the filter \"{{ input.value }}\"\n      </td>\n    </tr>\n  </table>\n</div>\n","export function convertDateToYYYYmmDD(argDate: Date): string {\n  const year = argDate.getFullYear();\n  const month = argDate.getMonth() + 1;\n  const day = argDate.getDate();\n\n  const monthString = month.toString();\n  const dayString = day.toString();\n  const finalMonth = monthString.padStart(2, '0'); // 01,02,..12\n  const finalDay = dayString.padStart(2, '0'); // 01,02,...31\n\n  // YYYY-mm-DD\n  const dateString = year.toString() + '-' + finalMonth + '-' + finalDay;\n  return dateString;\n}\n","// The base64 encoded file should be converted to Blob before bing uploaded to server.\nexport function base64ToBlob(urlData: any, type: any) {\n  let arr = urlData.split(',');\n  // * and + are greedy ( the regex engine tried to find your pattern in the string )\n  // matched as many characters as possible. We add ?  to make regex not greedy\n  let mime = arr[0].match(/:(.*?);/)[1] || type;\n  // cut the head data of url ，turn the left data into byte format\n  // atob() function decodes a string of data which has been encoded using Base64 encoding. 解码\n  // You can use the btoa() method to encode and transmit data which may otherwise cause communication problems,\n  // then transmit it and use the atob() method to decode the data again\n\n  let byteCharacters = atob(arr[1]);\n  let sliceSize = 512;\n  let byteArrays = [];\n\n  for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n    const slice = byteCharacters.slice(offset, offset + sliceSize);\n\n    const byteNumbers = new Array(slice.length);\n    for (let i = 0; i < slice.length; i++) {\n      byteNumbers[i] = slice.charCodeAt(i);\n    }\n\n    const byteArray = new Uint8Array(byteNumbers);\n    byteArrays.push(byteArray);\n  }\n\n  const blob = new Blob(byteArrays, { type: mime });\n  return blob;\n}\n\nexport function saveBlobtoLocalFile(\n  blobData: any,\n  localFileName: string,\n  fileType = 'jpeg'\n) {\n  const file = new File([blobData], 'foo.txt', {\n    type: fileType,\n  });\n\n  //const blob = new Blob([output]);\n  //  const fileDownloadUrl = URL.createObjectURL(blob);\n\n  const downloadAncher = document.createElement('a');\n  downloadAncher.style.display = 'none';\n  const fileURL = URL.createObjectURL(file);\n  downloadAncher.href = fileURL;\n  downloadAncher.download = localFileName;\n  downloadAncher.click();\n  URL.revokeObjectURL(fileURL); // free up storage\n}\n\nexport function makeCSV(contents: any) {\n  let csv = '';\n  contents.forEach((value: any) => {\n    value.forEach((item: any, i: any) => {\n      let innerValue = item === null ? '' : '' + item;\n      let result = innerValue.replace(/\"/g, '\"\"');\n      // \" , \\n  That anyone of the 3 signs appears means the end of one line\n      if (result.search(/(\"|,|\\n)/g) >= 0) {\n        result = '\"' + result + '\"';\n      }\n      if (i > 0) {\n        csv += ',';\n      }\n      csv += result;\n    });\n    csv += '\\n';\n  });\n  return csv;\n}\n","export interface MockOrder {\n  position: number;\n  orderDate: Date;\n  productName: string;\n  customerName: string;\n  salespersonName: string;\n  amount: number;\n}\n\n/** Constants used to fill up our data base. */\nconst Products: string[] = [\n  'AC fertilizer',\n  'AB antifreeze',\n  'diesel No1',\n  'PD gas',\n  'WD30 diesel No2',\n  'W-40 Lubricant',\n  'Multi Lubricant',\n];\nconst SalesNames: string[] = [\n  'Maia',\n  'Asher',\n  'Olivia',\n  'Atticus',\n  'Amelia',\n  'Jack',\n  'Charlotte',\n];\n\nconst Customers: string[] = [\n  'Saint Laurent Hospital',\n  'Juif Community',\n  'Alibaba Group',\n  'Nord Station',\n  'Amelia Academy',\n];\nimport { Observable, of, BehaviorSubject } from 'rxjs';\nimport { ChartData } from '../models/chart-data';\n\n/** Builds and returns a new User. */\nfunction createNewOrder(id: number): MockOrder {\n  const salesName =\n    SalesNames[Math.round(Math.random() * (SalesNames.length - 1))];\n  const product = Products[Math.round(Math.random() * (Products.length - 1))];\n  const customer =\n    Customers[Math.round(Math.random() * (Customers.length - 1))];\n  const month = Math.round(Math.random() * 11);\n  const today = new Date();\n  const day = Math.round(Math.random() * 27);\n  const date = new Date(today.getFullYear(), month, day, 0, 0, 0);\n  const amount = Math.round(Math.random() * 2000);\n\n  return {\n    position: id,\n    orderDate: date,\n    productName: product,\n    customerName: customer,\n    salespersonName: salesName,\n    amount,\n  };\n}\n\nexport function createYearlyMockData(counter = 10000) {\n  // Create init orders\n  const orders = Array.from({ length: counter }, (_, k) =>\n    createNewOrder(k + 1)\n  );\n\n  // create product sales data array :  [{name:string, value:number}]\n  const productSalesArray: Array<ChartData> = [];\n  Products.forEach((product) => {\n    const filterResult = orders.filter(\n      (order) => order.productName === product\n    );\n    let productAmount = 0;\n    filterResult.forEach((order) => {\n      productAmount += order.amount;\n    });\n    productSalesArray.push({ name: product, value: productAmount });\n  });\n\n  // create customer sales data :   name:string[], amount:number[]\n  const customerAmountArray: number[] = [];\n  const customerNameArray: string[] = [];\n  Customers.forEach((customerName) => {\n    const filterResult = orders.filter(\n      (order) => order.customerName === customerName\n    );\n    let customerAmount = 0;\n    filterResult.forEach((order) => {\n      customerAmount += order.amount;\n    });\n    customerNameArray.push(customerName);\n    customerAmountArray.push(customerAmount);\n  });\n\n  // create salesperson sales data :   name:string[], amount:number[]\n  const salesAmountArray: number[] = [];\n  const salesNameArray: string[] = [];\n  SalesNames.forEach((sname) => {\n    const filterResult = orders.filter(\n      (order) => order.salespersonName === sname\n    );\n    let salesAmount = 0;\n    filterResult.forEach((order) => {\n      salesAmount += order.amount;\n    });\n\n    salesNameArray.push(sname);\n    salesAmountArray.push(salesAmount);\n  });\n\n  return {\n    initOrders: orders,\n    productsData: productSalesArray,\n    customersData: { names: customerNameArray, amounts: customerAmountArray },\n    salesData: { names: salesNameArray, amounts: salesAmountArray },\n  };\n}\n","export const environment = {\n  production: true,\n  apiUrl: ' https://bakend-jennifer.herokuapp.com/api',\n  imageUrl: 'https://bakend-jennifer.herokuapp.com',\n  mapKey: 'w',\n  weatherUrl: 'https://weather.',\n  cookieName: 'my-xsrf-token',\n  tokenHeaderName: 'my-x-xsrf-token',\n};\n\n// export const environment = {\n//   production: false,\n//   apiUrl: ' http://localhost:5000/api',\n//   imageUrl: 'http://localhost:5000',\n//   mapKey: 'w',\n//   weatherUrl: 'https://weather.',\n//   cookieName: 'my-xsrf-token',\n//   tokenHeaderName: 'my-x-xsrf-token',\n// };\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","var map = {\n\t\"./take-notes/take-notes.component\": [\n\t\t22671,\n\t\t\"src_app_lazy-components_take-notes_take-notes_component_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 97395;\nmodule.exports = webpackAsyncContext;"],"names":[],"sourceRoot":"webpack:///"}